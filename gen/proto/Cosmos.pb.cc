// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Cosmos.proto

#include "Cosmos.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace TW {
namespace Cosmos {
namespace Proto {
constexpr Amount::Amount(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : denom_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , amount_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AmountDefaultTypeInternal {
  constexpr AmountDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AmountDefaultTypeInternal() {}
  union {
    Amount _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AmountDefaultTypeInternal _Amount_default_instance_;
constexpr Fee::Fee(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : amounts_()
  , gas_(uint64_t{0u}){}
struct FeeDefaultTypeInternal {
  constexpr FeeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FeeDefaultTypeInternal() {}
  union {
    Fee _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FeeDefaultTypeInternal _Fee_default_instance_;
constexpr Height::Height(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : revision_number_(uint64_t{0u})
  , revision_height_(uint64_t{0u}){}
struct HeightDefaultTypeInternal {
  constexpr HeightDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HeightDefaultTypeInternal() {}
  union {
    Height _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HeightDefaultTypeInternal _Height_default_instance_;
constexpr THORChainAsset::THORChainAsset(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : chain_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , symbol_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , ticker_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , synth_(false){}
struct THORChainAssetDefaultTypeInternal {
  constexpr THORChainAssetDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~THORChainAssetDefaultTypeInternal() {}
  union {
    THORChainAsset _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT THORChainAssetDefaultTypeInternal _THORChainAsset_default_instance_;
constexpr THORChainCoin::THORChainCoin(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : amount_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , asset_(nullptr)
  , decimals_(int64_t{0}){}
struct THORChainCoinDefaultTypeInternal {
  constexpr THORChainCoinDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~THORChainCoinDefaultTypeInternal() {}
  union {
    THORChainCoin _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT THORChainCoinDefaultTypeInternal _THORChainCoin_default_instance_;
constexpr Message_Send::Message_Send(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : amounts_()
  , from_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , to_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_prefix_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Message_SendDefaultTypeInternal {
  constexpr Message_SendDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_SendDefaultTypeInternal() {}
  union {
    Message_Send _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_SendDefaultTypeInternal _Message_Send_default_instance_;
constexpr Message_Transfer::Message_Transfer(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : source_port_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , source_channel_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sender_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , receiver_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , token_(nullptr)
  , timeout_height_(nullptr)
  , timeout_timestamp_(uint64_t{0u}){}
struct Message_TransferDefaultTypeInternal {
  constexpr Message_TransferDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_TransferDefaultTypeInternal() {}
  union {
    Message_Transfer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_TransferDefaultTypeInternal _Message_Transfer_default_instance_;
constexpr Message_Delegate::Message_Delegate(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : delegator_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , validator_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_prefix_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , amount_(nullptr){}
struct Message_DelegateDefaultTypeInternal {
  constexpr Message_DelegateDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_DelegateDefaultTypeInternal() {}
  union {
    Message_Delegate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_DelegateDefaultTypeInternal _Message_Delegate_default_instance_;
constexpr Message_Undelegate::Message_Undelegate(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : delegator_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , validator_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_prefix_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , amount_(nullptr){}
struct Message_UndelegateDefaultTypeInternal {
  constexpr Message_UndelegateDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_UndelegateDefaultTypeInternal() {}
  union {
    Message_Undelegate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_UndelegateDefaultTypeInternal _Message_Undelegate_default_instance_;
constexpr Message_BeginRedelegate::Message_BeginRedelegate(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : delegator_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , validator_src_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , validator_dst_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_prefix_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , amount_(nullptr){}
struct Message_BeginRedelegateDefaultTypeInternal {
  constexpr Message_BeginRedelegateDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_BeginRedelegateDefaultTypeInternal() {}
  union {
    Message_BeginRedelegate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_BeginRedelegateDefaultTypeInternal _Message_BeginRedelegate_default_instance_;
constexpr Message_SetWithdrawAddress::Message_SetWithdrawAddress(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : delegator_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , withdraw_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_prefix_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Message_SetWithdrawAddressDefaultTypeInternal {
  constexpr Message_SetWithdrawAddressDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_SetWithdrawAddressDefaultTypeInternal() {}
  union {
    Message_SetWithdrawAddress _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_SetWithdrawAddressDefaultTypeInternal _Message_SetWithdrawAddress_default_instance_;
constexpr Message_WithdrawDelegationReward::Message_WithdrawDelegationReward(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : delegator_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , validator_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_prefix_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Message_WithdrawDelegationRewardDefaultTypeInternal {
  constexpr Message_WithdrawDelegationRewardDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_WithdrawDelegationRewardDefaultTypeInternal() {}
  union {
    Message_WithdrawDelegationReward _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_WithdrawDelegationRewardDefaultTypeInternal _Message_WithdrawDelegationReward_default_instance_;
constexpr Message_ExecuteContract::Message_ExecuteContract(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coins_()
  , sender_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , contract_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , execute_msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_prefix_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Message_ExecuteContractDefaultTypeInternal {
  constexpr Message_ExecuteContractDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_ExecuteContractDefaultTypeInternal() {}
  union {
    Message_ExecuteContract _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_ExecuteContractDefaultTypeInternal _Message_ExecuteContract_default_instance_;
constexpr Message_WasmTerraExecuteContractTransfer::Message_WasmTerraExecuteContractTransfer(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : sender_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , contract_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , amount_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , recipient_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Message_WasmTerraExecuteContractTransferDefaultTypeInternal {
  constexpr Message_WasmTerraExecuteContractTransferDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_WasmTerraExecuteContractTransferDefaultTypeInternal() {}
  union {
    Message_WasmTerraExecuteContractTransfer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_WasmTerraExecuteContractTransferDefaultTypeInternal _Message_WasmTerraExecuteContractTransfer_default_instance_;
constexpr Message_WasmTerraExecuteContractSend::Message_WasmTerraExecuteContractSend(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_()
  , sender_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , contract_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , amount_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , recipient_contract_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Message_WasmTerraExecuteContractSendDefaultTypeInternal {
  constexpr Message_WasmTerraExecuteContractSendDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_WasmTerraExecuteContractSendDefaultTypeInternal() {}
  union {
    Message_WasmTerraExecuteContractSend _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_WasmTerraExecuteContractSendDefaultTypeInternal _Message_WasmTerraExecuteContractSend_default_instance_;
constexpr Message_THORChainSend::Message_THORChainSend(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : amounts_()
  , from_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , to_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Message_THORChainSendDefaultTypeInternal {
  constexpr Message_THORChainSendDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_THORChainSendDefaultTypeInternal() {}
  union {
    Message_THORChainSend _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_THORChainSendDefaultTypeInternal _Message_THORChainSend_default_instance_;
constexpr Message_THORChainDeposit::Message_THORChainDeposit(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coins_()
  , memo_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , signer_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Message_THORChainDepositDefaultTypeInternal {
  constexpr Message_THORChainDepositDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_THORChainDepositDefaultTypeInternal() {}
  union {
    Message_THORChainDeposit _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_THORChainDepositDefaultTypeInternal _Message_THORChainDeposit_default_instance_;
constexpr Message_WasmTerraExecuteContractGeneric::Message_WasmTerraExecuteContractGeneric(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coins_()
  , sender_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , contract_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , execute_msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Message_WasmTerraExecuteContractGenericDefaultTypeInternal {
  constexpr Message_WasmTerraExecuteContractGenericDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_WasmTerraExecuteContractGenericDefaultTypeInternal() {}
  union {
    Message_WasmTerraExecuteContractGeneric _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_WasmTerraExecuteContractGenericDefaultTypeInternal _Message_WasmTerraExecuteContractGeneric_default_instance_;
constexpr Message_WasmExecuteContractTransfer::Message_WasmExecuteContractTransfer(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : sender_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , contract_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , amount_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , recipient_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Message_WasmExecuteContractTransferDefaultTypeInternal {
  constexpr Message_WasmExecuteContractTransferDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_WasmExecuteContractTransferDefaultTypeInternal() {}
  union {
    Message_WasmExecuteContractTransfer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_WasmExecuteContractTransferDefaultTypeInternal _Message_WasmExecuteContractTransfer_default_instance_;
constexpr Message_WasmExecuteContractSend::Message_WasmExecuteContractSend(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_()
  , sender_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , contract_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , amount_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , recipient_contract_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Message_WasmExecuteContractSendDefaultTypeInternal {
  constexpr Message_WasmExecuteContractSendDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_WasmExecuteContractSendDefaultTypeInternal() {}
  union {
    Message_WasmExecuteContractSend _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_WasmExecuteContractSendDefaultTypeInternal _Message_WasmExecuteContractSend_default_instance_;
constexpr Message_WasmExecuteContractGeneric::Message_WasmExecuteContractGeneric(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coins_()
  , sender_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , contract_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , execute_msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Message_WasmExecuteContractGenericDefaultTypeInternal {
  constexpr Message_WasmExecuteContractGenericDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_WasmExecuteContractGenericDefaultTypeInternal() {}
  union {
    Message_WasmExecuteContractGeneric _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_WasmExecuteContractGenericDefaultTypeInternal _Message_WasmExecuteContractGeneric_default_instance_;
constexpr Message_RawJSON::Message_RawJSON(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , value_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Message_RawJSONDefaultTypeInternal {
  constexpr Message_RawJSONDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_RawJSONDefaultTypeInternal() {}
  union {
    Message_RawJSON _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_RawJSONDefaultTypeInternal _Message_RawJSON_default_instance_;
constexpr Message_SignDirect::Message_SignDirect(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : body_bytes_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , auth_info_bytes_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Message_SignDirectDefaultTypeInternal {
  constexpr Message_SignDirectDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_SignDirectDefaultTypeInternal() {}
  union {
    Message_SignDirect _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_SignDirectDefaultTypeInternal _Message_SignDirect_default_instance_;
constexpr Message_StakeAuthorization_Validators::Message_StakeAuthorization_Validators(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : address_(){}
struct Message_StakeAuthorization_ValidatorsDefaultTypeInternal {
  constexpr Message_StakeAuthorization_ValidatorsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_StakeAuthorization_ValidatorsDefaultTypeInternal() {}
  union {
    Message_StakeAuthorization_Validators _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_StakeAuthorization_ValidatorsDefaultTypeInternal _Message_StakeAuthorization_Validators_default_instance_;
constexpr Message_StakeAuthorization::Message_StakeAuthorization(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : max_tokens_(nullptr)
  , authorization_type_(0)

  , _oneof_case_{}{}
struct Message_StakeAuthorizationDefaultTypeInternal {
  constexpr Message_StakeAuthorizationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_StakeAuthorizationDefaultTypeInternal() {}
  union {
    Message_StakeAuthorization _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_StakeAuthorizationDefaultTypeInternal _Message_StakeAuthorization_default_instance_;
constexpr Message_AuthGrant::Message_AuthGrant(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : granter_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grantee_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , expiration_(int64_t{0})
  , _oneof_case_{}{}
struct Message_AuthGrantDefaultTypeInternal {
  constexpr Message_AuthGrantDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_AuthGrantDefaultTypeInternal() {}
  union {
    Message_AuthGrant _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_AuthGrantDefaultTypeInternal _Message_AuthGrant_default_instance_;
constexpr Message_AuthRevoke::Message_AuthRevoke(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : granter_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grantee_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , msg_type_url_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Message_AuthRevokeDefaultTypeInternal {
  constexpr Message_AuthRevokeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_AuthRevokeDefaultTypeInternal() {}
  union {
    Message_AuthRevoke _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_AuthRevokeDefaultTypeInternal _Message_AuthRevoke_default_instance_;
constexpr Message_MsgVote::Message_MsgVote(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : voter_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , proposal_id_(uint64_t{0u})
  , option_(0)
{}
struct Message_MsgVoteDefaultTypeInternal {
  constexpr Message_MsgVoteDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_MsgVoteDefaultTypeInternal() {}
  union {
    Message_MsgVote _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_MsgVoteDefaultTypeInternal _Message_MsgVote_default_instance_;
constexpr Message_MsgStrideLiquidStakingStake::Message_MsgStrideLiquidStakingStake(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : creator_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , amount_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , host_denom_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Message_MsgStrideLiquidStakingStakeDefaultTypeInternal {
  constexpr Message_MsgStrideLiquidStakingStakeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_MsgStrideLiquidStakingStakeDefaultTypeInternal() {}
  union {
    Message_MsgStrideLiquidStakingStake _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_MsgStrideLiquidStakingStakeDefaultTypeInternal _Message_MsgStrideLiquidStakingStake_default_instance_;
constexpr Message_MsgStrideLiquidStakingRedeem::Message_MsgStrideLiquidStakingRedeem(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : creator_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , amount_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , host_zone_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , receiver_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Message_MsgStrideLiquidStakingRedeemDefaultTypeInternal {
  constexpr Message_MsgStrideLiquidStakingRedeemDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Message_MsgStrideLiquidStakingRedeemDefaultTypeInternal() {}
  union {
    Message_MsgStrideLiquidStakingRedeem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Message_MsgStrideLiquidStakingRedeemDefaultTypeInternal _Message_MsgStrideLiquidStakingRedeem_default_instance_;
constexpr Message::Message(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct MessageDefaultTypeInternal {
  constexpr MessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MessageDefaultTypeInternal() {}
  union {
    Message _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MessageDefaultTypeInternal _Message_default_instance_;
constexpr SigningInput::SigningInput(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : messages_()
  , chain_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , memo_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , private_key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , public_key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , fee_(nullptr)
  , account_number_(uint64_t{0u})
  , signing_mode_(0)

  , mode_(0)

  , sequence_(uint64_t{0u}){}
struct SigningInputDefaultTypeInternal {
  constexpr SigningInputDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SigningInputDefaultTypeInternal() {}
  union {
    SigningInput _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SigningInputDefaultTypeInternal _SigningInput_default_instance_;
constexpr SigningOutput::SigningOutput(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : signature_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , json_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , serialized_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , signature_json_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , error_message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , error_(0)
{}
struct SigningOutputDefaultTypeInternal {
  constexpr SigningOutputDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SigningOutputDefaultTypeInternal() {}
  union {
    SigningOutput _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SigningOutputDefaultTypeInternal _SigningOutput_default_instance_;
}  // namespace Proto
}  // namespace Cosmos
}  // namespace TW
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Cosmos_2eproto[33];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_Cosmos_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Cosmos_2eproto = nullptr;

const uint32_t TableStruct_Cosmos_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Amount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Amount, denom_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Amount, amount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Fee, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Fee, amounts_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Fee, gas_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Height, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Height, revision_number_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Height, revision_height_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::THORChainAsset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::THORChainAsset, chain_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::THORChainAsset, symbol_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::THORChainAsset, ticker_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::THORChainAsset, synth_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::THORChainCoin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::THORChainCoin, asset_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::THORChainCoin, amount_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::THORChainCoin, decimals_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_Send, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_Send, from_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_Send, to_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_Send, amounts_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_Send, type_prefix_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_Transfer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_Transfer, source_port_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_Transfer, source_channel_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_Transfer, token_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_Transfer, sender_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_Transfer, receiver_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_Transfer, timeout_height_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_Transfer, timeout_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_Delegate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_Delegate, delegator_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_Delegate, validator_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_Delegate, amount_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_Delegate, type_prefix_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_Undelegate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_Undelegate, delegator_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_Undelegate, validator_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_Undelegate, amount_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_Undelegate, type_prefix_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_BeginRedelegate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_BeginRedelegate, delegator_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_BeginRedelegate, validator_src_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_BeginRedelegate, validator_dst_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_BeginRedelegate, amount_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_BeginRedelegate, type_prefix_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_SetWithdrawAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_SetWithdrawAddress, delegator_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_SetWithdrawAddress, withdraw_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_SetWithdrawAddress, type_prefix_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WithdrawDelegationReward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WithdrawDelegationReward, delegator_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WithdrawDelegationReward, validator_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WithdrawDelegationReward, type_prefix_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_ExecuteContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_ExecuteContract, sender_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_ExecuteContract, contract_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_ExecuteContract, execute_msg_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_ExecuteContract, coins_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_ExecuteContract, type_prefix_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmTerraExecuteContractTransfer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmTerraExecuteContractTransfer, sender_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmTerraExecuteContractTransfer, contract_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmTerraExecuteContractTransfer, amount_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmTerraExecuteContractTransfer, recipient_address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmTerraExecuteContractSend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmTerraExecuteContractSend, sender_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmTerraExecuteContractSend, contract_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmTerraExecuteContractSend, amount_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmTerraExecuteContractSend, recipient_contract_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmTerraExecuteContractSend, msg_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmTerraExecuteContractSend, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_THORChainSend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_THORChainSend, from_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_THORChainSend, to_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_THORChainSend, amounts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_THORChainDeposit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_THORChainDeposit, coins_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_THORChainDeposit, memo_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_THORChainDeposit, signer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmTerraExecuteContractGeneric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmTerraExecuteContractGeneric, sender_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmTerraExecuteContractGeneric, contract_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmTerraExecuteContractGeneric, execute_msg_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmTerraExecuteContractGeneric, coins_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmExecuteContractTransfer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmExecuteContractTransfer, sender_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmExecuteContractTransfer, contract_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmExecuteContractTransfer, amount_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmExecuteContractTransfer, recipient_address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmExecuteContractSend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmExecuteContractSend, sender_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmExecuteContractSend, contract_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmExecuteContractSend, amount_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmExecuteContractSend, recipient_contract_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmExecuteContractSend, msg_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmExecuteContractSend, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmExecuteContractGeneric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmExecuteContractGeneric, sender_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmExecuteContractGeneric, contract_address_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmExecuteContractGeneric, execute_msg_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_WasmExecuteContractGeneric, coins_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_RawJSON, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_RawJSON, type_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_RawJSON, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_SignDirect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_SignDirect, body_bytes_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_SignDirect, auth_info_bytes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_StakeAuthorization_Validators, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_StakeAuthorization_Validators, address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_StakeAuthorization, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_StakeAuthorization, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_StakeAuthorization, max_tokens_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_StakeAuthorization, authorization_type_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_StakeAuthorization, validators_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_AuthGrant, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_AuthGrant, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_AuthGrant, granter_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_AuthGrant, grantee_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_AuthGrant, expiration_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_AuthGrant, grant_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_AuthRevoke, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_AuthRevoke, granter_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_AuthRevoke, grantee_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_AuthRevoke, msg_type_url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_MsgVote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_MsgVote, proposal_id_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_MsgVote, voter_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_MsgVote, option_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingStake, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingStake, creator_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingStake, amount_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingStake, host_denom_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingRedeem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingRedeem, creator_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingRedeem, amount_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingRedeem, host_zone_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingRedeem, receiver_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::Message, message_oneof_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::SigningInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::SigningInput, signing_mode_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::SigningInput, account_number_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::SigningInput, chain_id_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::SigningInput, fee_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::SigningInput, memo_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::SigningInput, sequence_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::SigningInput, private_key_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::SigningInput, messages_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::SigningInput, mode_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::SigningInput, public_key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::SigningOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::SigningOutput, signature_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::SigningOutput, json_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::SigningOutput, serialized_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::SigningOutput, signature_json_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::SigningOutput, error_message_),
  PROTOBUF_FIELD_OFFSET(::TW::Cosmos::Proto::SigningOutput, error_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::TW::Cosmos::Proto::Amount)},
  { 8, -1, -1, sizeof(::TW::Cosmos::Proto::Fee)},
  { 16, -1, -1, sizeof(::TW::Cosmos::Proto::Height)},
  { 24, -1, -1, sizeof(::TW::Cosmos::Proto::THORChainAsset)},
  { 34, -1, -1, sizeof(::TW::Cosmos::Proto::THORChainCoin)},
  { 43, -1, -1, sizeof(::TW::Cosmos::Proto::Message_Send)},
  { 53, -1, -1, sizeof(::TW::Cosmos::Proto::Message_Transfer)},
  { 66, -1, -1, sizeof(::TW::Cosmos::Proto::Message_Delegate)},
  { 76, -1, -1, sizeof(::TW::Cosmos::Proto::Message_Undelegate)},
  { 86, -1, -1, sizeof(::TW::Cosmos::Proto::Message_BeginRedelegate)},
  { 97, -1, -1, sizeof(::TW::Cosmos::Proto::Message_SetWithdrawAddress)},
  { 106, -1, -1, sizeof(::TW::Cosmos::Proto::Message_WithdrawDelegationReward)},
  { 115, -1, -1, sizeof(::TW::Cosmos::Proto::Message_ExecuteContract)},
  { 126, -1, -1, sizeof(::TW::Cosmos::Proto::Message_WasmTerraExecuteContractTransfer)},
  { 136, -1, -1, sizeof(::TW::Cosmos::Proto::Message_WasmTerraExecuteContractSend)},
  { 148, -1, -1, sizeof(::TW::Cosmos::Proto::Message_THORChainSend)},
  { 157, -1, -1, sizeof(::TW::Cosmos::Proto::Message_THORChainDeposit)},
  { 166, -1, -1, sizeof(::TW::Cosmos::Proto::Message_WasmTerraExecuteContractGeneric)},
  { 176, -1, -1, sizeof(::TW::Cosmos::Proto::Message_WasmExecuteContractTransfer)},
  { 186, -1, -1, sizeof(::TW::Cosmos::Proto::Message_WasmExecuteContractSend)},
  { 198, -1, -1, sizeof(::TW::Cosmos::Proto::Message_WasmExecuteContractGeneric)},
  { 208, -1, -1, sizeof(::TW::Cosmos::Proto::Message_RawJSON)},
  { 216, -1, -1, sizeof(::TW::Cosmos::Proto::Message_SignDirect)},
  { 224, -1, -1, sizeof(::TW::Cosmos::Proto::Message_StakeAuthorization_Validators)},
  { 231, -1, -1, sizeof(::TW::Cosmos::Proto::Message_StakeAuthorization)},
  { 242, -1, -1, sizeof(::TW::Cosmos::Proto::Message_AuthGrant)},
  { 253, -1, -1, sizeof(::TW::Cosmos::Proto::Message_AuthRevoke)},
  { 262, -1, -1, sizeof(::TW::Cosmos::Proto::Message_MsgVote)},
  { 271, -1, -1, sizeof(::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingStake)},
  { 280, -1, -1, sizeof(::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingRedeem)},
  { 290, -1, -1, sizeof(::TW::Cosmos::Proto::Message)},
  { 320, -1, -1, sizeof(::TW::Cosmos::Proto::SigningInput)},
  { 336, -1, -1, sizeof(::TW::Cosmos::Proto::SigningOutput)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Amount_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Fee_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Height_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_THORChainAsset_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_THORChainCoin_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_Send_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_Transfer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_Delegate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_Undelegate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_BeginRedelegate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_SetWithdrawAddress_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_WithdrawDelegationReward_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_ExecuteContract_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_WasmTerraExecuteContractTransfer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_WasmTerraExecuteContractSend_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_THORChainSend_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_THORChainDeposit_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_WasmTerraExecuteContractGeneric_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_WasmExecuteContractTransfer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_WasmExecuteContractSend_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_WasmExecuteContractGeneric_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_RawJSON_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_SignDirect_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_StakeAuthorization_Validators_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_StakeAuthorization_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_AuthGrant_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_AuthRevoke_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_MsgVote_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_MsgStrideLiquidStakingStake_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_MsgStrideLiquidStakingRedeem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_Message_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_SigningInput_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Cosmos::Proto::_SigningOutput_default_instance_),
};

const char descriptor_table_protodef_Cosmos_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014Cosmos.proto\022\017TW.Cosmos.Proto\032\014Common."
  "proto\"\'\n\006Amount\022\r\n\005denom\030\001 \001(\t\022\016\n\006amount"
  "\030\002 \001(\t\"<\n\003Fee\022(\n\007amounts\030\001 \003(\0132\027.TW.Cosm"
  "os.Proto.Amount\022\013\n\003gas\030\002 \001(\004\":\n\006Height\022\027"
  "\n\017revision_number\030\001 \001(\004\022\027\n\017revision_heig"
  "ht\030\002 \001(\004\"N\n\016THORChainAsset\022\r\n\005chain\030\001 \001("
  "\t\022\016\n\006symbol\030\002 \001(\t\022\016\n\006ticker\030\003 \001(\t\022\r\n\005syn"
  "th\030\004 \001(\010\"a\n\rTHORChainCoin\022.\n\005asset\030\001 \001(\013"
  "2\037.TW.Cosmos.Proto.THORChainAsset\022\016\n\006amo"
  "unt\030\002 \001(\t\022\020\n\010decimals\030\003 \001(\003\"\214(\n\007Message\022"
  ";\n\022send_coins_message\030\001 \001(\0132\035.TW.Cosmos."
  "Proto.Message.SendH\000\022D\n\027transfer_tokens_"
  "message\030\002 \001(\0132!.TW.Cosmos.Proto.Message."
  "TransferH\000\022:\n\rstake_message\030\003 \001(\0132!.TW.C"
  "osmos.Proto.Message.DelegateH\000\022>\n\017unstak"
  "e_message\030\004 \001(\0132#.TW.Cosmos.Proto.Messag"
  "e.UndelegateH\000\022C\n\017restake_message\030\005 \001(\0132"
  "(.TW.Cosmos.Proto.Message.BeginRedelegat"
  "eH\000\022Z\n\035withdraw_stake_reward_message\030\006 \001"
  "(\01321.TW.Cosmos.Proto.Message.WithdrawDel"
  "egationRewardH\000\022<\n\020raw_json_message\030\007 \001("
  "\0132 .TW.Cosmos.Proto.Message.RawJSONH\000\022q\n"
  ",wasm_terra_execute_contract_transfer_me"
  "ssage\030\010 \001(\01329.TW.Cosmos.Proto.Message.Wa"
  "smTerraExecuteContractTransferH\000\022i\n(wasm"
  "_terra_execute_contract_send_message\030\t \001"
  "(\01325.TW.Cosmos.Proto.Message.WasmTerraEx"
  "ecuteContractSendH\000\022H\n\026thorchain_send_me"
  "ssage\030\n \001(\0132&.TW.Cosmos.Proto.Message.TH"
  "ORChainSendH\000\022L\n\030execute_contract_messag"
  "e\030\013 \001(\0132(.TW.Cosmos.Proto.Message.Execut"
  "eContractH\000\022g\n#wasm_terra_execute_contra"
  "ct_generic\030\014 \001(\01328.TW.Cosmos.Proto.Messa"
  "ge.WasmTerraExecuteContractGenericH\000\022f\n&"
  "wasm_execute_contract_transfer_message\030\r"
  " \001(\01324.TW.Cosmos.Proto.Message.WasmExecu"
  "teContractTransferH\000\022^\n\"wasm_execute_con"
  "tract_send_message\030\016 \001(\01320.TW.Cosmos.Pro"
  "to.Message.WasmExecuteContractSendH\000\022\\\n\035"
  "wasm_execute_contract_generic\030\017 \001(\01323.TW"
  ".Cosmos.Proto.Message.WasmExecuteContrac"
  "tGenericH\000\022B\n\023sign_direct_message\030\020 \001(\0132"
  "#.TW.Cosmos.Proto.Message.SignDirectH\000\0228"
  "\n\nauth_grant\030\021 \001(\0132\".TW.Cosmos.Proto.Mes"
  "sage.AuthGrantH\000\022:\n\013auth_revoke\030\022 \001(\0132#."
  "TW.Cosmos.Proto.Message.AuthRevokeH\000\022S\n\034"
  "set_withdraw_address_message\030\023 \001(\0132+.TW."
  "Cosmos.Proto.Message.SetWithdrawAddressH"
  "\000\0224\n\010msg_vote\030\024 \001(\0132 .TW.Cosmos.Proto.Me"
  "ssage.MsgVoteH\000\022_\n\037msg_stride_liquid_sta"
  "king_stake\030\025 \001(\01324.TW.Cosmos.Proto.Messa"
  "ge.MsgStrideLiquidStakingStakeH\000\022a\n msg_"
  "stride_liquid_staking_redeem\030\026 \001(\01325.TW."
  "Cosmos.Proto.Message.MsgStrideLiquidStak"
  "ingRedeemH\000\022N\n\031thorchain_deposit_message"
  "\030\027 \001(\0132).TW.Cosmos.Proto.Message.THORCha"
  "inDepositH\000\032o\n\004Send\022\024\n\014from_address\030\001 \001("
  "\t\022\022\n\nto_address\030\002 \001(\t\022(\n\007amounts\030\003 \003(\0132\027"
  ".TW.Cosmos.Proto.Amount\022\023\n\013type_prefix\030\004"
  " \001(\t\032\315\001\n\010Transfer\022\023\n\013source_port\030\001 \001(\t\022\026"
  "\n\016source_channel\030\002 \001(\t\022&\n\005token\030\003 \001(\0132\027."
  "TW.Cosmos.Proto.Amount\022\016\n\006sender\030\004 \001(\t\022\020"
  "\n\010receiver\030\005 \001(\t\022/\n\016timeout_height\030\006 \001(\013"
  "2\027.TW.Cosmos.Proto.Height\022\031\n\021timeout_tim"
  "estamp\030\007 \001(\004\032~\n\010Delegate\022\031\n\021delegator_ad"
  "dress\030\001 \001(\t\022\031\n\021validator_address\030\002 \001(\t\022\'"
  "\n\006amount\030\003 \001(\0132\027.TW.Cosmos.Proto.Amount\022"
  "\023\n\013type_prefix\030\004 \001(\t\032\200\001\n\nUndelegate\022\031\n\021d"
  "elegator_address\030\001 \001(\t\022\031\n\021validator_addr"
  "ess\030\002 \001(\t\022\'\n\006amount\030\003 \001(\0132\027.TW.Cosmos.Pr"
  "oto.Amount\022\023\n\013type_prefix\030\004 \001(\t\032\250\001\n\017Begi"
  "nRedelegate\022\031\n\021delegator_address\030\001 \001(\t\022\035"
  "\n\025validator_src_address\030\002 \001(\t\022\035\n\025validat"
  "or_dst_address\030\003 \001(\t\022\'\n\006amount\030\004 \001(\0132\027.T"
  "W.Cosmos.Proto.Amount\022\023\n\013type_prefix\030\005 \001"
  "(\t\032^\n\022SetWithdrawAddress\022\031\n\021delegator_ad"
  "dress\030\001 \001(\t\022\030\n\020withdraw_address\030\002 \001(\t\022\023\n"
  "\013type_prefix\030\003 \001(\t\032e\n\030WithdrawDelegation"
  "Reward\022\031\n\021delegator_address\030\001 \001(\t\022\031\n\021val"
  "idator_address\030\002 \001(\t\022\023\n\013type_prefix\030\003 \001("
  "\t\032\205\001\n\017ExecuteContract\022\016\n\006sender\030\001 \001(\t\022\020\n"
  "\010contract\030\002 \001(\t\022\023\n\013execute_msg\030\003 \001(\t\022&\n\005"
  "coins\030\004 \003(\0132\027.TW.Cosmos.Proto.Amount\022\023\n\013"
  "type_prefix\030\005 \001(\t\032\177\n WasmTerraExecuteCon"
  "tractTransfer\022\026\n\016sender_address\030\001 \001(\t\022\030\n"
  "\020contract_address\030\002 \001(\t\022\016\n\006amount\030\003 \001(\014\022"
  "\031\n\021recipient_address\030\004 \001(\t\032\237\001\n\034WasmTerra"
  "ExecuteContractSend\022\026\n\016sender_address\030\001 "
  "\001(\t\022\030\n\020contract_address\030\002 \001(\t\022\016\n\006amount\030"
  "\003 \001(\014\022\"\n\032recipient_contract_address\030\004 \001("
  "\t\022\013\n\003msg\030\005 \001(\t\022\014\n\004coin\030\006 \003(\t\032c\n\rTHORChai"
  "nSend\022\024\n\014from_address\030\001 \001(\014\022\022\n\nto_addres"
  "s\030\002 \001(\014\022(\n\007amounts\030\003 \003(\0132\027.TW.Cosmos.Pro"
  "to.Amount\032_\n\020THORChainDeposit\022-\n\005coins\030\001"
  " \003(\0132\036.TW.Cosmos.Proto.THORChainCoin\022\014\n\004"
  "memo\030\002 \001(\t\022\016\n\006signer\030\003 \001(\014\032\220\001\n\037WasmTerra"
  "ExecuteContractGeneric\022\026\n\016sender_address"
  "\030\001 \001(\t\022\030\n\020contract_address\030\002 \001(\t\022\023\n\013exec"
  "ute_msg\030\003 \001(\t\022&\n\005coins\030\005 \003(\0132\027.TW.Cosmos"
  ".Proto.Amount\032z\n\033WasmExecuteContractTran"
  "sfer\022\026\n\016sender_address\030\001 \001(\t\022\030\n\020contract"
  "_address\030\002 \001(\t\022\016\n\006amount\030\003 \001(\014\022\031\n\021recipi"
  "ent_address\030\004 \001(\t\032\232\001\n\027WasmExecuteContrac"
  "tSend\022\026\n\016sender_address\030\001 \001(\t\022\030\n\020contrac"
  "t_address\030\002 \001(\t\022\016\n\006amount\030\003 \001(\014\022\"\n\032recip"
  "ient_contract_address\030\004 \001(\t\022\013\n\003msg\030\005 \001(\t"
  "\022\014\n\004coin\030\006 \003(\t\032\213\001\n\032WasmExecuteContractGe"
  "neric\022\026\n\016sender_address\030\001 \001(\t\022\030\n\020contrac"
  "t_address\030\002 \001(\t\022\023\n\013execute_msg\030\003 \001(\t\022&\n\005"
  "coins\030\005 \003(\0132\027.TW.Cosmos.Proto.Amount\032&\n\007"
  "RawJSON\022\014\n\004type\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\0329\n\n"
  "SignDirect\022\022\n\nbody_bytes\030\001 \001(\014\022\027\n\017auth_i"
  "nfo_bytes\030\002 \001(\014\032\321\002\n\022StakeAuthorization\022+"
  "\n\nmax_tokens\030\001 \001(\0132\027.TW.Cosmos.Proto.Amo"
  "unt\022L\n\nallow_list\030\002 \001(\01326.TW.Cosmos.Prot"
  "o.Message.StakeAuthorization.ValidatorsH"
  "\000\022K\n\tdeny_list\030\003 \001(\01326.TW.Cosmos.Proto.M"
  "essage.StakeAuthorization.ValidatorsH\000\022F"
  "\n\022authorization_type\030\004 \001(\0162*.TW.Cosmos.P"
  "roto.Message.AuthorizationType\032\035\n\nValida"
  "tors\022\017\n\007address\030\001 \003(\tB\014\n\nvalidators\032\223\001\n\t"
  "AuthGrant\022\017\n\007granter\030\001 \001(\t\022\017\n\007grantee\030\002 "
  "\001(\t\022B\n\013grant_stake\030\003 \001(\0132+.TW.Cosmos.Pro"
  "to.Message.StakeAuthorizationH\000\022\022\n\nexpir"
  "ation\030\004 \001(\003B\014\n\ngrant_type\032D\n\nAuthRevoke\022"
  "\017\n\007granter\030\001 \001(\t\022\017\n\007grantee\030\002 \001(\t\022\024\n\014msg"
  "_type_url\030\003 \001(\t\032b\n\007MsgVote\022\023\n\013proposal_i"
  "d\030\001 \001(\004\022\r\n\005voter\030\002 \001(\t\0223\n\006option\030\003 \001(\0162#"
  ".TW.Cosmos.Proto.Message.VoteOption\032R\n\033M"
  "sgStrideLiquidStakingStake\022\017\n\007creator\030\001 "
  "\001(\t\022\016\n\006amount\030\002 \001(\t\022\022\n\nhost_denom\030\003 \001(\t\032"
  "d\n\034MsgStrideLiquidStakingRedeem\022\017\n\007creat"
  "or\030\001 \001(\t\022\016\n\006amount\030\002 \001(\t\022\021\n\thost_zone\030\003 "
  "\001(\t\022\020\n\010receiver\030\004 \001(\t\"R\n\021AuthorizationTy"
  "pe\022\017\n\013UNSPECIFIED\020\000\022\014\n\010DELEGATE\020\001\022\016\n\nUND"
  "ELEGATE\020\002\022\016\n\nREDELEGATE\020\003\"N\n\nVoteOption\022"
  "\020\n\014_UNSPECIFIED\020\000\022\007\n\003YES\020\001\022\013\n\007ABSTAIN\020\002\022"
  "\006\n\002NO\020\003\022\020\n\014NO_WITH_VETO\020\004B\017\n\rmessage_one"
  "of\"\262\002\n\014SigningInput\0222\n\014signing_mode\030\001 \001("
  "\0162\034.TW.Cosmos.Proto.SigningMode\022\026\n\016accou"
  "nt_number\030\002 \001(\004\022\020\n\010chain_id\030\003 \001(\t\022!\n\003fee"
  "\030\004 \001(\0132\024.TW.Cosmos.Proto.Fee\022\014\n\004memo\030\005 \001"
  "(\t\022\020\n\010sequence\030\006 \001(\004\022\023\n\013private_key\030\007 \001("
  "\014\022*\n\010messages\030\010 \003(\0132\030.TW.Cosmos.Proto.Me"
  "ssage\022,\n\004mode\030\t \001(\0162\036.TW.Cosmos.Proto.Br"
  "oadcastMode\022\022\n\npublic_key\030\n \001(\014\"\241\001\n\rSign"
  "ingOutput\022\021\n\tsignature\030\001 \001(\014\022\014\n\004json\030\002 \001"
  "(\t\022\022\n\nserialized\030\003 \001(\t\022\026\n\016signature_json"
  "\030\004 \001(\t\022\025\n\rerror_message\030\005 \001(\t\022,\n\005error\030\006"
  " \001(\0162\035.TW.Common.Proto.SigningError*/\n\rB"
  "roadcastMode\022\t\n\005BLOCK\020\000\022\010\n\004SYNC\020\001\022\t\n\005ASY"
  "NC\020\002*%\n\013SigningMode\022\010\n\004JSON\020\000\022\014\n\010Protobu"
  "f\020\001B\027\n\025wallet.core.jni.protob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Cosmos_2eproto_deps[1] = {
  &::descriptor_table_Common_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Cosmos_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Cosmos_2eproto = {
  false, false, 6116, descriptor_table_protodef_Cosmos_2eproto, "Cosmos.proto", 
  &descriptor_table_Cosmos_2eproto_once, descriptor_table_Cosmos_2eproto_deps, 1, 33,
  schemas, file_default_instances, TableStruct_Cosmos_2eproto::offsets,
  file_level_metadata_Cosmos_2eproto, file_level_enum_descriptors_Cosmos_2eproto, file_level_service_descriptors_Cosmos_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_Cosmos_2eproto_getter() {
  return &descriptor_table_Cosmos_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_Cosmos_2eproto(&descriptor_table_Cosmos_2eproto);
namespace TW {
namespace Cosmos {
namespace Proto {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Message_AuthorizationType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Cosmos_2eproto);
  return file_level_enum_descriptors_Cosmos_2eproto[0];
}
bool Message_AuthorizationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Message_AuthorizationType Message::UNSPECIFIED;
constexpr Message_AuthorizationType Message::DELEGATE;
constexpr Message_AuthorizationType Message::UNDELEGATE;
constexpr Message_AuthorizationType Message::REDELEGATE;
constexpr Message_AuthorizationType Message::AuthorizationType_MIN;
constexpr Message_AuthorizationType Message::AuthorizationType_MAX;
constexpr int Message::AuthorizationType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Message_VoteOption_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Cosmos_2eproto);
  return file_level_enum_descriptors_Cosmos_2eproto[1];
}
bool Message_VoteOption_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Message_VoteOption Message::_UNSPECIFIED;
constexpr Message_VoteOption Message::YES;
constexpr Message_VoteOption Message::ABSTAIN;
constexpr Message_VoteOption Message::NO;
constexpr Message_VoteOption Message::NO_WITH_VETO;
constexpr Message_VoteOption Message::VoteOption_MIN;
constexpr Message_VoteOption Message::VoteOption_MAX;
constexpr int Message::VoteOption_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BroadcastMode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Cosmos_2eproto);
  return file_level_enum_descriptors_Cosmos_2eproto[2];
}
bool BroadcastMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SigningMode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Cosmos_2eproto);
  return file_level_enum_descriptors_Cosmos_2eproto[3];
}
bool SigningMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Amount::_Internal {
 public:
};

Amount::Amount(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Amount)
}
Amount::Amount(const Amount& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  denom_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    denom_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_denom().empty()) {
    denom_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_denom(), 
      GetArenaForAllocation());
  }
  amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    amount_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_amount().empty()) {
    amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_amount(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Amount)
}

inline void Amount::SharedCtor() {
denom_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  denom_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  amount_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Amount::~Amount() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Amount)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Amount::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  denom_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  amount_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Amount::ArenaDtor(void* object) {
  Amount* _this = reinterpret_cast< Amount* >(object);
  (void)_this;
}
void Amount::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Amount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Amount::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Amount)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  denom_.ClearToEmpty();
  amount_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Amount::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string denom = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_denom();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Amount.denom"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string amount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_amount();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Amount.amount"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Amount::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Amount)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string denom = 1;
  if (!this->_internal_denom().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_denom().data(), static_cast<int>(this->_internal_denom().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Amount.denom");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_denom(), target);
  }

  // string amount = 2;
  if (!this->_internal_amount().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_amount().data(), static_cast<int>(this->_internal_amount().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Amount.amount");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_amount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Amount)
  return target;
}

size_t Amount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Amount)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string denom = 1;
  if (!this->_internal_denom().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_denom());
  }

  // string amount = 2;
  if (!this->_internal_amount().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_amount());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Amount::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Amount::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Amount::GetClassData() const { return &_class_data_; }

void Amount::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Amount *>(to)->MergeFrom(
      static_cast<const Amount &>(from));
}


void Amount::MergeFrom(const Amount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Amount)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_denom().empty()) {
    _internal_set_denom(from._internal_denom());
  }
  if (!from._internal_amount().empty()) {
    _internal_set_amount(from._internal_amount());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Amount::CopyFrom(const Amount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Amount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Amount::IsInitialized() const {
  return true;
}

void Amount::InternalSwap(Amount* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &denom_, lhs_arena,
      &other->denom_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &amount_, lhs_arena,
      &other->amount_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Amount::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[0]);
}

// ===================================================================

class Fee::_Internal {
 public:
};

Fee::Fee(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  amounts_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Fee)
}
Fee::Fee(const Fee& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      amounts_(from.amounts_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  gas_ = from.gas_;
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Fee)
}

inline void Fee::SharedCtor() {
gas_ = uint64_t{0u};
}

Fee::~Fee() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Fee)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Fee::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Fee::ArenaDtor(void* object) {
  Fee* _this = reinterpret_cast< Fee* >(object);
  (void)_this;
}
void Fee::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Fee::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Fee::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Fee)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  amounts_.Clear();
  gas_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Fee::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .TW.Cosmos.Proto.Amount amounts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_amounts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // uint64 gas = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          gas_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Fee::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Fee)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TW.Cosmos.Proto.Amount amounts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_amounts_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_amounts(i), target, stream);
  }

  // uint64 gas = 2;
  if (this->_internal_gas() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_gas(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Fee)
  return target;
}

size_t Fee::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Fee)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TW.Cosmos.Proto.Amount amounts = 1;
  total_size += 1UL * this->_internal_amounts_size();
  for (const auto& msg : this->amounts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint64 gas = 2;
  if (this->_internal_gas() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_gas());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Fee::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Fee::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Fee::GetClassData() const { return &_class_data_; }

void Fee::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Fee *>(to)->MergeFrom(
      static_cast<const Fee &>(from));
}


void Fee::MergeFrom(const Fee& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Fee)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  amounts_.MergeFrom(from.amounts_);
  if (from._internal_gas() != 0) {
    _internal_set_gas(from._internal_gas());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Fee::CopyFrom(const Fee& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Fee)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Fee::IsInitialized() const {
  return true;
}

void Fee::InternalSwap(Fee* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  amounts_.InternalSwap(&other->amounts_);
  swap(gas_, other->gas_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Fee::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[1]);
}

// ===================================================================

class Height::_Internal {
 public:
};

Height::Height(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Height)
}
Height::Height(const Height& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&revision_number_, &from.revision_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&revision_height_) -
    reinterpret_cast<char*>(&revision_number_)) + sizeof(revision_height_));
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Height)
}

inline void Height::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&revision_number_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&revision_height_) -
    reinterpret_cast<char*>(&revision_number_)) + sizeof(revision_height_));
}

Height::~Height() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Height)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Height::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Height::ArenaDtor(void* object) {
  Height* _this = reinterpret_cast< Height* >(object);
  (void)_this;
}
void Height::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Height::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Height::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Height)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&revision_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&revision_height_) -
      reinterpret_cast<char*>(&revision_number_)) + sizeof(revision_height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Height::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 revision_number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          revision_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 revision_height = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          revision_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Height::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Height)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 revision_number = 1;
  if (this->_internal_revision_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_revision_number(), target);
  }

  // uint64 revision_height = 2;
  if (this->_internal_revision_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_revision_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Height)
  return target;
}

size_t Height::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Height)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 revision_number = 1;
  if (this->_internal_revision_number() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_revision_number());
  }

  // uint64 revision_height = 2;
  if (this->_internal_revision_height() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_revision_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Height::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Height::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Height::GetClassData() const { return &_class_data_; }

void Height::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Height *>(to)->MergeFrom(
      static_cast<const Height &>(from));
}


void Height::MergeFrom(const Height& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Height)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_revision_number() != 0) {
    _internal_set_revision_number(from._internal_revision_number());
  }
  if (from._internal_revision_height() != 0) {
    _internal_set_revision_height(from._internal_revision_height());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Height::CopyFrom(const Height& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Height)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Height::IsInitialized() const {
  return true;
}

void Height::InternalSwap(Height* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Height, revision_height_)
      + sizeof(Height::revision_height_)
      - PROTOBUF_FIELD_OFFSET(Height, revision_number_)>(
          reinterpret_cast<char*>(&revision_number_),
          reinterpret_cast<char*>(&other->revision_number_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Height::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[2]);
}

// ===================================================================

class THORChainAsset::_Internal {
 public:
};

THORChainAsset::THORChainAsset(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.THORChainAsset)
}
THORChainAsset::THORChainAsset(const THORChainAsset& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  chain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    chain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_chain().empty()) {
    chain_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_chain(), 
      GetArenaForAllocation());
  }
  symbol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    symbol_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    symbol_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_symbol(), 
      GetArenaForAllocation());
  }
  ticker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    ticker_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ticker().empty()) {
    ticker_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ticker(), 
      GetArenaForAllocation());
  }
  synth_ = from.synth_;
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.THORChainAsset)
}

inline void THORChainAsset::SharedCtor() {
chain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  chain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
symbol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  symbol_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
ticker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  ticker_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
synth_ = false;
}

THORChainAsset::~THORChainAsset() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.THORChainAsset)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void THORChainAsset::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  chain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ticker_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void THORChainAsset::ArenaDtor(void* object) {
  THORChainAsset* _this = reinterpret_cast< THORChainAsset* >(object);
  (void)_this;
}
void THORChainAsset::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void THORChainAsset::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void THORChainAsset::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.THORChainAsset)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chain_.ClearToEmpty();
  symbol_.ClearToEmpty();
  ticker_.ClearToEmpty();
  synth_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* THORChainAsset::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string chain = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_chain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.THORChainAsset.chain"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string symbol = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_symbol();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.THORChainAsset.symbol"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string ticker = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_ticker();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.THORChainAsset.ticker"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool synth = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          synth_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* THORChainAsset::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.THORChainAsset)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string chain = 1;
  if (!this->_internal_chain().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_chain().data(), static_cast<int>(this->_internal_chain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.THORChainAsset.chain");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_chain(), target);
  }

  // string symbol = 2;
  if (!this->_internal_symbol().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_symbol().data(), static_cast<int>(this->_internal_symbol().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.THORChainAsset.symbol");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_symbol(), target);
  }

  // string ticker = 3;
  if (!this->_internal_ticker().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ticker().data(), static_cast<int>(this->_internal_ticker().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.THORChainAsset.ticker");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_ticker(), target);
  }

  // bool synth = 4;
  if (this->_internal_synth() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_synth(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.THORChainAsset)
  return target;
}

size_t THORChainAsset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.THORChainAsset)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string chain = 1;
  if (!this->_internal_chain().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_chain());
  }

  // string symbol = 2;
  if (!this->_internal_symbol().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_symbol());
  }

  // string ticker = 3;
  if (!this->_internal_ticker().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ticker());
  }

  // bool synth = 4;
  if (this->_internal_synth() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData THORChainAsset::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    THORChainAsset::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*THORChainAsset::GetClassData() const { return &_class_data_; }

void THORChainAsset::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<THORChainAsset *>(to)->MergeFrom(
      static_cast<const THORChainAsset &>(from));
}


void THORChainAsset::MergeFrom(const THORChainAsset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.THORChainAsset)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_chain().empty()) {
    _internal_set_chain(from._internal_chain());
  }
  if (!from._internal_symbol().empty()) {
    _internal_set_symbol(from._internal_symbol());
  }
  if (!from._internal_ticker().empty()) {
    _internal_set_ticker(from._internal_ticker());
  }
  if (from._internal_synth() != 0) {
    _internal_set_synth(from._internal_synth());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void THORChainAsset::CopyFrom(const THORChainAsset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.THORChainAsset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THORChainAsset::IsInitialized() const {
  return true;
}

void THORChainAsset::InternalSwap(THORChainAsset* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &chain_, lhs_arena,
      &other->chain_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &symbol_, lhs_arena,
      &other->symbol_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &ticker_, lhs_arena,
      &other->ticker_, rhs_arena
  );
  swap(synth_, other->synth_);
}

::PROTOBUF_NAMESPACE_ID::Metadata THORChainAsset::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[3]);
}

// ===================================================================

class THORChainCoin::_Internal {
 public:
  static const ::TW::Cosmos::Proto::THORChainAsset& asset(const THORChainCoin* msg);
};

const ::TW::Cosmos::Proto::THORChainAsset&
THORChainCoin::_Internal::asset(const THORChainCoin* msg) {
  return *msg->asset_;
}
THORChainCoin::THORChainCoin(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.THORChainCoin)
}
THORChainCoin::THORChainCoin(const THORChainCoin& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    amount_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_amount().empty()) {
    amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_amount(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_asset()) {
    asset_ = new ::TW::Cosmos::Proto::THORChainAsset(*from.asset_);
  } else {
    asset_ = nullptr;
  }
  decimals_ = from.decimals_;
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.THORChainCoin)
}

inline void THORChainCoin::SharedCtor() {
amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  amount_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&asset_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&decimals_) -
    reinterpret_cast<char*>(&asset_)) + sizeof(decimals_));
}

THORChainCoin::~THORChainCoin() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.THORChainCoin)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void THORChainCoin::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  amount_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete asset_;
}

void THORChainCoin::ArenaDtor(void* object) {
  THORChainCoin* _this = reinterpret_cast< THORChainCoin* >(object);
  (void)_this;
}
void THORChainCoin::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void THORChainCoin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void THORChainCoin::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.THORChainCoin)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  amount_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && asset_ != nullptr) {
    delete asset_;
  }
  asset_ = nullptr;
  decimals_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* THORChainCoin::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .TW.Cosmos.Proto.THORChainAsset asset = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_asset(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string amount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_amount();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.THORChainCoin.amount"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 decimals = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          decimals_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* THORChainCoin::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.THORChainCoin)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .TW.Cosmos.Proto.THORChainAsset asset = 1;
  if (this->_internal_has_asset()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::asset(this), target, stream);
  }

  // string amount = 2;
  if (!this->_internal_amount().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_amount().data(), static_cast<int>(this->_internal_amount().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.THORChainCoin.amount");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_amount(), target);
  }

  // int64 decimals = 3;
  if (this->_internal_decimals() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_decimals(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.THORChainCoin)
  return target;
}

size_t THORChainCoin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.THORChainCoin)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string amount = 2;
  if (!this->_internal_amount().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_amount());
  }

  // .TW.Cosmos.Proto.THORChainAsset asset = 1;
  if (this->_internal_has_asset()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *asset_);
  }

  // int64 decimals = 3;
  if (this->_internal_decimals() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_decimals());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData THORChainCoin::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    THORChainCoin::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*THORChainCoin::GetClassData() const { return &_class_data_; }

void THORChainCoin::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<THORChainCoin *>(to)->MergeFrom(
      static_cast<const THORChainCoin &>(from));
}


void THORChainCoin::MergeFrom(const THORChainCoin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.THORChainCoin)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_amount().empty()) {
    _internal_set_amount(from._internal_amount());
  }
  if (from._internal_has_asset()) {
    _internal_mutable_asset()->::TW::Cosmos::Proto::THORChainAsset::MergeFrom(from._internal_asset());
  }
  if (from._internal_decimals() != 0) {
    _internal_set_decimals(from._internal_decimals());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void THORChainCoin::CopyFrom(const THORChainCoin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.THORChainCoin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THORChainCoin::IsInitialized() const {
  return true;
}

void THORChainCoin::InternalSwap(THORChainCoin* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &amount_, lhs_arena,
      &other->amount_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(THORChainCoin, decimals_)
      + sizeof(THORChainCoin::decimals_)
      - PROTOBUF_FIELD_OFFSET(THORChainCoin, asset_)>(
          reinterpret_cast<char*>(&asset_),
          reinterpret_cast<char*>(&other->asset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata THORChainCoin::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[4]);
}

// ===================================================================

class Message_Send::_Internal {
 public:
};

Message_Send::Message_Send(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  amounts_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.Send)
}
Message_Send::Message_Send(const Message_Send& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      amounts_(from.amounts_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  from_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    from_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_from_address().empty()) {
    from_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_from_address(), 
      GetArenaForAllocation());
  }
  to_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    to_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_to_address().empty()) {
    to_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_to_address(), 
      GetArenaForAllocation());
  }
  type_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    type_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type_prefix().empty()) {
    type_prefix_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_type_prefix(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.Send)
}

inline void Message_Send::SharedCtor() {
from_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  from_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
to_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  to_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
type_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  type_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Message_Send::~Message_Send() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.Send)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_Send::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  from_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  to_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_prefix_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_Send::ArenaDtor(void* object) {
  Message_Send* _this = reinterpret_cast< Message_Send* >(object);
  (void)_this;
}
void Message_Send::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_Send::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_Send::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.Send)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  amounts_.Clear();
  from_address_.ClearToEmpty();
  to_address_.ClearToEmpty();
  type_prefix_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_Send::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string from_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_from_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.Send.from_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string to_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_to_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.Send.to_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .TW.Cosmos.Proto.Amount amounts = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_amounts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string type_prefix = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_type_prefix();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.Send.type_prefix"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_Send::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.Send)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_address = 1;
  if (!this->_internal_from_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_from_address().data(), static_cast<int>(this->_internal_from_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.Send.from_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_from_address(), target);
  }

  // string to_address = 2;
  if (!this->_internal_to_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_to_address().data(), static_cast<int>(this->_internal_to_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.Send.to_address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_to_address(), target);
  }

  // repeated .TW.Cosmos.Proto.Amount amounts = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_amounts_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_amounts(i), target, stream);
  }

  // string type_prefix = 4;
  if (!this->_internal_type_prefix().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type_prefix().data(), static_cast<int>(this->_internal_type_prefix().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.Send.type_prefix");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_type_prefix(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.Send)
  return target;
}

size_t Message_Send::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.Send)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TW.Cosmos.Proto.Amount amounts = 3;
  total_size += 1UL * this->_internal_amounts_size();
  for (const auto& msg : this->amounts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string from_address = 1;
  if (!this->_internal_from_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_from_address());
  }

  // string to_address = 2;
  if (!this->_internal_to_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_to_address());
  }

  // string type_prefix = 4;
  if (!this->_internal_type_prefix().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type_prefix());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_Send::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_Send::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_Send::GetClassData() const { return &_class_data_; }

void Message_Send::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_Send *>(to)->MergeFrom(
      static_cast<const Message_Send &>(from));
}


void Message_Send::MergeFrom(const Message_Send& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.Send)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  amounts_.MergeFrom(from.amounts_);
  if (!from._internal_from_address().empty()) {
    _internal_set_from_address(from._internal_from_address());
  }
  if (!from._internal_to_address().empty()) {
    _internal_set_to_address(from._internal_to_address());
  }
  if (!from._internal_type_prefix().empty()) {
    _internal_set_type_prefix(from._internal_type_prefix());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_Send::CopyFrom(const Message_Send& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.Send)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Send::IsInitialized() const {
  return true;
}

void Message_Send::InternalSwap(Message_Send* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  amounts_.InternalSwap(&other->amounts_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &from_address_, lhs_arena,
      &other->from_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &to_address_, lhs_arena,
      &other->to_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &type_prefix_, lhs_arena,
      &other->type_prefix_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Send::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[5]);
}

// ===================================================================

class Message_Transfer::_Internal {
 public:
  static const ::TW::Cosmos::Proto::Amount& token(const Message_Transfer* msg);
  static const ::TW::Cosmos::Proto::Height& timeout_height(const Message_Transfer* msg);
};

const ::TW::Cosmos::Proto::Amount&
Message_Transfer::_Internal::token(const Message_Transfer* msg) {
  return *msg->token_;
}
const ::TW::Cosmos::Proto::Height&
Message_Transfer::_Internal::timeout_height(const Message_Transfer* msg) {
  return *msg->timeout_height_;
}
Message_Transfer::Message_Transfer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.Transfer)
}
Message_Transfer::Message_Transfer(const Message_Transfer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  source_port_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    source_port_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_source_port().empty()) {
    source_port_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_source_port(), 
      GetArenaForAllocation());
  }
  source_channel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    source_channel_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_source_channel().empty()) {
    source_channel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_source_channel(), 
      GetArenaForAllocation());
  }
  sender_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sender_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    sender_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sender(), 
      GetArenaForAllocation());
  }
  receiver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    receiver_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_receiver().empty()) {
    receiver_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_receiver(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_token()) {
    token_ = new ::TW::Cosmos::Proto::Amount(*from.token_);
  } else {
    token_ = nullptr;
  }
  if (from._internal_has_timeout_height()) {
    timeout_height_ = new ::TW::Cosmos::Proto::Height(*from.timeout_height_);
  } else {
    timeout_height_ = nullptr;
  }
  timeout_timestamp_ = from.timeout_timestamp_;
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.Transfer)
}

inline void Message_Transfer::SharedCtor() {
source_port_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  source_port_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
source_channel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  source_channel_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
sender_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sender_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
receiver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  receiver_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&token_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&timeout_timestamp_) -
    reinterpret_cast<char*>(&token_)) + sizeof(timeout_timestamp_));
}

Message_Transfer::~Message_Transfer() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.Transfer)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_Transfer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  source_port_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_channel_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sender_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receiver_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete token_;
  if (this != internal_default_instance()) delete timeout_height_;
}

void Message_Transfer::ArenaDtor(void* object) {
  Message_Transfer* _this = reinterpret_cast< Message_Transfer* >(object);
  (void)_this;
}
void Message_Transfer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_Transfer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_Transfer::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.Transfer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  source_port_.ClearToEmpty();
  source_channel_.ClearToEmpty();
  sender_.ClearToEmpty();
  receiver_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && token_ != nullptr) {
    delete token_;
  }
  token_ = nullptr;
  if (GetArenaForAllocation() == nullptr && timeout_height_ != nullptr) {
    delete timeout_height_;
  }
  timeout_height_ = nullptr;
  timeout_timestamp_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_Transfer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string source_port = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_source_port();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.Transfer.source_port"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string source_channel = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_source_channel();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.Transfer.source_channel"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Amount token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_token(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string sender = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_sender();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.Transfer.sender"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string receiver = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_receiver();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.Transfer.receiver"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Height timeout_height = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_timeout_height(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 timeout_timestamp = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          timeout_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_Transfer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.Transfer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string source_port = 1;
  if (!this->_internal_source_port().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source_port().data(), static_cast<int>(this->_internal_source_port().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.Transfer.source_port");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_source_port(), target);
  }

  // string source_channel = 2;
  if (!this->_internal_source_channel().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source_channel().data(), static_cast<int>(this->_internal_source_channel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.Transfer.source_channel");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_source_channel(), target);
  }

  // .TW.Cosmos.Proto.Amount token = 3;
  if (this->_internal_has_token()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::token(this), target, stream);
  }

  // string sender = 4;
  if (!this->_internal_sender().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sender().data(), static_cast<int>(this->_internal_sender().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.Transfer.sender");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_sender(), target);
  }

  // string receiver = 5;
  if (!this->_internal_receiver().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_receiver().data(), static_cast<int>(this->_internal_receiver().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.Transfer.receiver");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_receiver(), target);
  }

  // .TW.Cosmos.Proto.Height timeout_height = 6;
  if (this->_internal_has_timeout_height()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::timeout_height(this), target, stream);
  }

  // uint64 timeout_timestamp = 7;
  if (this->_internal_timeout_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_timeout_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.Transfer)
  return target;
}

size_t Message_Transfer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.Transfer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string source_port = 1;
  if (!this->_internal_source_port().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source_port());
  }

  // string source_channel = 2;
  if (!this->_internal_source_channel().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source_channel());
  }

  // string sender = 4;
  if (!this->_internal_sender().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sender());
  }

  // string receiver = 5;
  if (!this->_internal_receiver().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_receiver());
  }

  // .TW.Cosmos.Proto.Amount token = 3;
  if (this->_internal_has_token()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *token_);
  }

  // .TW.Cosmos.Proto.Height timeout_height = 6;
  if (this->_internal_has_timeout_height()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *timeout_height_);
  }

  // uint64 timeout_timestamp = 7;
  if (this->_internal_timeout_timestamp() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_timeout_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_Transfer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_Transfer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_Transfer::GetClassData() const { return &_class_data_; }

void Message_Transfer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_Transfer *>(to)->MergeFrom(
      static_cast<const Message_Transfer &>(from));
}


void Message_Transfer::MergeFrom(const Message_Transfer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.Transfer)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_source_port().empty()) {
    _internal_set_source_port(from._internal_source_port());
  }
  if (!from._internal_source_channel().empty()) {
    _internal_set_source_channel(from._internal_source_channel());
  }
  if (!from._internal_sender().empty()) {
    _internal_set_sender(from._internal_sender());
  }
  if (!from._internal_receiver().empty()) {
    _internal_set_receiver(from._internal_receiver());
  }
  if (from._internal_has_token()) {
    _internal_mutable_token()->::TW::Cosmos::Proto::Amount::MergeFrom(from._internal_token());
  }
  if (from._internal_has_timeout_height()) {
    _internal_mutable_timeout_height()->::TW::Cosmos::Proto::Height::MergeFrom(from._internal_timeout_height());
  }
  if (from._internal_timeout_timestamp() != 0) {
    _internal_set_timeout_timestamp(from._internal_timeout_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_Transfer::CopyFrom(const Message_Transfer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.Transfer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Transfer::IsInitialized() const {
  return true;
}

void Message_Transfer::InternalSwap(Message_Transfer* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &source_port_, lhs_arena,
      &other->source_port_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &source_channel_, lhs_arena,
      &other->source_channel_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sender_, lhs_arena,
      &other->sender_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &receiver_, lhs_arena,
      &other->receiver_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message_Transfer, timeout_timestamp_)
      + sizeof(Message_Transfer::timeout_timestamp_)
      - PROTOBUF_FIELD_OFFSET(Message_Transfer, token_)>(
          reinterpret_cast<char*>(&token_),
          reinterpret_cast<char*>(&other->token_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Transfer::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[6]);
}

// ===================================================================

class Message_Delegate::_Internal {
 public:
  static const ::TW::Cosmos::Proto::Amount& amount(const Message_Delegate* msg);
};

const ::TW::Cosmos::Proto::Amount&
Message_Delegate::_Internal::amount(const Message_Delegate* msg) {
  return *msg->amount_;
}
Message_Delegate::Message_Delegate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.Delegate)
}
Message_Delegate::Message_Delegate(const Message_Delegate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  delegator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    delegator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_address().empty()) {
    delegator_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_delegator_address(), 
      GetArenaForAllocation());
  }
  validator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    validator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_address().empty()) {
    validator_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_validator_address(), 
      GetArenaForAllocation());
  }
  type_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    type_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type_prefix().empty()) {
    type_prefix_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_type_prefix(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_amount()) {
    amount_ = new ::TW::Cosmos::Proto::Amount(*from.amount_);
  } else {
    amount_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.Delegate)
}

inline void Message_Delegate::SharedCtor() {
delegator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  delegator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
validator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  validator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
type_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  type_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
amount_ = nullptr;
}

Message_Delegate::~Message_Delegate() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.Delegate)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_Delegate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  delegator_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  validator_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_prefix_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete amount_;
}

void Message_Delegate::ArenaDtor(void* object) {
  Message_Delegate* _this = reinterpret_cast< Message_Delegate* >(object);
  (void)_this;
}
void Message_Delegate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_Delegate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_Delegate::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.Delegate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  delegator_address_.ClearToEmpty();
  validator_address_.ClearToEmpty();
  type_prefix_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && amount_ != nullptr) {
    delete amount_;
  }
  amount_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_Delegate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delegator_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delegator_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.Delegate.delegator_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string validator_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_validator_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.Delegate.validator_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Amount amount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string type_prefix = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_type_prefix();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.Delegate.type_prefix"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_Delegate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.Delegate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delegator_address = 1;
  if (!this->_internal_delegator_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_delegator_address().data(), static_cast<int>(this->_internal_delegator_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.Delegate.delegator_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_delegator_address(), target);
  }

  // string validator_address = 2;
  if (!this->_internal_validator_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_validator_address().data(), static_cast<int>(this->_internal_validator_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.Delegate.validator_address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_validator_address(), target);
  }

  // .TW.Cosmos.Proto.Amount amount = 3;
  if (this->_internal_has_amount()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::amount(this), target, stream);
  }

  // string type_prefix = 4;
  if (!this->_internal_type_prefix().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type_prefix().data(), static_cast<int>(this->_internal_type_prefix().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.Delegate.type_prefix");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_type_prefix(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.Delegate)
  return target;
}

size_t Message_Delegate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.Delegate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delegator_address = 1;
  if (!this->_internal_delegator_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_delegator_address());
  }

  // string validator_address = 2;
  if (!this->_internal_validator_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_validator_address());
  }

  // string type_prefix = 4;
  if (!this->_internal_type_prefix().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type_prefix());
  }

  // .TW.Cosmos.Proto.Amount amount = 3;
  if (this->_internal_has_amount()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_Delegate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_Delegate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_Delegate::GetClassData() const { return &_class_data_; }

void Message_Delegate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_Delegate *>(to)->MergeFrom(
      static_cast<const Message_Delegate &>(from));
}


void Message_Delegate::MergeFrom(const Message_Delegate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.Delegate)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_address().empty()) {
    _internal_set_delegator_address(from._internal_delegator_address());
  }
  if (!from._internal_validator_address().empty()) {
    _internal_set_validator_address(from._internal_validator_address());
  }
  if (!from._internal_type_prefix().empty()) {
    _internal_set_type_prefix(from._internal_type_prefix());
  }
  if (from._internal_has_amount()) {
    _internal_mutable_amount()->::TW::Cosmos::Proto::Amount::MergeFrom(from._internal_amount());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_Delegate::CopyFrom(const Message_Delegate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.Delegate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Delegate::IsInitialized() const {
  return true;
}

void Message_Delegate::InternalSwap(Message_Delegate* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &delegator_address_, lhs_arena,
      &other->delegator_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &validator_address_, lhs_arena,
      &other->validator_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &type_prefix_, lhs_arena,
      &other->type_prefix_, rhs_arena
  );
  swap(amount_, other->amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Delegate::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[7]);
}

// ===================================================================

class Message_Undelegate::_Internal {
 public:
  static const ::TW::Cosmos::Proto::Amount& amount(const Message_Undelegate* msg);
};

const ::TW::Cosmos::Proto::Amount&
Message_Undelegate::_Internal::amount(const Message_Undelegate* msg) {
  return *msg->amount_;
}
Message_Undelegate::Message_Undelegate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.Undelegate)
}
Message_Undelegate::Message_Undelegate(const Message_Undelegate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  delegator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    delegator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_address().empty()) {
    delegator_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_delegator_address(), 
      GetArenaForAllocation());
  }
  validator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    validator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_address().empty()) {
    validator_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_validator_address(), 
      GetArenaForAllocation());
  }
  type_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    type_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type_prefix().empty()) {
    type_prefix_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_type_prefix(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_amount()) {
    amount_ = new ::TW::Cosmos::Proto::Amount(*from.amount_);
  } else {
    amount_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.Undelegate)
}

inline void Message_Undelegate::SharedCtor() {
delegator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  delegator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
validator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  validator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
type_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  type_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
amount_ = nullptr;
}

Message_Undelegate::~Message_Undelegate() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.Undelegate)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_Undelegate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  delegator_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  validator_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_prefix_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete amount_;
}

void Message_Undelegate::ArenaDtor(void* object) {
  Message_Undelegate* _this = reinterpret_cast< Message_Undelegate* >(object);
  (void)_this;
}
void Message_Undelegate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_Undelegate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_Undelegate::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.Undelegate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  delegator_address_.ClearToEmpty();
  validator_address_.ClearToEmpty();
  type_prefix_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && amount_ != nullptr) {
    delete amount_;
  }
  amount_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_Undelegate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delegator_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delegator_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.Undelegate.delegator_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string validator_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_validator_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.Undelegate.validator_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Amount amount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string type_prefix = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_type_prefix();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.Undelegate.type_prefix"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_Undelegate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.Undelegate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delegator_address = 1;
  if (!this->_internal_delegator_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_delegator_address().data(), static_cast<int>(this->_internal_delegator_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.Undelegate.delegator_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_delegator_address(), target);
  }

  // string validator_address = 2;
  if (!this->_internal_validator_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_validator_address().data(), static_cast<int>(this->_internal_validator_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.Undelegate.validator_address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_validator_address(), target);
  }

  // .TW.Cosmos.Proto.Amount amount = 3;
  if (this->_internal_has_amount()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::amount(this), target, stream);
  }

  // string type_prefix = 4;
  if (!this->_internal_type_prefix().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type_prefix().data(), static_cast<int>(this->_internal_type_prefix().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.Undelegate.type_prefix");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_type_prefix(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.Undelegate)
  return target;
}

size_t Message_Undelegate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.Undelegate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delegator_address = 1;
  if (!this->_internal_delegator_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_delegator_address());
  }

  // string validator_address = 2;
  if (!this->_internal_validator_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_validator_address());
  }

  // string type_prefix = 4;
  if (!this->_internal_type_prefix().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type_prefix());
  }

  // .TW.Cosmos.Proto.Amount amount = 3;
  if (this->_internal_has_amount()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_Undelegate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_Undelegate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_Undelegate::GetClassData() const { return &_class_data_; }

void Message_Undelegate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_Undelegate *>(to)->MergeFrom(
      static_cast<const Message_Undelegate &>(from));
}


void Message_Undelegate::MergeFrom(const Message_Undelegate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.Undelegate)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_address().empty()) {
    _internal_set_delegator_address(from._internal_delegator_address());
  }
  if (!from._internal_validator_address().empty()) {
    _internal_set_validator_address(from._internal_validator_address());
  }
  if (!from._internal_type_prefix().empty()) {
    _internal_set_type_prefix(from._internal_type_prefix());
  }
  if (from._internal_has_amount()) {
    _internal_mutable_amount()->::TW::Cosmos::Proto::Amount::MergeFrom(from._internal_amount());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_Undelegate::CopyFrom(const Message_Undelegate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.Undelegate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Undelegate::IsInitialized() const {
  return true;
}

void Message_Undelegate::InternalSwap(Message_Undelegate* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &delegator_address_, lhs_arena,
      &other->delegator_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &validator_address_, lhs_arena,
      &other->validator_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &type_prefix_, lhs_arena,
      &other->type_prefix_, rhs_arena
  );
  swap(amount_, other->amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Undelegate::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[8]);
}

// ===================================================================

class Message_BeginRedelegate::_Internal {
 public:
  static const ::TW::Cosmos::Proto::Amount& amount(const Message_BeginRedelegate* msg);
};

const ::TW::Cosmos::Proto::Amount&
Message_BeginRedelegate::_Internal::amount(const Message_BeginRedelegate* msg) {
  return *msg->amount_;
}
Message_BeginRedelegate::Message_BeginRedelegate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.BeginRedelegate)
}
Message_BeginRedelegate::Message_BeginRedelegate(const Message_BeginRedelegate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  delegator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    delegator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_address().empty()) {
    delegator_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_delegator_address(), 
      GetArenaForAllocation());
  }
  validator_src_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    validator_src_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_src_address().empty()) {
    validator_src_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_validator_src_address(), 
      GetArenaForAllocation());
  }
  validator_dst_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    validator_dst_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_dst_address().empty()) {
    validator_dst_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_validator_dst_address(), 
      GetArenaForAllocation());
  }
  type_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    type_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type_prefix().empty()) {
    type_prefix_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_type_prefix(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_amount()) {
    amount_ = new ::TW::Cosmos::Proto::Amount(*from.amount_);
  } else {
    amount_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.BeginRedelegate)
}

inline void Message_BeginRedelegate::SharedCtor() {
delegator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  delegator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
validator_src_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  validator_src_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
validator_dst_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  validator_dst_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
type_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  type_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
amount_ = nullptr;
}

Message_BeginRedelegate::~Message_BeginRedelegate() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.BeginRedelegate)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_BeginRedelegate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  delegator_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  validator_src_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  validator_dst_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_prefix_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete amount_;
}

void Message_BeginRedelegate::ArenaDtor(void* object) {
  Message_BeginRedelegate* _this = reinterpret_cast< Message_BeginRedelegate* >(object);
  (void)_this;
}
void Message_BeginRedelegate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_BeginRedelegate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_BeginRedelegate::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.BeginRedelegate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  delegator_address_.ClearToEmpty();
  validator_src_address_.ClearToEmpty();
  validator_dst_address_.ClearToEmpty();
  type_prefix_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && amount_ != nullptr) {
    delete amount_;
  }
  amount_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_BeginRedelegate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delegator_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delegator_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.BeginRedelegate.delegator_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string validator_src_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_validator_src_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.BeginRedelegate.validator_src_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string validator_dst_address = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_validator_dst_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.BeginRedelegate.validator_dst_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Amount amount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string type_prefix = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_type_prefix();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.BeginRedelegate.type_prefix"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_BeginRedelegate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.BeginRedelegate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delegator_address = 1;
  if (!this->_internal_delegator_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_delegator_address().data(), static_cast<int>(this->_internal_delegator_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.BeginRedelegate.delegator_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_delegator_address(), target);
  }

  // string validator_src_address = 2;
  if (!this->_internal_validator_src_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_validator_src_address().data(), static_cast<int>(this->_internal_validator_src_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.BeginRedelegate.validator_src_address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_validator_src_address(), target);
  }

  // string validator_dst_address = 3;
  if (!this->_internal_validator_dst_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_validator_dst_address().data(), static_cast<int>(this->_internal_validator_dst_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.BeginRedelegate.validator_dst_address");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_validator_dst_address(), target);
  }

  // .TW.Cosmos.Proto.Amount amount = 4;
  if (this->_internal_has_amount()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::amount(this), target, stream);
  }

  // string type_prefix = 5;
  if (!this->_internal_type_prefix().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type_prefix().data(), static_cast<int>(this->_internal_type_prefix().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.BeginRedelegate.type_prefix");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_type_prefix(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.BeginRedelegate)
  return target;
}

size_t Message_BeginRedelegate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.BeginRedelegate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delegator_address = 1;
  if (!this->_internal_delegator_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_delegator_address());
  }

  // string validator_src_address = 2;
  if (!this->_internal_validator_src_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_validator_src_address());
  }

  // string validator_dst_address = 3;
  if (!this->_internal_validator_dst_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_validator_dst_address());
  }

  // string type_prefix = 5;
  if (!this->_internal_type_prefix().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type_prefix());
  }

  // .TW.Cosmos.Proto.Amount amount = 4;
  if (this->_internal_has_amount()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_BeginRedelegate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_BeginRedelegate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_BeginRedelegate::GetClassData() const { return &_class_data_; }

void Message_BeginRedelegate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_BeginRedelegate *>(to)->MergeFrom(
      static_cast<const Message_BeginRedelegate &>(from));
}


void Message_BeginRedelegate::MergeFrom(const Message_BeginRedelegate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.BeginRedelegate)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_address().empty()) {
    _internal_set_delegator_address(from._internal_delegator_address());
  }
  if (!from._internal_validator_src_address().empty()) {
    _internal_set_validator_src_address(from._internal_validator_src_address());
  }
  if (!from._internal_validator_dst_address().empty()) {
    _internal_set_validator_dst_address(from._internal_validator_dst_address());
  }
  if (!from._internal_type_prefix().empty()) {
    _internal_set_type_prefix(from._internal_type_prefix());
  }
  if (from._internal_has_amount()) {
    _internal_mutable_amount()->::TW::Cosmos::Proto::Amount::MergeFrom(from._internal_amount());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_BeginRedelegate::CopyFrom(const Message_BeginRedelegate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.BeginRedelegate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_BeginRedelegate::IsInitialized() const {
  return true;
}

void Message_BeginRedelegate::InternalSwap(Message_BeginRedelegate* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &delegator_address_, lhs_arena,
      &other->delegator_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &validator_src_address_, lhs_arena,
      &other->validator_src_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &validator_dst_address_, lhs_arena,
      &other->validator_dst_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &type_prefix_, lhs_arena,
      &other->type_prefix_, rhs_arena
  );
  swap(amount_, other->amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_BeginRedelegate::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[9]);
}

// ===================================================================

class Message_SetWithdrawAddress::_Internal {
 public:
};

Message_SetWithdrawAddress::Message_SetWithdrawAddress(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.SetWithdrawAddress)
}
Message_SetWithdrawAddress::Message_SetWithdrawAddress(const Message_SetWithdrawAddress& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  delegator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    delegator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_address().empty()) {
    delegator_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_delegator_address(), 
      GetArenaForAllocation());
  }
  withdraw_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    withdraw_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_withdraw_address().empty()) {
    withdraw_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_withdraw_address(), 
      GetArenaForAllocation());
  }
  type_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    type_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type_prefix().empty()) {
    type_prefix_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_type_prefix(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.SetWithdrawAddress)
}

inline void Message_SetWithdrawAddress::SharedCtor() {
delegator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  delegator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
withdraw_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  withdraw_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
type_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  type_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Message_SetWithdrawAddress::~Message_SetWithdrawAddress() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.SetWithdrawAddress)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_SetWithdrawAddress::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  delegator_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  withdraw_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_prefix_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_SetWithdrawAddress::ArenaDtor(void* object) {
  Message_SetWithdrawAddress* _this = reinterpret_cast< Message_SetWithdrawAddress* >(object);
  (void)_this;
}
void Message_SetWithdrawAddress::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_SetWithdrawAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_SetWithdrawAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.SetWithdrawAddress)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  delegator_address_.ClearToEmpty();
  withdraw_address_.ClearToEmpty();
  type_prefix_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_SetWithdrawAddress::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delegator_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delegator_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.SetWithdrawAddress.delegator_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string withdraw_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_withdraw_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.SetWithdrawAddress.withdraw_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string type_prefix = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_type_prefix();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.SetWithdrawAddress.type_prefix"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_SetWithdrawAddress::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.SetWithdrawAddress)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delegator_address = 1;
  if (!this->_internal_delegator_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_delegator_address().data(), static_cast<int>(this->_internal_delegator_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.SetWithdrawAddress.delegator_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_delegator_address(), target);
  }

  // string withdraw_address = 2;
  if (!this->_internal_withdraw_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_withdraw_address().data(), static_cast<int>(this->_internal_withdraw_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.SetWithdrawAddress.withdraw_address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_withdraw_address(), target);
  }

  // string type_prefix = 3;
  if (!this->_internal_type_prefix().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type_prefix().data(), static_cast<int>(this->_internal_type_prefix().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.SetWithdrawAddress.type_prefix");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_type_prefix(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.SetWithdrawAddress)
  return target;
}

size_t Message_SetWithdrawAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.SetWithdrawAddress)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delegator_address = 1;
  if (!this->_internal_delegator_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_delegator_address());
  }

  // string withdraw_address = 2;
  if (!this->_internal_withdraw_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_withdraw_address());
  }

  // string type_prefix = 3;
  if (!this->_internal_type_prefix().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type_prefix());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_SetWithdrawAddress::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_SetWithdrawAddress::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_SetWithdrawAddress::GetClassData() const { return &_class_data_; }

void Message_SetWithdrawAddress::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_SetWithdrawAddress *>(to)->MergeFrom(
      static_cast<const Message_SetWithdrawAddress &>(from));
}


void Message_SetWithdrawAddress::MergeFrom(const Message_SetWithdrawAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.SetWithdrawAddress)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_address().empty()) {
    _internal_set_delegator_address(from._internal_delegator_address());
  }
  if (!from._internal_withdraw_address().empty()) {
    _internal_set_withdraw_address(from._internal_withdraw_address());
  }
  if (!from._internal_type_prefix().empty()) {
    _internal_set_type_prefix(from._internal_type_prefix());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_SetWithdrawAddress::CopyFrom(const Message_SetWithdrawAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.SetWithdrawAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_SetWithdrawAddress::IsInitialized() const {
  return true;
}

void Message_SetWithdrawAddress::InternalSwap(Message_SetWithdrawAddress* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &delegator_address_, lhs_arena,
      &other->delegator_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &withdraw_address_, lhs_arena,
      &other->withdraw_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &type_prefix_, lhs_arena,
      &other->type_prefix_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_SetWithdrawAddress::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[10]);
}

// ===================================================================

class Message_WithdrawDelegationReward::_Internal {
 public:
};

Message_WithdrawDelegationReward::Message_WithdrawDelegationReward(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.WithdrawDelegationReward)
}
Message_WithdrawDelegationReward::Message_WithdrawDelegationReward(const Message_WithdrawDelegationReward& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  delegator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    delegator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_address().empty()) {
    delegator_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_delegator_address(), 
      GetArenaForAllocation());
  }
  validator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    validator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_address().empty()) {
    validator_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_validator_address(), 
      GetArenaForAllocation());
  }
  type_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    type_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type_prefix().empty()) {
    type_prefix_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_type_prefix(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.WithdrawDelegationReward)
}

inline void Message_WithdrawDelegationReward::SharedCtor() {
delegator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  delegator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
validator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  validator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
type_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  type_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Message_WithdrawDelegationReward::~Message_WithdrawDelegationReward() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.WithdrawDelegationReward)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_WithdrawDelegationReward::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  delegator_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  validator_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_prefix_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_WithdrawDelegationReward::ArenaDtor(void* object) {
  Message_WithdrawDelegationReward* _this = reinterpret_cast< Message_WithdrawDelegationReward* >(object);
  (void)_this;
}
void Message_WithdrawDelegationReward::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_WithdrawDelegationReward::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_WithdrawDelegationReward::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.WithdrawDelegationReward)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  delegator_address_.ClearToEmpty();
  validator_address_.ClearToEmpty();
  type_prefix_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_WithdrawDelegationReward::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delegator_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delegator_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WithdrawDelegationReward.delegator_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string validator_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_validator_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WithdrawDelegationReward.validator_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string type_prefix = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_type_prefix();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WithdrawDelegationReward.type_prefix"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_WithdrawDelegationReward::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.WithdrawDelegationReward)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delegator_address = 1;
  if (!this->_internal_delegator_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_delegator_address().data(), static_cast<int>(this->_internal_delegator_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WithdrawDelegationReward.delegator_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_delegator_address(), target);
  }

  // string validator_address = 2;
  if (!this->_internal_validator_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_validator_address().data(), static_cast<int>(this->_internal_validator_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WithdrawDelegationReward.validator_address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_validator_address(), target);
  }

  // string type_prefix = 3;
  if (!this->_internal_type_prefix().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type_prefix().data(), static_cast<int>(this->_internal_type_prefix().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WithdrawDelegationReward.type_prefix");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_type_prefix(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.WithdrawDelegationReward)
  return target;
}

size_t Message_WithdrawDelegationReward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.WithdrawDelegationReward)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delegator_address = 1;
  if (!this->_internal_delegator_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_delegator_address());
  }

  // string validator_address = 2;
  if (!this->_internal_validator_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_validator_address());
  }

  // string type_prefix = 3;
  if (!this->_internal_type_prefix().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type_prefix());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_WithdrawDelegationReward::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_WithdrawDelegationReward::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_WithdrawDelegationReward::GetClassData() const { return &_class_data_; }

void Message_WithdrawDelegationReward::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_WithdrawDelegationReward *>(to)->MergeFrom(
      static_cast<const Message_WithdrawDelegationReward &>(from));
}


void Message_WithdrawDelegationReward::MergeFrom(const Message_WithdrawDelegationReward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.WithdrawDelegationReward)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_address().empty()) {
    _internal_set_delegator_address(from._internal_delegator_address());
  }
  if (!from._internal_validator_address().empty()) {
    _internal_set_validator_address(from._internal_validator_address());
  }
  if (!from._internal_type_prefix().empty()) {
    _internal_set_type_prefix(from._internal_type_prefix());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_WithdrawDelegationReward::CopyFrom(const Message_WithdrawDelegationReward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.WithdrawDelegationReward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_WithdrawDelegationReward::IsInitialized() const {
  return true;
}

void Message_WithdrawDelegationReward::InternalSwap(Message_WithdrawDelegationReward* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &delegator_address_, lhs_arena,
      &other->delegator_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &validator_address_, lhs_arena,
      &other->validator_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &type_prefix_, lhs_arena,
      &other->type_prefix_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_WithdrawDelegationReward::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[11]);
}

// ===================================================================

class Message_ExecuteContract::_Internal {
 public:
};

Message_ExecuteContract::Message_ExecuteContract(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  coins_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.ExecuteContract)
}
Message_ExecuteContract::Message_ExecuteContract(const Message_ExecuteContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      coins_(from.coins_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sender_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sender_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    sender_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sender(), 
      GetArenaForAllocation());
  }
  contract_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    contract_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contract().empty()) {
    contract_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_contract(), 
      GetArenaForAllocation());
  }
  execute_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    execute_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_execute_msg().empty()) {
    execute_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_execute_msg(), 
      GetArenaForAllocation());
  }
  type_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    type_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type_prefix().empty()) {
    type_prefix_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_type_prefix(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.ExecuteContract)
}

inline void Message_ExecuteContract::SharedCtor() {
sender_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sender_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
contract_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  contract_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
execute_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  execute_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
type_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  type_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Message_ExecuteContract::~Message_ExecuteContract() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.ExecuteContract)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_ExecuteContract::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  sender_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  execute_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_prefix_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_ExecuteContract::ArenaDtor(void* object) {
  Message_ExecuteContract* _this = reinterpret_cast< Message_ExecuteContract* >(object);
  (void)_this;
}
void Message_ExecuteContract::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_ExecuteContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_ExecuteContract::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.ExecuteContract)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coins_.Clear();
  sender_.ClearToEmpty();
  contract_.ClearToEmpty();
  execute_msg_.ClearToEmpty();
  type_prefix_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_ExecuteContract::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.ExecuteContract.sender"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string contract = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_contract();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.ExecuteContract.contract"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string execute_msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_execute_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.ExecuteContract.execute_msg"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .TW.Cosmos.Proto.Amount coins = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_coins(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string type_prefix = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_type_prefix();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.ExecuteContract.type_prefix"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_ExecuteContract::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.ExecuteContract)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1;
  if (!this->_internal_sender().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sender().data(), static_cast<int>(this->_internal_sender().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.ExecuteContract.sender");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sender(), target);
  }

  // string contract = 2;
  if (!this->_internal_contract().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_contract().data(), static_cast<int>(this->_internal_contract().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.ExecuteContract.contract");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_contract(), target);
  }

  // string execute_msg = 3;
  if (!this->_internal_execute_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_execute_msg().data(), static_cast<int>(this->_internal_execute_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.ExecuteContract.execute_msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_execute_msg(), target);
  }

  // repeated .TW.Cosmos.Proto.Amount coins = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_coins_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_coins(i), target, stream);
  }

  // string type_prefix = 5;
  if (!this->_internal_type_prefix().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type_prefix().data(), static_cast<int>(this->_internal_type_prefix().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.ExecuteContract.type_prefix");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_type_prefix(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.ExecuteContract)
  return target;
}

size_t Message_ExecuteContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.ExecuteContract)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TW.Cosmos.Proto.Amount coins = 4;
  total_size += 1UL * this->_internal_coins_size();
  for (const auto& msg : this->coins_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string sender = 1;
  if (!this->_internal_sender().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sender());
  }

  // string contract = 2;
  if (!this->_internal_contract().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_contract());
  }

  // string execute_msg = 3;
  if (!this->_internal_execute_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_execute_msg());
  }

  // string type_prefix = 5;
  if (!this->_internal_type_prefix().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type_prefix());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_ExecuteContract::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_ExecuteContract::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_ExecuteContract::GetClassData() const { return &_class_data_; }

void Message_ExecuteContract::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_ExecuteContract *>(to)->MergeFrom(
      static_cast<const Message_ExecuteContract &>(from));
}


void Message_ExecuteContract::MergeFrom(const Message_ExecuteContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.ExecuteContract)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  coins_.MergeFrom(from.coins_);
  if (!from._internal_sender().empty()) {
    _internal_set_sender(from._internal_sender());
  }
  if (!from._internal_contract().empty()) {
    _internal_set_contract(from._internal_contract());
  }
  if (!from._internal_execute_msg().empty()) {
    _internal_set_execute_msg(from._internal_execute_msg());
  }
  if (!from._internal_type_prefix().empty()) {
    _internal_set_type_prefix(from._internal_type_prefix());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_ExecuteContract::CopyFrom(const Message_ExecuteContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.ExecuteContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_ExecuteContract::IsInitialized() const {
  return true;
}

void Message_ExecuteContract::InternalSwap(Message_ExecuteContract* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  coins_.InternalSwap(&other->coins_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sender_, lhs_arena,
      &other->sender_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &contract_, lhs_arena,
      &other->contract_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &execute_msg_, lhs_arena,
      &other->execute_msg_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &type_prefix_, lhs_arena,
      &other->type_prefix_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_ExecuteContract::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[12]);
}

// ===================================================================

class Message_WasmTerraExecuteContractTransfer::_Internal {
 public:
};

Message_WasmTerraExecuteContractTransfer::Message_WasmTerraExecuteContractTransfer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.WasmTerraExecuteContractTransfer)
}
Message_WasmTerraExecuteContractTransfer::Message_WasmTerraExecuteContractTransfer(const Message_WasmTerraExecuteContractTransfer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sender_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sender_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender_address().empty()) {
    sender_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sender_address(), 
      GetArenaForAllocation());
  }
  contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    contract_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contract_address().empty()) {
    contract_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_contract_address(), 
      GetArenaForAllocation());
  }
  amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    amount_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_amount().empty()) {
    amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_amount(), 
      GetArenaForAllocation());
  }
  recipient_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    recipient_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_recipient_address().empty()) {
    recipient_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_recipient_address(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.WasmTerraExecuteContractTransfer)
}

inline void Message_WasmTerraExecuteContractTransfer::SharedCtor() {
sender_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sender_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  contract_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  amount_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
recipient_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  recipient_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Message_WasmTerraExecuteContractTransfer::~Message_WasmTerraExecuteContractTransfer() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.WasmTerraExecuteContractTransfer)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_WasmTerraExecuteContractTransfer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  sender_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  amount_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recipient_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_WasmTerraExecuteContractTransfer::ArenaDtor(void* object) {
  Message_WasmTerraExecuteContractTransfer* _this = reinterpret_cast< Message_WasmTerraExecuteContractTransfer* >(object);
  (void)_this;
}
void Message_WasmTerraExecuteContractTransfer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_WasmTerraExecuteContractTransfer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_WasmTerraExecuteContractTransfer::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.WasmTerraExecuteContractTransfer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sender_address_.ClearToEmpty();
  contract_address_.ClearToEmpty();
  amount_.ClearToEmpty();
  recipient_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_WasmTerraExecuteContractTransfer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WasmTerraExecuteContractTransfer.sender_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string contract_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_contract_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WasmTerraExecuteContractTransfer.contract_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes amount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_amount();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string recipient_address = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_recipient_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WasmTerraExecuteContractTransfer.recipient_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_WasmTerraExecuteContractTransfer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.WasmTerraExecuteContractTransfer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender_address = 1;
  if (!this->_internal_sender_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sender_address().data(), static_cast<int>(this->_internal_sender_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WasmTerraExecuteContractTransfer.sender_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sender_address(), target);
  }

  // string contract_address = 2;
  if (!this->_internal_contract_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_contract_address().data(), static_cast<int>(this->_internal_contract_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WasmTerraExecuteContractTransfer.contract_address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_contract_address(), target);
  }

  // bytes amount = 3;
  if (!this->_internal_amount().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_amount(), target);
  }

  // string recipient_address = 4;
  if (!this->_internal_recipient_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recipient_address().data(), static_cast<int>(this->_internal_recipient_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WasmTerraExecuteContractTransfer.recipient_address");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_recipient_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.WasmTerraExecuteContractTransfer)
  return target;
}

size_t Message_WasmTerraExecuteContractTransfer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.WasmTerraExecuteContractTransfer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender_address = 1;
  if (!this->_internal_sender_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sender_address());
  }

  // string contract_address = 2;
  if (!this->_internal_contract_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_contract_address());
  }

  // bytes amount = 3;
  if (!this->_internal_amount().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_amount());
  }

  // string recipient_address = 4;
  if (!this->_internal_recipient_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recipient_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_WasmTerraExecuteContractTransfer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_WasmTerraExecuteContractTransfer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_WasmTerraExecuteContractTransfer::GetClassData() const { return &_class_data_; }

void Message_WasmTerraExecuteContractTransfer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_WasmTerraExecuteContractTransfer *>(to)->MergeFrom(
      static_cast<const Message_WasmTerraExecuteContractTransfer &>(from));
}


void Message_WasmTerraExecuteContractTransfer::MergeFrom(const Message_WasmTerraExecuteContractTransfer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.WasmTerraExecuteContractTransfer)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender_address().empty()) {
    _internal_set_sender_address(from._internal_sender_address());
  }
  if (!from._internal_contract_address().empty()) {
    _internal_set_contract_address(from._internal_contract_address());
  }
  if (!from._internal_amount().empty()) {
    _internal_set_amount(from._internal_amount());
  }
  if (!from._internal_recipient_address().empty()) {
    _internal_set_recipient_address(from._internal_recipient_address());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_WasmTerraExecuteContractTransfer::CopyFrom(const Message_WasmTerraExecuteContractTransfer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.WasmTerraExecuteContractTransfer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_WasmTerraExecuteContractTransfer::IsInitialized() const {
  return true;
}

void Message_WasmTerraExecuteContractTransfer::InternalSwap(Message_WasmTerraExecuteContractTransfer* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sender_address_, lhs_arena,
      &other->sender_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &contract_address_, lhs_arena,
      &other->contract_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &amount_, lhs_arena,
      &other->amount_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &recipient_address_, lhs_arena,
      &other->recipient_address_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_WasmTerraExecuteContractTransfer::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[13]);
}

// ===================================================================

class Message_WasmTerraExecuteContractSend::_Internal {
 public:
};

Message_WasmTerraExecuteContractSend::Message_WasmTerraExecuteContractSend(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  coin_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend)
}
Message_WasmTerraExecuteContractSend::Message_WasmTerraExecuteContractSend(const Message_WasmTerraExecuteContractSend& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      coin_(from.coin_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sender_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sender_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender_address().empty()) {
    sender_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sender_address(), 
      GetArenaForAllocation());
  }
  contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    contract_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contract_address().empty()) {
    contract_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_contract_address(), 
      GetArenaForAllocation());
  }
  amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    amount_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_amount().empty()) {
    amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_amount(), 
      GetArenaForAllocation());
  }
  recipient_contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    recipient_contract_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_recipient_contract_address().empty()) {
    recipient_contract_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_recipient_contract_address(), 
      GetArenaForAllocation());
  }
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg().empty()) {
    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend)
}

inline void Message_WasmTerraExecuteContractSend::SharedCtor() {
sender_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sender_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  contract_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  amount_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
recipient_contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  recipient_contract_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Message_WasmTerraExecuteContractSend::~Message_WasmTerraExecuteContractSend() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_WasmTerraExecuteContractSend::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  sender_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  amount_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recipient_contract_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_WasmTerraExecuteContractSend::ArenaDtor(void* object) {
  Message_WasmTerraExecuteContractSend* _this = reinterpret_cast< Message_WasmTerraExecuteContractSend* >(object);
  (void)_this;
}
void Message_WasmTerraExecuteContractSend::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_WasmTerraExecuteContractSend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_WasmTerraExecuteContractSend::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coin_.Clear();
  sender_address_.ClearToEmpty();
  contract_address_.ClearToEmpty();
  amount_.ClearToEmpty();
  recipient_contract_address_.ClearToEmpty();
  msg_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_WasmTerraExecuteContractSend::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend.sender_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string contract_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_contract_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend.contract_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes amount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_amount();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string recipient_contract_address = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_recipient_contract_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend.recipient_contract_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string msg = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend.msg"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string coin = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_coin();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend.coin"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_WasmTerraExecuteContractSend::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender_address = 1;
  if (!this->_internal_sender_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sender_address().data(), static_cast<int>(this->_internal_sender_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend.sender_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sender_address(), target);
  }

  // string contract_address = 2;
  if (!this->_internal_contract_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_contract_address().data(), static_cast<int>(this->_internal_contract_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend.contract_address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_contract_address(), target);
  }

  // bytes amount = 3;
  if (!this->_internal_amount().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_amount(), target);
  }

  // string recipient_contract_address = 4;
  if (!this->_internal_recipient_contract_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recipient_contract_address().data(), static_cast<int>(this->_internal_recipient_contract_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend.recipient_contract_address");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_recipient_contract_address(), target);
  }

  // string msg = 5;
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend.msg");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_msg(), target);
  }

  // repeated string coin = 6;
  for (int i = 0, n = this->_internal_coin_size(); i < n; i++) {
    const auto& s = this->_internal_coin(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend.coin");
    target = stream->WriteString(6, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend)
  return target;
}

size_t Message_WasmTerraExecuteContractSend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string coin = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(coin_.size());
  for (int i = 0, n = coin_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      coin_.Get(i));
  }

  // string sender_address = 1;
  if (!this->_internal_sender_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sender_address());
  }

  // string contract_address = 2;
  if (!this->_internal_contract_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_contract_address());
  }

  // bytes amount = 3;
  if (!this->_internal_amount().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_amount());
  }

  // string recipient_contract_address = 4;
  if (!this->_internal_recipient_contract_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recipient_contract_address());
  }

  // string msg = 5;
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_WasmTerraExecuteContractSend::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_WasmTerraExecuteContractSend::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_WasmTerraExecuteContractSend::GetClassData() const { return &_class_data_; }

void Message_WasmTerraExecuteContractSend::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_WasmTerraExecuteContractSend *>(to)->MergeFrom(
      static_cast<const Message_WasmTerraExecuteContractSend &>(from));
}


void Message_WasmTerraExecuteContractSend::MergeFrom(const Message_WasmTerraExecuteContractSend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  coin_.MergeFrom(from.coin_);
  if (!from._internal_sender_address().empty()) {
    _internal_set_sender_address(from._internal_sender_address());
  }
  if (!from._internal_contract_address().empty()) {
    _internal_set_contract_address(from._internal_contract_address());
  }
  if (!from._internal_amount().empty()) {
    _internal_set_amount(from._internal_amount());
  }
  if (!from._internal_recipient_contract_address().empty()) {
    _internal_set_recipient_contract_address(from._internal_recipient_contract_address());
  }
  if (!from._internal_msg().empty()) {
    _internal_set_msg(from._internal_msg());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_WasmTerraExecuteContractSend::CopyFrom(const Message_WasmTerraExecuteContractSend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_WasmTerraExecuteContractSend::IsInitialized() const {
  return true;
}

void Message_WasmTerraExecuteContractSend::InternalSwap(Message_WasmTerraExecuteContractSend* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  coin_.InternalSwap(&other->coin_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sender_address_, lhs_arena,
      &other->sender_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &contract_address_, lhs_arena,
      &other->contract_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &amount_, lhs_arena,
      &other->amount_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &recipient_contract_address_, lhs_arena,
      &other->recipient_contract_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &msg_, lhs_arena,
      &other->msg_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_WasmTerraExecuteContractSend::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[14]);
}

// ===================================================================

class Message_THORChainSend::_Internal {
 public:
};

Message_THORChainSend::Message_THORChainSend(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  amounts_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.THORChainSend)
}
Message_THORChainSend::Message_THORChainSend(const Message_THORChainSend& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      amounts_(from.amounts_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  from_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    from_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_from_address().empty()) {
    from_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_from_address(), 
      GetArenaForAllocation());
  }
  to_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    to_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_to_address().empty()) {
    to_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_to_address(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.THORChainSend)
}

inline void Message_THORChainSend::SharedCtor() {
from_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  from_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
to_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  to_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Message_THORChainSend::~Message_THORChainSend() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.THORChainSend)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_THORChainSend::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  from_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  to_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_THORChainSend::ArenaDtor(void* object) {
  Message_THORChainSend* _this = reinterpret_cast< Message_THORChainSend* >(object);
  (void)_this;
}
void Message_THORChainSend::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_THORChainSend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_THORChainSend::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.THORChainSend)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  amounts_.Clear();
  from_address_.ClearToEmpty();
  to_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_THORChainSend::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes from_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_from_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes to_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_to_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .TW.Cosmos.Proto.Amount amounts = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_amounts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_THORChainSend::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.THORChainSend)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes from_address = 1;
  if (!this->_internal_from_address().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_from_address(), target);
  }

  // bytes to_address = 2;
  if (!this->_internal_to_address().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_to_address(), target);
  }

  // repeated .TW.Cosmos.Proto.Amount amounts = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_amounts_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_amounts(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.THORChainSend)
  return target;
}

size_t Message_THORChainSend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.THORChainSend)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TW.Cosmos.Proto.Amount amounts = 3;
  total_size += 1UL * this->_internal_amounts_size();
  for (const auto& msg : this->amounts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bytes from_address = 1;
  if (!this->_internal_from_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_from_address());
  }

  // bytes to_address = 2;
  if (!this->_internal_to_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_to_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_THORChainSend::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_THORChainSend::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_THORChainSend::GetClassData() const { return &_class_data_; }

void Message_THORChainSend::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_THORChainSend *>(to)->MergeFrom(
      static_cast<const Message_THORChainSend &>(from));
}


void Message_THORChainSend::MergeFrom(const Message_THORChainSend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.THORChainSend)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  amounts_.MergeFrom(from.amounts_);
  if (!from._internal_from_address().empty()) {
    _internal_set_from_address(from._internal_from_address());
  }
  if (!from._internal_to_address().empty()) {
    _internal_set_to_address(from._internal_to_address());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_THORChainSend::CopyFrom(const Message_THORChainSend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.THORChainSend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_THORChainSend::IsInitialized() const {
  return true;
}

void Message_THORChainSend::InternalSwap(Message_THORChainSend* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  amounts_.InternalSwap(&other->amounts_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &from_address_, lhs_arena,
      &other->from_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &to_address_, lhs_arena,
      &other->to_address_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_THORChainSend::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[15]);
}

// ===================================================================

class Message_THORChainDeposit::_Internal {
 public:
};

Message_THORChainDeposit::Message_THORChainDeposit(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  coins_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.THORChainDeposit)
}
Message_THORChainDeposit::Message_THORChainDeposit(const Message_THORChainDeposit& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      coins_(from.coins_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  memo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    memo_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_memo().empty()) {
    memo_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_memo(), 
      GetArenaForAllocation());
  }
  signer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    signer_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_signer().empty()) {
    signer_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_signer(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.THORChainDeposit)
}

inline void Message_THORChainDeposit::SharedCtor() {
memo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  memo_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
signer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  signer_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Message_THORChainDeposit::~Message_THORChainDeposit() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.THORChainDeposit)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_THORChainDeposit::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  memo_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  signer_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_THORChainDeposit::ArenaDtor(void* object) {
  Message_THORChainDeposit* _this = reinterpret_cast< Message_THORChainDeposit* >(object);
  (void)_this;
}
void Message_THORChainDeposit::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_THORChainDeposit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_THORChainDeposit::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.THORChainDeposit)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coins_.Clear();
  memo_.ClearToEmpty();
  signer_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_THORChainDeposit::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .TW.Cosmos.Proto.THORChainCoin coins = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_coins(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string memo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_memo();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.THORChainDeposit.memo"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes signer = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_signer();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_THORChainDeposit::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.THORChainDeposit)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TW.Cosmos.Proto.THORChainCoin coins = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_coins_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_coins(i), target, stream);
  }

  // string memo = 2;
  if (!this->_internal_memo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_memo().data(), static_cast<int>(this->_internal_memo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.THORChainDeposit.memo");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_memo(), target);
  }

  // bytes signer = 3;
  if (!this->_internal_signer().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_signer(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.THORChainDeposit)
  return target;
}

size_t Message_THORChainDeposit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.THORChainDeposit)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TW.Cosmos.Proto.THORChainCoin coins = 1;
  total_size += 1UL * this->_internal_coins_size();
  for (const auto& msg : this->coins_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string memo = 2;
  if (!this->_internal_memo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_memo());
  }

  // bytes signer = 3;
  if (!this->_internal_signer().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_signer());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_THORChainDeposit::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_THORChainDeposit::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_THORChainDeposit::GetClassData() const { return &_class_data_; }

void Message_THORChainDeposit::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_THORChainDeposit *>(to)->MergeFrom(
      static_cast<const Message_THORChainDeposit &>(from));
}


void Message_THORChainDeposit::MergeFrom(const Message_THORChainDeposit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.THORChainDeposit)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  coins_.MergeFrom(from.coins_);
  if (!from._internal_memo().empty()) {
    _internal_set_memo(from._internal_memo());
  }
  if (!from._internal_signer().empty()) {
    _internal_set_signer(from._internal_signer());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_THORChainDeposit::CopyFrom(const Message_THORChainDeposit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.THORChainDeposit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_THORChainDeposit::IsInitialized() const {
  return true;
}

void Message_THORChainDeposit::InternalSwap(Message_THORChainDeposit* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  coins_.InternalSwap(&other->coins_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &memo_, lhs_arena,
      &other->memo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &signer_, lhs_arena,
      &other->signer_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_THORChainDeposit::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[16]);
}

// ===================================================================

class Message_WasmTerraExecuteContractGeneric::_Internal {
 public:
};

Message_WasmTerraExecuteContractGeneric::Message_WasmTerraExecuteContractGeneric(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  coins_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.WasmTerraExecuteContractGeneric)
}
Message_WasmTerraExecuteContractGeneric::Message_WasmTerraExecuteContractGeneric(const Message_WasmTerraExecuteContractGeneric& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      coins_(from.coins_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sender_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sender_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender_address().empty()) {
    sender_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sender_address(), 
      GetArenaForAllocation());
  }
  contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    contract_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contract_address().empty()) {
    contract_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_contract_address(), 
      GetArenaForAllocation());
  }
  execute_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    execute_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_execute_msg().empty()) {
    execute_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_execute_msg(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.WasmTerraExecuteContractGeneric)
}

inline void Message_WasmTerraExecuteContractGeneric::SharedCtor() {
sender_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sender_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  contract_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
execute_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  execute_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Message_WasmTerraExecuteContractGeneric::~Message_WasmTerraExecuteContractGeneric() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.WasmTerraExecuteContractGeneric)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_WasmTerraExecuteContractGeneric::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  sender_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  execute_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_WasmTerraExecuteContractGeneric::ArenaDtor(void* object) {
  Message_WasmTerraExecuteContractGeneric* _this = reinterpret_cast< Message_WasmTerraExecuteContractGeneric* >(object);
  (void)_this;
}
void Message_WasmTerraExecuteContractGeneric::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_WasmTerraExecuteContractGeneric::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_WasmTerraExecuteContractGeneric::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.WasmTerraExecuteContractGeneric)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coins_.Clear();
  sender_address_.ClearToEmpty();
  contract_address_.ClearToEmpty();
  execute_msg_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_WasmTerraExecuteContractGeneric::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WasmTerraExecuteContractGeneric.sender_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string contract_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_contract_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WasmTerraExecuteContractGeneric.contract_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string execute_msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_execute_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WasmTerraExecuteContractGeneric.execute_msg"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .TW.Cosmos.Proto.Amount coins = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_coins(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_WasmTerraExecuteContractGeneric::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.WasmTerraExecuteContractGeneric)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender_address = 1;
  if (!this->_internal_sender_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sender_address().data(), static_cast<int>(this->_internal_sender_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WasmTerraExecuteContractGeneric.sender_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sender_address(), target);
  }

  // string contract_address = 2;
  if (!this->_internal_contract_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_contract_address().data(), static_cast<int>(this->_internal_contract_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WasmTerraExecuteContractGeneric.contract_address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_contract_address(), target);
  }

  // string execute_msg = 3;
  if (!this->_internal_execute_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_execute_msg().data(), static_cast<int>(this->_internal_execute_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WasmTerraExecuteContractGeneric.execute_msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_execute_msg(), target);
  }

  // repeated .TW.Cosmos.Proto.Amount coins = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_coins_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_coins(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.WasmTerraExecuteContractGeneric)
  return target;
}

size_t Message_WasmTerraExecuteContractGeneric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.WasmTerraExecuteContractGeneric)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TW.Cosmos.Proto.Amount coins = 5;
  total_size += 1UL * this->_internal_coins_size();
  for (const auto& msg : this->coins_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string sender_address = 1;
  if (!this->_internal_sender_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sender_address());
  }

  // string contract_address = 2;
  if (!this->_internal_contract_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_contract_address());
  }

  // string execute_msg = 3;
  if (!this->_internal_execute_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_execute_msg());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_WasmTerraExecuteContractGeneric::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_WasmTerraExecuteContractGeneric::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_WasmTerraExecuteContractGeneric::GetClassData() const { return &_class_data_; }

void Message_WasmTerraExecuteContractGeneric::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_WasmTerraExecuteContractGeneric *>(to)->MergeFrom(
      static_cast<const Message_WasmTerraExecuteContractGeneric &>(from));
}


void Message_WasmTerraExecuteContractGeneric::MergeFrom(const Message_WasmTerraExecuteContractGeneric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.WasmTerraExecuteContractGeneric)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  coins_.MergeFrom(from.coins_);
  if (!from._internal_sender_address().empty()) {
    _internal_set_sender_address(from._internal_sender_address());
  }
  if (!from._internal_contract_address().empty()) {
    _internal_set_contract_address(from._internal_contract_address());
  }
  if (!from._internal_execute_msg().empty()) {
    _internal_set_execute_msg(from._internal_execute_msg());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_WasmTerraExecuteContractGeneric::CopyFrom(const Message_WasmTerraExecuteContractGeneric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.WasmTerraExecuteContractGeneric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_WasmTerraExecuteContractGeneric::IsInitialized() const {
  return true;
}

void Message_WasmTerraExecuteContractGeneric::InternalSwap(Message_WasmTerraExecuteContractGeneric* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  coins_.InternalSwap(&other->coins_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sender_address_, lhs_arena,
      &other->sender_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &contract_address_, lhs_arena,
      &other->contract_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &execute_msg_, lhs_arena,
      &other->execute_msg_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_WasmTerraExecuteContractGeneric::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[17]);
}

// ===================================================================

class Message_WasmExecuteContractTransfer::_Internal {
 public:
};

Message_WasmExecuteContractTransfer::Message_WasmExecuteContractTransfer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.WasmExecuteContractTransfer)
}
Message_WasmExecuteContractTransfer::Message_WasmExecuteContractTransfer(const Message_WasmExecuteContractTransfer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sender_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sender_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender_address().empty()) {
    sender_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sender_address(), 
      GetArenaForAllocation());
  }
  contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    contract_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contract_address().empty()) {
    contract_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_contract_address(), 
      GetArenaForAllocation());
  }
  amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    amount_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_amount().empty()) {
    amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_amount(), 
      GetArenaForAllocation());
  }
  recipient_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    recipient_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_recipient_address().empty()) {
    recipient_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_recipient_address(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.WasmExecuteContractTransfer)
}

inline void Message_WasmExecuteContractTransfer::SharedCtor() {
sender_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sender_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  contract_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  amount_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
recipient_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  recipient_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Message_WasmExecuteContractTransfer::~Message_WasmExecuteContractTransfer() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.WasmExecuteContractTransfer)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_WasmExecuteContractTransfer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  sender_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  amount_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recipient_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_WasmExecuteContractTransfer::ArenaDtor(void* object) {
  Message_WasmExecuteContractTransfer* _this = reinterpret_cast< Message_WasmExecuteContractTransfer* >(object);
  (void)_this;
}
void Message_WasmExecuteContractTransfer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_WasmExecuteContractTransfer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_WasmExecuteContractTransfer::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.WasmExecuteContractTransfer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sender_address_.ClearToEmpty();
  contract_address_.ClearToEmpty();
  amount_.ClearToEmpty();
  recipient_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_WasmExecuteContractTransfer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WasmExecuteContractTransfer.sender_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string contract_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_contract_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WasmExecuteContractTransfer.contract_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes amount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_amount();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string recipient_address = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_recipient_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WasmExecuteContractTransfer.recipient_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_WasmExecuteContractTransfer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.WasmExecuteContractTransfer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender_address = 1;
  if (!this->_internal_sender_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sender_address().data(), static_cast<int>(this->_internal_sender_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WasmExecuteContractTransfer.sender_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sender_address(), target);
  }

  // string contract_address = 2;
  if (!this->_internal_contract_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_contract_address().data(), static_cast<int>(this->_internal_contract_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WasmExecuteContractTransfer.contract_address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_contract_address(), target);
  }

  // bytes amount = 3;
  if (!this->_internal_amount().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_amount(), target);
  }

  // string recipient_address = 4;
  if (!this->_internal_recipient_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recipient_address().data(), static_cast<int>(this->_internal_recipient_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WasmExecuteContractTransfer.recipient_address");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_recipient_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.WasmExecuteContractTransfer)
  return target;
}

size_t Message_WasmExecuteContractTransfer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.WasmExecuteContractTransfer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender_address = 1;
  if (!this->_internal_sender_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sender_address());
  }

  // string contract_address = 2;
  if (!this->_internal_contract_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_contract_address());
  }

  // bytes amount = 3;
  if (!this->_internal_amount().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_amount());
  }

  // string recipient_address = 4;
  if (!this->_internal_recipient_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recipient_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_WasmExecuteContractTransfer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_WasmExecuteContractTransfer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_WasmExecuteContractTransfer::GetClassData() const { return &_class_data_; }

void Message_WasmExecuteContractTransfer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_WasmExecuteContractTransfer *>(to)->MergeFrom(
      static_cast<const Message_WasmExecuteContractTransfer &>(from));
}


void Message_WasmExecuteContractTransfer::MergeFrom(const Message_WasmExecuteContractTransfer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.WasmExecuteContractTransfer)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender_address().empty()) {
    _internal_set_sender_address(from._internal_sender_address());
  }
  if (!from._internal_contract_address().empty()) {
    _internal_set_contract_address(from._internal_contract_address());
  }
  if (!from._internal_amount().empty()) {
    _internal_set_amount(from._internal_amount());
  }
  if (!from._internal_recipient_address().empty()) {
    _internal_set_recipient_address(from._internal_recipient_address());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_WasmExecuteContractTransfer::CopyFrom(const Message_WasmExecuteContractTransfer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.WasmExecuteContractTransfer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_WasmExecuteContractTransfer::IsInitialized() const {
  return true;
}

void Message_WasmExecuteContractTransfer::InternalSwap(Message_WasmExecuteContractTransfer* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sender_address_, lhs_arena,
      &other->sender_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &contract_address_, lhs_arena,
      &other->contract_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &amount_, lhs_arena,
      &other->amount_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &recipient_address_, lhs_arena,
      &other->recipient_address_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_WasmExecuteContractTransfer::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[18]);
}

// ===================================================================

class Message_WasmExecuteContractSend::_Internal {
 public:
};

Message_WasmExecuteContractSend::Message_WasmExecuteContractSend(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  coin_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.WasmExecuteContractSend)
}
Message_WasmExecuteContractSend::Message_WasmExecuteContractSend(const Message_WasmExecuteContractSend& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      coin_(from.coin_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sender_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sender_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender_address().empty()) {
    sender_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sender_address(), 
      GetArenaForAllocation());
  }
  contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    contract_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contract_address().empty()) {
    contract_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_contract_address(), 
      GetArenaForAllocation());
  }
  amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    amount_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_amount().empty()) {
    amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_amount(), 
      GetArenaForAllocation());
  }
  recipient_contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    recipient_contract_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_recipient_contract_address().empty()) {
    recipient_contract_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_recipient_contract_address(), 
      GetArenaForAllocation());
  }
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg().empty()) {
    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.WasmExecuteContractSend)
}

inline void Message_WasmExecuteContractSend::SharedCtor() {
sender_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sender_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  contract_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  amount_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
recipient_contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  recipient_contract_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Message_WasmExecuteContractSend::~Message_WasmExecuteContractSend() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.WasmExecuteContractSend)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_WasmExecuteContractSend::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  sender_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  amount_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recipient_contract_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_WasmExecuteContractSend::ArenaDtor(void* object) {
  Message_WasmExecuteContractSend* _this = reinterpret_cast< Message_WasmExecuteContractSend* >(object);
  (void)_this;
}
void Message_WasmExecuteContractSend::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_WasmExecuteContractSend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_WasmExecuteContractSend::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.WasmExecuteContractSend)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coin_.Clear();
  sender_address_.ClearToEmpty();
  contract_address_.ClearToEmpty();
  amount_.ClearToEmpty();
  recipient_contract_address_.ClearToEmpty();
  msg_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_WasmExecuteContractSend::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WasmExecuteContractSend.sender_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string contract_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_contract_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WasmExecuteContractSend.contract_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes amount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_amount();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string recipient_contract_address = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_recipient_contract_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WasmExecuteContractSend.recipient_contract_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string msg = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WasmExecuteContractSend.msg"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string coin = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_coin();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WasmExecuteContractSend.coin"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_WasmExecuteContractSend::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.WasmExecuteContractSend)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender_address = 1;
  if (!this->_internal_sender_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sender_address().data(), static_cast<int>(this->_internal_sender_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WasmExecuteContractSend.sender_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sender_address(), target);
  }

  // string contract_address = 2;
  if (!this->_internal_contract_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_contract_address().data(), static_cast<int>(this->_internal_contract_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WasmExecuteContractSend.contract_address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_contract_address(), target);
  }

  // bytes amount = 3;
  if (!this->_internal_amount().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_amount(), target);
  }

  // string recipient_contract_address = 4;
  if (!this->_internal_recipient_contract_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recipient_contract_address().data(), static_cast<int>(this->_internal_recipient_contract_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WasmExecuteContractSend.recipient_contract_address");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_recipient_contract_address(), target);
  }

  // string msg = 5;
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WasmExecuteContractSend.msg");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_msg(), target);
  }

  // repeated string coin = 6;
  for (int i = 0, n = this->_internal_coin_size(); i < n; i++) {
    const auto& s = this->_internal_coin(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WasmExecuteContractSend.coin");
    target = stream->WriteString(6, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.WasmExecuteContractSend)
  return target;
}

size_t Message_WasmExecuteContractSend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.WasmExecuteContractSend)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string coin = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(coin_.size());
  for (int i = 0, n = coin_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      coin_.Get(i));
  }

  // string sender_address = 1;
  if (!this->_internal_sender_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sender_address());
  }

  // string contract_address = 2;
  if (!this->_internal_contract_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_contract_address());
  }

  // bytes amount = 3;
  if (!this->_internal_amount().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_amount());
  }

  // string recipient_contract_address = 4;
  if (!this->_internal_recipient_contract_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recipient_contract_address());
  }

  // string msg = 5;
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_WasmExecuteContractSend::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_WasmExecuteContractSend::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_WasmExecuteContractSend::GetClassData() const { return &_class_data_; }

void Message_WasmExecuteContractSend::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_WasmExecuteContractSend *>(to)->MergeFrom(
      static_cast<const Message_WasmExecuteContractSend &>(from));
}


void Message_WasmExecuteContractSend::MergeFrom(const Message_WasmExecuteContractSend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.WasmExecuteContractSend)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  coin_.MergeFrom(from.coin_);
  if (!from._internal_sender_address().empty()) {
    _internal_set_sender_address(from._internal_sender_address());
  }
  if (!from._internal_contract_address().empty()) {
    _internal_set_contract_address(from._internal_contract_address());
  }
  if (!from._internal_amount().empty()) {
    _internal_set_amount(from._internal_amount());
  }
  if (!from._internal_recipient_contract_address().empty()) {
    _internal_set_recipient_contract_address(from._internal_recipient_contract_address());
  }
  if (!from._internal_msg().empty()) {
    _internal_set_msg(from._internal_msg());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_WasmExecuteContractSend::CopyFrom(const Message_WasmExecuteContractSend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.WasmExecuteContractSend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_WasmExecuteContractSend::IsInitialized() const {
  return true;
}

void Message_WasmExecuteContractSend::InternalSwap(Message_WasmExecuteContractSend* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  coin_.InternalSwap(&other->coin_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sender_address_, lhs_arena,
      &other->sender_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &contract_address_, lhs_arena,
      &other->contract_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &amount_, lhs_arena,
      &other->amount_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &recipient_contract_address_, lhs_arena,
      &other->recipient_contract_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &msg_, lhs_arena,
      &other->msg_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_WasmExecuteContractSend::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[19]);
}

// ===================================================================

class Message_WasmExecuteContractGeneric::_Internal {
 public:
};

Message_WasmExecuteContractGeneric::Message_WasmExecuteContractGeneric(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  coins_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.WasmExecuteContractGeneric)
}
Message_WasmExecuteContractGeneric::Message_WasmExecuteContractGeneric(const Message_WasmExecuteContractGeneric& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      coins_(from.coins_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sender_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sender_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender_address().empty()) {
    sender_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sender_address(), 
      GetArenaForAllocation());
  }
  contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    contract_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contract_address().empty()) {
    contract_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_contract_address(), 
      GetArenaForAllocation());
  }
  execute_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    execute_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_execute_msg().empty()) {
    execute_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_execute_msg(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.WasmExecuteContractGeneric)
}

inline void Message_WasmExecuteContractGeneric::SharedCtor() {
sender_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sender_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  contract_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
execute_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  execute_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Message_WasmExecuteContractGeneric::~Message_WasmExecuteContractGeneric() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.WasmExecuteContractGeneric)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_WasmExecuteContractGeneric::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  sender_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  execute_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_WasmExecuteContractGeneric::ArenaDtor(void* object) {
  Message_WasmExecuteContractGeneric* _this = reinterpret_cast< Message_WasmExecuteContractGeneric* >(object);
  (void)_this;
}
void Message_WasmExecuteContractGeneric::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_WasmExecuteContractGeneric::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_WasmExecuteContractGeneric::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.WasmExecuteContractGeneric)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coins_.Clear();
  sender_address_.ClearToEmpty();
  contract_address_.ClearToEmpty();
  execute_msg_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_WasmExecuteContractGeneric::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WasmExecuteContractGeneric.sender_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string contract_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_contract_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WasmExecuteContractGeneric.contract_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string execute_msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_execute_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.WasmExecuteContractGeneric.execute_msg"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .TW.Cosmos.Proto.Amount coins = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_coins(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_WasmExecuteContractGeneric::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.WasmExecuteContractGeneric)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender_address = 1;
  if (!this->_internal_sender_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sender_address().data(), static_cast<int>(this->_internal_sender_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WasmExecuteContractGeneric.sender_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sender_address(), target);
  }

  // string contract_address = 2;
  if (!this->_internal_contract_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_contract_address().data(), static_cast<int>(this->_internal_contract_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WasmExecuteContractGeneric.contract_address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_contract_address(), target);
  }

  // string execute_msg = 3;
  if (!this->_internal_execute_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_execute_msg().data(), static_cast<int>(this->_internal_execute_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.WasmExecuteContractGeneric.execute_msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_execute_msg(), target);
  }

  // repeated .TW.Cosmos.Proto.Amount coins = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_coins_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_coins(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.WasmExecuteContractGeneric)
  return target;
}

size_t Message_WasmExecuteContractGeneric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.WasmExecuteContractGeneric)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TW.Cosmos.Proto.Amount coins = 5;
  total_size += 1UL * this->_internal_coins_size();
  for (const auto& msg : this->coins_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string sender_address = 1;
  if (!this->_internal_sender_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sender_address());
  }

  // string contract_address = 2;
  if (!this->_internal_contract_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_contract_address());
  }

  // string execute_msg = 3;
  if (!this->_internal_execute_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_execute_msg());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_WasmExecuteContractGeneric::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_WasmExecuteContractGeneric::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_WasmExecuteContractGeneric::GetClassData() const { return &_class_data_; }

void Message_WasmExecuteContractGeneric::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_WasmExecuteContractGeneric *>(to)->MergeFrom(
      static_cast<const Message_WasmExecuteContractGeneric &>(from));
}


void Message_WasmExecuteContractGeneric::MergeFrom(const Message_WasmExecuteContractGeneric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.WasmExecuteContractGeneric)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  coins_.MergeFrom(from.coins_);
  if (!from._internal_sender_address().empty()) {
    _internal_set_sender_address(from._internal_sender_address());
  }
  if (!from._internal_contract_address().empty()) {
    _internal_set_contract_address(from._internal_contract_address());
  }
  if (!from._internal_execute_msg().empty()) {
    _internal_set_execute_msg(from._internal_execute_msg());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_WasmExecuteContractGeneric::CopyFrom(const Message_WasmExecuteContractGeneric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.WasmExecuteContractGeneric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_WasmExecuteContractGeneric::IsInitialized() const {
  return true;
}

void Message_WasmExecuteContractGeneric::InternalSwap(Message_WasmExecuteContractGeneric* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  coins_.InternalSwap(&other->coins_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sender_address_, lhs_arena,
      &other->sender_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &contract_address_, lhs_arena,
      &other->contract_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &execute_msg_, lhs_arena,
      &other->execute_msg_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_WasmExecuteContractGeneric::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[20]);
}

// ===================================================================

class Message_RawJSON::_Internal {
 public:
};

Message_RawJSON::Message_RawJSON(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.RawJSON)
}
Message_RawJSON::Message_RawJSON(const Message_RawJSON& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_type(), 
      GetArenaForAllocation());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_value(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.RawJSON)
}

inline void Message_RawJSON::SharedCtor() {
type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Message_RawJSON::~Message_RawJSON() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.RawJSON)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_RawJSON::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_RawJSON::ArenaDtor(void* object) {
  Message_RawJSON* _this = reinterpret_cast< Message_RawJSON* >(object);
  (void)_this;
}
void Message_RawJSON::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_RawJSON::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_RawJSON::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.RawJSON)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmpty();
  value_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_RawJSON::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.RawJSON.type"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.RawJSON.value"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_RawJSON::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.RawJSON)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.RawJSON.type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type(), target);
  }

  // string value = 2;
  if (!this->_internal_value().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.RawJSON.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.RawJSON)
  return target;
}

size_t Message_RawJSON::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.RawJSON)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string type = 1;
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string value = 2;
  if (!this->_internal_value().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_RawJSON::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_RawJSON::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_RawJSON::GetClassData() const { return &_class_data_; }

void Message_RawJSON::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_RawJSON *>(to)->MergeFrom(
      static_cast<const Message_RawJSON &>(from));
}


void Message_RawJSON::MergeFrom(const Message_RawJSON& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.RawJSON)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_type().empty()) {
    _internal_set_type(from._internal_type());
  }
  if (!from._internal_value().empty()) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_RawJSON::CopyFrom(const Message_RawJSON& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.RawJSON)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_RawJSON::IsInitialized() const {
  return true;
}

void Message_RawJSON::InternalSwap(Message_RawJSON* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &type_, lhs_arena,
      &other->type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &value_, lhs_arena,
      &other->value_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_RawJSON::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[21]);
}

// ===================================================================

class Message_SignDirect::_Internal {
 public:
};

Message_SignDirect::Message_SignDirect(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.SignDirect)
}
Message_SignDirect::Message_SignDirect(const Message_SignDirect& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  body_bytes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    body_bytes_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_body_bytes().empty()) {
    body_bytes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_body_bytes(), 
      GetArenaForAllocation());
  }
  auth_info_bytes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    auth_info_bytes_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_auth_info_bytes().empty()) {
    auth_info_bytes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_auth_info_bytes(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.SignDirect)
}

inline void Message_SignDirect::SharedCtor() {
body_bytes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  body_bytes_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
auth_info_bytes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  auth_info_bytes_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Message_SignDirect::~Message_SignDirect() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.SignDirect)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_SignDirect::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  body_bytes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  auth_info_bytes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_SignDirect::ArenaDtor(void* object) {
  Message_SignDirect* _this = reinterpret_cast< Message_SignDirect* >(object);
  (void)_this;
}
void Message_SignDirect::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_SignDirect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_SignDirect::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.SignDirect)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  body_bytes_.ClearToEmpty();
  auth_info_bytes_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_SignDirect::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes body_bytes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_body_bytes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes auth_info_bytes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_auth_info_bytes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_SignDirect::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.SignDirect)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes body_bytes = 1;
  if (!this->_internal_body_bytes().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_body_bytes(), target);
  }

  // bytes auth_info_bytes = 2;
  if (!this->_internal_auth_info_bytes().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_auth_info_bytes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.SignDirect)
  return target;
}

size_t Message_SignDirect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.SignDirect)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes body_bytes = 1;
  if (!this->_internal_body_bytes().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_body_bytes());
  }

  // bytes auth_info_bytes = 2;
  if (!this->_internal_auth_info_bytes().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_auth_info_bytes());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_SignDirect::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_SignDirect::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_SignDirect::GetClassData() const { return &_class_data_; }

void Message_SignDirect::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_SignDirect *>(to)->MergeFrom(
      static_cast<const Message_SignDirect &>(from));
}


void Message_SignDirect::MergeFrom(const Message_SignDirect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.SignDirect)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_body_bytes().empty()) {
    _internal_set_body_bytes(from._internal_body_bytes());
  }
  if (!from._internal_auth_info_bytes().empty()) {
    _internal_set_auth_info_bytes(from._internal_auth_info_bytes());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_SignDirect::CopyFrom(const Message_SignDirect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.SignDirect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_SignDirect::IsInitialized() const {
  return true;
}

void Message_SignDirect::InternalSwap(Message_SignDirect* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &body_bytes_, lhs_arena,
      &other->body_bytes_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &auth_info_bytes_, lhs_arena,
      &other->auth_info_bytes_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_SignDirect::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[22]);
}

// ===================================================================

class Message_StakeAuthorization_Validators::_Internal {
 public:
};

Message_StakeAuthorization_Validators::Message_StakeAuthorization_Validators(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  address_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.StakeAuthorization.Validators)
}
Message_StakeAuthorization_Validators::Message_StakeAuthorization_Validators(const Message_StakeAuthorization_Validators& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      address_(from.address_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.StakeAuthorization.Validators)
}

inline void Message_StakeAuthorization_Validators::SharedCtor() {
}

Message_StakeAuthorization_Validators::~Message_StakeAuthorization_Validators() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.StakeAuthorization.Validators)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_StakeAuthorization_Validators::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Message_StakeAuthorization_Validators::ArenaDtor(void* object) {
  Message_StakeAuthorization_Validators* _this = reinterpret_cast< Message_StakeAuthorization_Validators* >(object);
  (void)_this;
}
void Message_StakeAuthorization_Validators::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_StakeAuthorization_Validators::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_StakeAuthorization_Validators::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.StakeAuthorization.Validators)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_StakeAuthorization_Validators::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_address();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.StakeAuthorization.Validators.address"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_StakeAuthorization_Validators::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.StakeAuthorization.Validators)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string address = 1;
  for (int i = 0, n = this->_internal_address_size(); i < n; i++) {
    const auto& s = this->_internal_address(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.StakeAuthorization.Validators.address");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.StakeAuthorization.Validators)
  return target;
}

size_t Message_StakeAuthorization_Validators::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.StakeAuthorization.Validators)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string address = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(address_.size());
  for (int i = 0, n = address_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      address_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_StakeAuthorization_Validators::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_StakeAuthorization_Validators::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_StakeAuthorization_Validators::GetClassData() const { return &_class_data_; }

void Message_StakeAuthorization_Validators::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_StakeAuthorization_Validators *>(to)->MergeFrom(
      static_cast<const Message_StakeAuthorization_Validators &>(from));
}


void Message_StakeAuthorization_Validators::MergeFrom(const Message_StakeAuthorization_Validators& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.StakeAuthorization.Validators)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  address_.MergeFrom(from.address_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_StakeAuthorization_Validators::CopyFrom(const Message_StakeAuthorization_Validators& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.StakeAuthorization.Validators)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_StakeAuthorization_Validators::IsInitialized() const {
  return true;
}

void Message_StakeAuthorization_Validators::InternalSwap(Message_StakeAuthorization_Validators* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  address_.InternalSwap(&other->address_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_StakeAuthorization_Validators::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[23]);
}

// ===================================================================

class Message_StakeAuthorization::_Internal {
 public:
  static const ::TW::Cosmos::Proto::Amount& max_tokens(const Message_StakeAuthorization* msg);
  static const ::TW::Cosmos::Proto::Message_StakeAuthorization_Validators& allow_list(const Message_StakeAuthorization* msg);
  static const ::TW::Cosmos::Proto::Message_StakeAuthorization_Validators& deny_list(const Message_StakeAuthorization* msg);
};

const ::TW::Cosmos::Proto::Amount&
Message_StakeAuthorization::_Internal::max_tokens(const Message_StakeAuthorization* msg) {
  return *msg->max_tokens_;
}
const ::TW::Cosmos::Proto::Message_StakeAuthorization_Validators&
Message_StakeAuthorization::_Internal::allow_list(const Message_StakeAuthorization* msg) {
  return *msg->validators_.allow_list_;
}
const ::TW::Cosmos::Proto::Message_StakeAuthorization_Validators&
Message_StakeAuthorization::_Internal::deny_list(const Message_StakeAuthorization* msg) {
  return *msg->validators_.deny_list_;
}
void Message_StakeAuthorization::set_allocated_allow_list(::TW::Cosmos::Proto::Message_StakeAuthorization_Validators* allow_list) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_validators();
  if (allow_list) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_StakeAuthorization_Validators>::GetOwningArena(allow_list);
    if (message_arena != submessage_arena) {
      allow_list = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, allow_list, submessage_arena);
    }
    set_has_allow_list();
    validators_.allow_list_ = allow_list;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.StakeAuthorization.allow_list)
}
void Message_StakeAuthorization::set_allocated_deny_list(::TW::Cosmos::Proto::Message_StakeAuthorization_Validators* deny_list) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_validators();
  if (deny_list) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_StakeAuthorization_Validators>::GetOwningArena(deny_list);
    if (message_arena != submessage_arena) {
      deny_list = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, deny_list, submessage_arena);
    }
    set_has_deny_list();
    validators_.deny_list_ = deny_list;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.StakeAuthorization.deny_list)
}
Message_StakeAuthorization::Message_StakeAuthorization(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.StakeAuthorization)
}
Message_StakeAuthorization::Message_StakeAuthorization(const Message_StakeAuthorization& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_max_tokens()) {
    max_tokens_ = new ::TW::Cosmos::Proto::Amount(*from.max_tokens_);
  } else {
    max_tokens_ = nullptr;
  }
  authorization_type_ = from.authorization_type_;
  clear_has_validators();
  switch (from.validators_case()) {
    case kAllowList: {
      _internal_mutable_allow_list()->::TW::Cosmos::Proto::Message_StakeAuthorization_Validators::MergeFrom(from._internal_allow_list());
      break;
    }
    case kDenyList: {
      _internal_mutable_deny_list()->::TW::Cosmos::Proto::Message_StakeAuthorization_Validators::MergeFrom(from._internal_deny_list());
      break;
    }
    case VALIDATORS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.StakeAuthorization)
}

inline void Message_StakeAuthorization::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&max_tokens_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&authorization_type_) -
    reinterpret_cast<char*>(&max_tokens_)) + sizeof(authorization_type_));
clear_has_validators();
}

Message_StakeAuthorization::~Message_StakeAuthorization() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.StakeAuthorization)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_StakeAuthorization::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete max_tokens_;
  if (has_validators()) {
    clear_validators();
  }
}

void Message_StakeAuthorization::ArenaDtor(void* object) {
  Message_StakeAuthorization* _this = reinterpret_cast< Message_StakeAuthorization* >(object);
  (void)_this;
}
void Message_StakeAuthorization::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_StakeAuthorization::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_StakeAuthorization::clear_validators() {
// @@protoc_insertion_point(one_of_clear_start:TW.Cosmos.Proto.Message.StakeAuthorization)
  switch (validators_case()) {
    case kAllowList: {
      if (GetArenaForAllocation() == nullptr) {
        delete validators_.allow_list_;
      }
      break;
    }
    case kDenyList: {
      if (GetArenaForAllocation() == nullptr) {
        delete validators_.deny_list_;
      }
      break;
    }
    case VALIDATORS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALIDATORS_NOT_SET;
}


void Message_StakeAuthorization::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.StakeAuthorization)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && max_tokens_ != nullptr) {
    delete max_tokens_;
  }
  max_tokens_ = nullptr;
  authorization_type_ = 0;
  clear_validators();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_StakeAuthorization::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .TW.Cosmos.Proto.Amount max_tokens = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_max_tokens(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.StakeAuthorization.Validators allow_list = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_allow_list(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.StakeAuthorization.Validators deny_list = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_deny_list(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.AuthorizationType authorization_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_authorization_type(static_cast<::TW::Cosmos::Proto::Message_AuthorizationType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_StakeAuthorization::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.StakeAuthorization)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .TW.Cosmos.Proto.Amount max_tokens = 1;
  if (this->_internal_has_max_tokens()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::max_tokens(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.StakeAuthorization.Validators allow_list = 2;
  if (_internal_has_allow_list()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::allow_list(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.StakeAuthorization.Validators deny_list = 3;
  if (_internal_has_deny_list()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::deny_list(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.AuthorizationType authorization_type = 4;
  if (this->_internal_authorization_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_authorization_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.StakeAuthorization)
  return target;
}

size_t Message_StakeAuthorization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.StakeAuthorization)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .TW.Cosmos.Proto.Amount max_tokens = 1;
  if (this->_internal_has_max_tokens()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *max_tokens_);
  }

  // .TW.Cosmos.Proto.Message.AuthorizationType authorization_type = 4;
  if (this->_internal_authorization_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_authorization_type());
  }

  switch (validators_case()) {
    // .TW.Cosmos.Proto.Message.StakeAuthorization.Validators allow_list = 2;
    case kAllowList: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *validators_.allow_list_);
      break;
    }
    // .TW.Cosmos.Proto.Message.StakeAuthorization.Validators deny_list = 3;
    case kDenyList: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *validators_.deny_list_);
      break;
    }
    case VALIDATORS_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_StakeAuthorization::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_StakeAuthorization::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_StakeAuthorization::GetClassData() const { return &_class_data_; }

void Message_StakeAuthorization::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_StakeAuthorization *>(to)->MergeFrom(
      static_cast<const Message_StakeAuthorization &>(from));
}


void Message_StakeAuthorization::MergeFrom(const Message_StakeAuthorization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.StakeAuthorization)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_max_tokens()) {
    _internal_mutable_max_tokens()->::TW::Cosmos::Proto::Amount::MergeFrom(from._internal_max_tokens());
  }
  if (from._internal_authorization_type() != 0) {
    _internal_set_authorization_type(from._internal_authorization_type());
  }
  switch (from.validators_case()) {
    case kAllowList: {
      _internal_mutable_allow_list()->::TW::Cosmos::Proto::Message_StakeAuthorization_Validators::MergeFrom(from._internal_allow_list());
      break;
    }
    case kDenyList: {
      _internal_mutable_deny_list()->::TW::Cosmos::Proto::Message_StakeAuthorization_Validators::MergeFrom(from._internal_deny_list());
      break;
    }
    case VALIDATORS_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_StakeAuthorization::CopyFrom(const Message_StakeAuthorization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.StakeAuthorization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_StakeAuthorization::IsInitialized() const {
  return true;
}

void Message_StakeAuthorization::InternalSwap(Message_StakeAuthorization* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message_StakeAuthorization, authorization_type_)
      + sizeof(Message_StakeAuthorization::authorization_type_)
      - PROTOBUF_FIELD_OFFSET(Message_StakeAuthorization, max_tokens_)>(
          reinterpret_cast<char*>(&max_tokens_),
          reinterpret_cast<char*>(&other->max_tokens_));
  swap(validators_, other->validators_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_StakeAuthorization::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[24]);
}

// ===================================================================

class Message_AuthGrant::_Internal {
 public:
  static const ::TW::Cosmos::Proto::Message_StakeAuthorization& grant_stake(const Message_AuthGrant* msg);
};

const ::TW::Cosmos::Proto::Message_StakeAuthorization&
Message_AuthGrant::_Internal::grant_stake(const Message_AuthGrant* msg) {
  return *msg->grant_type_.grant_stake_;
}
void Message_AuthGrant::set_allocated_grant_stake(::TW::Cosmos::Proto::Message_StakeAuthorization* grant_stake) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_grant_type();
  if (grant_stake) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_StakeAuthorization>::GetOwningArena(grant_stake);
    if (message_arena != submessage_arena) {
      grant_stake = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, grant_stake, submessage_arena);
    }
    set_has_grant_stake();
    grant_type_.grant_stake_ = grant_stake;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.AuthGrant.grant_stake)
}
Message_AuthGrant::Message_AuthGrant(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.AuthGrant)
}
Message_AuthGrant::Message_AuthGrant(const Message_AuthGrant& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  granter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    granter_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_granter().empty()) {
    granter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_granter(), 
      GetArenaForAllocation());
  }
  grantee_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    grantee_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_grantee().empty()) {
    grantee_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_grantee(), 
      GetArenaForAllocation());
  }
  expiration_ = from.expiration_;
  clear_has_grant_type();
  switch (from.grant_type_case()) {
    case kGrantStake: {
      _internal_mutable_grant_stake()->::TW::Cosmos::Proto::Message_StakeAuthorization::MergeFrom(from._internal_grant_stake());
      break;
    }
    case GRANT_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.AuthGrant)
}

inline void Message_AuthGrant::SharedCtor() {
granter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  granter_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
grantee_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  grantee_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
expiration_ = int64_t{0};
clear_has_grant_type();
}

Message_AuthGrant::~Message_AuthGrant() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.AuthGrant)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_AuthGrant::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  granter_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  grantee_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_grant_type()) {
    clear_grant_type();
  }
}

void Message_AuthGrant::ArenaDtor(void* object) {
  Message_AuthGrant* _this = reinterpret_cast< Message_AuthGrant* >(object);
  (void)_this;
}
void Message_AuthGrant::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_AuthGrant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_AuthGrant::clear_grant_type() {
// @@protoc_insertion_point(one_of_clear_start:TW.Cosmos.Proto.Message.AuthGrant)
  switch (grant_type_case()) {
    case kGrantStake: {
      if (GetArenaForAllocation() == nullptr) {
        delete grant_type_.grant_stake_;
      }
      break;
    }
    case GRANT_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = GRANT_TYPE_NOT_SET;
}


void Message_AuthGrant::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.AuthGrant)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  granter_.ClearToEmpty();
  grantee_.ClearToEmpty();
  expiration_ = int64_t{0};
  clear_grant_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_AuthGrant::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string granter = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_granter();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.AuthGrant.granter"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string grantee = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_grantee();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.AuthGrant.grantee"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.StakeAuthorization grant_stake = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_grant_stake(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 expiration = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          expiration_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_AuthGrant::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.AuthGrant)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string granter = 1;
  if (!this->_internal_granter().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_granter().data(), static_cast<int>(this->_internal_granter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.AuthGrant.granter");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_granter(), target);
  }

  // string grantee = 2;
  if (!this->_internal_grantee().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_grantee().data(), static_cast<int>(this->_internal_grantee().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.AuthGrant.grantee");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_grantee(), target);
  }

  // .TW.Cosmos.Proto.Message.StakeAuthorization grant_stake = 3;
  if (_internal_has_grant_stake()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::grant_stake(this), target, stream);
  }

  // int64 expiration = 4;
  if (this->_internal_expiration() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_expiration(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.AuthGrant)
  return target;
}

size_t Message_AuthGrant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.AuthGrant)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string granter = 1;
  if (!this->_internal_granter().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_granter());
  }

  // string grantee = 2;
  if (!this->_internal_grantee().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_grantee());
  }

  // int64 expiration = 4;
  if (this->_internal_expiration() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_expiration());
  }

  switch (grant_type_case()) {
    // .TW.Cosmos.Proto.Message.StakeAuthorization grant_stake = 3;
    case kGrantStake: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *grant_type_.grant_stake_);
      break;
    }
    case GRANT_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_AuthGrant::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_AuthGrant::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_AuthGrant::GetClassData() const { return &_class_data_; }

void Message_AuthGrant::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_AuthGrant *>(to)->MergeFrom(
      static_cast<const Message_AuthGrant &>(from));
}


void Message_AuthGrant::MergeFrom(const Message_AuthGrant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.AuthGrant)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_granter().empty()) {
    _internal_set_granter(from._internal_granter());
  }
  if (!from._internal_grantee().empty()) {
    _internal_set_grantee(from._internal_grantee());
  }
  if (from._internal_expiration() != 0) {
    _internal_set_expiration(from._internal_expiration());
  }
  switch (from.grant_type_case()) {
    case kGrantStake: {
      _internal_mutable_grant_stake()->::TW::Cosmos::Proto::Message_StakeAuthorization::MergeFrom(from._internal_grant_stake());
      break;
    }
    case GRANT_TYPE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_AuthGrant::CopyFrom(const Message_AuthGrant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.AuthGrant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_AuthGrant::IsInitialized() const {
  return true;
}

void Message_AuthGrant::InternalSwap(Message_AuthGrant* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &granter_, lhs_arena,
      &other->granter_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &grantee_, lhs_arena,
      &other->grantee_, rhs_arena
  );
  swap(expiration_, other->expiration_);
  swap(grant_type_, other->grant_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_AuthGrant::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[25]);
}

// ===================================================================

class Message_AuthRevoke::_Internal {
 public:
};

Message_AuthRevoke::Message_AuthRevoke(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.AuthRevoke)
}
Message_AuthRevoke::Message_AuthRevoke(const Message_AuthRevoke& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  granter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    granter_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_granter().empty()) {
    granter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_granter(), 
      GetArenaForAllocation());
  }
  grantee_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    grantee_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_grantee().empty()) {
    grantee_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_grantee(), 
      GetArenaForAllocation());
  }
  msg_type_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    msg_type_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_type_url().empty()) {
    msg_type_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg_type_url(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.AuthRevoke)
}

inline void Message_AuthRevoke::SharedCtor() {
granter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  granter_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
grantee_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  grantee_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
msg_type_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  msg_type_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Message_AuthRevoke::~Message_AuthRevoke() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.AuthRevoke)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_AuthRevoke::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  granter_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  grantee_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_type_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_AuthRevoke::ArenaDtor(void* object) {
  Message_AuthRevoke* _this = reinterpret_cast< Message_AuthRevoke* >(object);
  (void)_this;
}
void Message_AuthRevoke::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_AuthRevoke::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_AuthRevoke::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.AuthRevoke)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  granter_.ClearToEmpty();
  grantee_.ClearToEmpty();
  msg_type_url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_AuthRevoke::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string granter = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_granter();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.AuthRevoke.granter"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string grantee = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_grantee();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.AuthRevoke.grantee"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string msg_type_url = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_msg_type_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.AuthRevoke.msg_type_url"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_AuthRevoke::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.AuthRevoke)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string granter = 1;
  if (!this->_internal_granter().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_granter().data(), static_cast<int>(this->_internal_granter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.AuthRevoke.granter");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_granter(), target);
  }

  // string grantee = 2;
  if (!this->_internal_grantee().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_grantee().data(), static_cast<int>(this->_internal_grantee().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.AuthRevoke.grantee");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_grantee(), target);
  }

  // string msg_type_url = 3;
  if (!this->_internal_msg_type_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_type_url().data(), static_cast<int>(this->_internal_msg_type_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.AuthRevoke.msg_type_url");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg_type_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.AuthRevoke)
  return target;
}

size_t Message_AuthRevoke::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.AuthRevoke)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string granter = 1;
  if (!this->_internal_granter().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_granter());
  }

  // string grantee = 2;
  if (!this->_internal_grantee().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_grantee());
  }

  // string msg_type_url = 3;
  if (!this->_internal_msg_type_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_type_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_AuthRevoke::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_AuthRevoke::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_AuthRevoke::GetClassData() const { return &_class_data_; }

void Message_AuthRevoke::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_AuthRevoke *>(to)->MergeFrom(
      static_cast<const Message_AuthRevoke &>(from));
}


void Message_AuthRevoke::MergeFrom(const Message_AuthRevoke& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.AuthRevoke)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_granter().empty()) {
    _internal_set_granter(from._internal_granter());
  }
  if (!from._internal_grantee().empty()) {
    _internal_set_grantee(from._internal_grantee());
  }
  if (!from._internal_msg_type_url().empty()) {
    _internal_set_msg_type_url(from._internal_msg_type_url());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_AuthRevoke::CopyFrom(const Message_AuthRevoke& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.AuthRevoke)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_AuthRevoke::IsInitialized() const {
  return true;
}

void Message_AuthRevoke::InternalSwap(Message_AuthRevoke* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &granter_, lhs_arena,
      &other->granter_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &grantee_, lhs_arena,
      &other->grantee_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &msg_type_url_, lhs_arena,
      &other->msg_type_url_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_AuthRevoke::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[26]);
}

// ===================================================================

class Message_MsgVote::_Internal {
 public:
};

Message_MsgVote::Message_MsgVote(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.MsgVote)
}
Message_MsgVote::Message_MsgVote(const Message_MsgVote& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  voter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    voter_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_voter().empty()) {
    voter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_voter(), 
      GetArenaForAllocation());
  }
  ::memcpy(&proposal_id_, &from.proposal_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&option_) -
    reinterpret_cast<char*>(&proposal_id_)) + sizeof(option_));
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.MsgVote)
}

inline void Message_MsgVote::SharedCtor() {
voter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  voter_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&proposal_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&option_) -
    reinterpret_cast<char*>(&proposal_id_)) + sizeof(option_));
}

Message_MsgVote::~Message_MsgVote() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.MsgVote)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_MsgVote::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  voter_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_MsgVote::ArenaDtor(void* object) {
  Message_MsgVote* _this = reinterpret_cast< Message_MsgVote* >(object);
  (void)_this;
}
void Message_MsgVote::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_MsgVote::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_MsgVote::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.MsgVote)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  voter_.ClearToEmpty();
  ::memset(&proposal_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&option_) -
      reinterpret_cast<char*>(&proposal_id_)) + sizeof(option_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_MsgVote::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 proposal_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          proposal_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string voter = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_voter();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.MsgVote.voter"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.VoteOption option = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_option(static_cast<::TW::Cosmos::Proto::Message_VoteOption>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_MsgVote::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.MsgVote)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 proposal_id = 1;
  if (this->_internal_proposal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_proposal_id(), target);
  }

  // string voter = 2;
  if (!this->_internal_voter().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_voter().data(), static_cast<int>(this->_internal_voter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.MsgVote.voter");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_voter(), target);
  }

  // .TW.Cosmos.Proto.Message.VoteOption option = 3;
  if (this->_internal_option() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_option(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.MsgVote)
  return target;
}

size_t Message_MsgVote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.MsgVote)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string voter = 2;
  if (!this->_internal_voter().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_voter());
  }

  // uint64 proposal_id = 1;
  if (this->_internal_proposal_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_proposal_id());
  }

  // .TW.Cosmos.Proto.Message.VoteOption option = 3;
  if (this->_internal_option() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_option());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_MsgVote::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_MsgVote::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_MsgVote::GetClassData() const { return &_class_data_; }

void Message_MsgVote::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_MsgVote *>(to)->MergeFrom(
      static_cast<const Message_MsgVote &>(from));
}


void Message_MsgVote::MergeFrom(const Message_MsgVote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.MsgVote)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_voter().empty()) {
    _internal_set_voter(from._internal_voter());
  }
  if (from._internal_proposal_id() != 0) {
    _internal_set_proposal_id(from._internal_proposal_id());
  }
  if (from._internal_option() != 0) {
    _internal_set_option(from._internal_option());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_MsgVote::CopyFrom(const Message_MsgVote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.MsgVote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_MsgVote::IsInitialized() const {
  return true;
}

void Message_MsgVote::InternalSwap(Message_MsgVote* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &voter_, lhs_arena,
      &other->voter_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message_MsgVote, option_)
      + sizeof(Message_MsgVote::option_)
      - PROTOBUF_FIELD_OFFSET(Message_MsgVote, proposal_id_)>(
          reinterpret_cast<char*>(&proposal_id_),
          reinterpret_cast<char*>(&other->proposal_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_MsgVote::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[27]);
}

// ===================================================================

class Message_MsgStrideLiquidStakingStake::_Internal {
 public:
};

Message_MsgStrideLiquidStakingStake::Message_MsgStrideLiquidStakingStake(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.MsgStrideLiquidStakingStake)
}
Message_MsgStrideLiquidStakingStake::Message_MsgStrideLiquidStakingStake(const Message_MsgStrideLiquidStakingStake& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  creator_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    creator_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_creator().empty()) {
    creator_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_creator(), 
      GetArenaForAllocation());
  }
  amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    amount_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_amount().empty()) {
    amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_amount(), 
      GetArenaForAllocation());
  }
  host_denom_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    host_denom_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_host_denom().empty()) {
    host_denom_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_host_denom(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.MsgStrideLiquidStakingStake)
}

inline void Message_MsgStrideLiquidStakingStake::SharedCtor() {
creator_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  creator_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  amount_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
host_denom_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  host_denom_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Message_MsgStrideLiquidStakingStake::~Message_MsgStrideLiquidStakingStake() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.MsgStrideLiquidStakingStake)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_MsgStrideLiquidStakingStake::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  creator_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  amount_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  host_denom_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_MsgStrideLiquidStakingStake::ArenaDtor(void* object) {
  Message_MsgStrideLiquidStakingStake* _this = reinterpret_cast< Message_MsgStrideLiquidStakingStake* >(object);
  (void)_this;
}
void Message_MsgStrideLiquidStakingStake::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_MsgStrideLiquidStakingStake::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_MsgStrideLiquidStakingStake::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.MsgStrideLiquidStakingStake)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  creator_.ClearToEmpty();
  amount_.ClearToEmpty();
  host_denom_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_MsgStrideLiquidStakingStake::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string creator = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_creator();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.MsgStrideLiquidStakingStake.creator"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string amount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_amount();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.MsgStrideLiquidStakingStake.amount"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string host_denom = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_host_denom();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.MsgStrideLiquidStakingStake.host_denom"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_MsgStrideLiquidStakingStake::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.MsgStrideLiquidStakingStake)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string creator = 1;
  if (!this->_internal_creator().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_creator().data(), static_cast<int>(this->_internal_creator().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.MsgStrideLiquidStakingStake.creator");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_creator(), target);
  }

  // string amount = 2;
  if (!this->_internal_amount().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_amount().data(), static_cast<int>(this->_internal_amount().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.MsgStrideLiquidStakingStake.amount");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_amount(), target);
  }

  // string host_denom = 3;
  if (!this->_internal_host_denom().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_host_denom().data(), static_cast<int>(this->_internal_host_denom().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.MsgStrideLiquidStakingStake.host_denom");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_host_denom(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.MsgStrideLiquidStakingStake)
  return target;
}

size_t Message_MsgStrideLiquidStakingStake::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.MsgStrideLiquidStakingStake)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string creator = 1;
  if (!this->_internal_creator().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_creator());
  }

  // string amount = 2;
  if (!this->_internal_amount().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_amount());
  }

  // string host_denom = 3;
  if (!this->_internal_host_denom().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_host_denom());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_MsgStrideLiquidStakingStake::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_MsgStrideLiquidStakingStake::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_MsgStrideLiquidStakingStake::GetClassData() const { return &_class_data_; }

void Message_MsgStrideLiquidStakingStake::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_MsgStrideLiquidStakingStake *>(to)->MergeFrom(
      static_cast<const Message_MsgStrideLiquidStakingStake &>(from));
}


void Message_MsgStrideLiquidStakingStake::MergeFrom(const Message_MsgStrideLiquidStakingStake& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.MsgStrideLiquidStakingStake)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_creator().empty()) {
    _internal_set_creator(from._internal_creator());
  }
  if (!from._internal_amount().empty()) {
    _internal_set_amount(from._internal_amount());
  }
  if (!from._internal_host_denom().empty()) {
    _internal_set_host_denom(from._internal_host_denom());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_MsgStrideLiquidStakingStake::CopyFrom(const Message_MsgStrideLiquidStakingStake& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.MsgStrideLiquidStakingStake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_MsgStrideLiquidStakingStake::IsInitialized() const {
  return true;
}

void Message_MsgStrideLiquidStakingStake::InternalSwap(Message_MsgStrideLiquidStakingStake* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &creator_, lhs_arena,
      &other->creator_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &amount_, lhs_arena,
      &other->amount_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &host_denom_, lhs_arena,
      &other->host_denom_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_MsgStrideLiquidStakingStake::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[28]);
}

// ===================================================================

class Message_MsgStrideLiquidStakingRedeem::_Internal {
 public:
};

Message_MsgStrideLiquidStakingRedeem::Message_MsgStrideLiquidStakingRedeem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message.MsgStrideLiquidStakingRedeem)
}
Message_MsgStrideLiquidStakingRedeem::Message_MsgStrideLiquidStakingRedeem(const Message_MsgStrideLiquidStakingRedeem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  creator_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    creator_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_creator().empty()) {
    creator_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_creator(), 
      GetArenaForAllocation());
  }
  amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    amount_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_amount().empty()) {
    amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_amount(), 
      GetArenaForAllocation());
  }
  host_zone_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    host_zone_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_host_zone().empty()) {
    host_zone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_host_zone(), 
      GetArenaForAllocation());
  }
  receiver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    receiver_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_receiver().empty()) {
    receiver_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_receiver(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message.MsgStrideLiquidStakingRedeem)
}

inline void Message_MsgStrideLiquidStakingRedeem::SharedCtor() {
creator_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  creator_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  amount_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
host_zone_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  host_zone_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
receiver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  receiver_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Message_MsgStrideLiquidStakingRedeem::~Message_MsgStrideLiquidStakingRedeem() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message.MsgStrideLiquidStakingRedeem)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message_MsgStrideLiquidStakingRedeem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  creator_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  amount_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  host_zone_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receiver_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_MsgStrideLiquidStakingRedeem::ArenaDtor(void* object) {
  Message_MsgStrideLiquidStakingRedeem* _this = reinterpret_cast< Message_MsgStrideLiquidStakingRedeem* >(object);
  (void)_this;
}
void Message_MsgStrideLiquidStakingRedeem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_MsgStrideLiquidStakingRedeem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message_MsgStrideLiquidStakingRedeem::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message.MsgStrideLiquidStakingRedeem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  creator_.ClearToEmpty();
  amount_.ClearToEmpty();
  host_zone_.ClearToEmpty();
  receiver_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_MsgStrideLiquidStakingRedeem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string creator = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_creator();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.MsgStrideLiquidStakingRedeem.creator"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string amount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_amount();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.MsgStrideLiquidStakingRedeem.amount"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string host_zone = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_host_zone();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.MsgStrideLiquidStakingRedeem.host_zone"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string receiver = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_receiver();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.Message.MsgStrideLiquidStakingRedeem.receiver"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message_MsgStrideLiquidStakingRedeem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message.MsgStrideLiquidStakingRedeem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string creator = 1;
  if (!this->_internal_creator().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_creator().data(), static_cast<int>(this->_internal_creator().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.MsgStrideLiquidStakingRedeem.creator");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_creator(), target);
  }

  // string amount = 2;
  if (!this->_internal_amount().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_amount().data(), static_cast<int>(this->_internal_amount().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.MsgStrideLiquidStakingRedeem.amount");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_amount(), target);
  }

  // string host_zone = 3;
  if (!this->_internal_host_zone().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_host_zone().data(), static_cast<int>(this->_internal_host_zone().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.MsgStrideLiquidStakingRedeem.host_zone");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_host_zone(), target);
  }

  // string receiver = 4;
  if (!this->_internal_receiver().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_receiver().data(), static_cast<int>(this->_internal_receiver().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.Message.MsgStrideLiquidStakingRedeem.receiver");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_receiver(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message.MsgStrideLiquidStakingRedeem)
  return target;
}

size_t Message_MsgStrideLiquidStakingRedeem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message.MsgStrideLiquidStakingRedeem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string creator = 1;
  if (!this->_internal_creator().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_creator());
  }

  // string amount = 2;
  if (!this->_internal_amount().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_amount());
  }

  // string host_zone = 3;
  if (!this->_internal_host_zone().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_host_zone());
  }

  // string receiver = 4;
  if (!this->_internal_receiver().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_receiver());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message_MsgStrideLiquidStakingRedeem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message_MsgStrideLiquidStakingRedeem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message_MsgStrideLiquidStakingRedeem::GetClassData() const { return &_class_data_; }

void Message_MsgStrideLiquidStakingRedeem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message_MsgStrideLiquidStakingRedeem *>(to)->MergeFrom(
      static_cast<const Message_MsgStrideLiquidStakingRedeem &>(from));
}


void Message_MsgStrideLiquidStakingRedeem::MergeFrom(const Message_MsgStrideLiquidStakingRedeem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message.MsgStrideLiquidStakingRedeem)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_creator().empty()) {
    _internal_set_creator(from._internal_creator());
  }
  if (!from._internal_amount().empty()) {
    _internal_set_amount(from._internal_amount());
  }
  if (!from._internal_host_zone().empty()) {
    _internal_set_host_zone(from._internal_host_zone());
  }
  if (!from._internal_receiver().empty()) {
    _internal_set_receiver(from._internal_receiver());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message_MsgStrideLiquidStakingRedeem::CopyFrom(const Message_MsgStrideLiquidStakingRedeem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message.MsgStrideLiquidStakingRedeem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_MsgStrideLiquidStakingRedeem::IsInitialized() const {
  return true;
}

void Message_MsgStrideLiquidStakingRedeem::InternalSwap(Message_MsgStrideLiquidStakingRedeem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &creator_, lhs_arena,
      &other->creator_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &amount_, lhs_arena,
      &other->amount_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &host_zone_, lhs_arena,
      &other->host_zone_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &receiver_, lhs_arena,
      &other->receiver_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_MsgStrideLiquidStakingRedeem::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[29]);
}

// ===================================================================

class Message::_Internal {
 public:
  static const ::TW::Cosmos::Proto::Message_Send& send_coins_message(const Message* msg);
  static const ::TW::Cosmos::Proto::Message_Transfer& transfer_tokens_message(const Message* msg);
  static const ::TW::Cosmos::Proto::Message_Delegate& stake_message(const Message* msg);
  static const ::TW::Cosmos::Proto::Message_Undelegate& unstake_message(const Message* msg);
  static const ::TW::Cosmos::Proto::Message_BeginRedelegate& restake_message(const Message* msg);
  static const ::TW::Cosmos::Proto::Message_WithdrawDelegationReward& withdraw_stake_reward_message(const Message* msg);
  static const ::TW::Cosmos::Proto::Message_RawJSON& raw_json_message(const Message* msg);
  static const ::TW::Cosmos::Proto::Message_WasmTerraExecuteContractTransfer& wasm_terra_execute_contract_transfer_message(const Message* msg);
  static const ::TW::Cosmos::Proto::Message_WasmTerraExecuteContractSend& wasm_terra_execute_contract_send_message(const Message* msg);
  static const ::TW::Cosmos::Proto::Message_THORChainSend& thorchain_send_message(const Message* msg);
  static const ::TW::Cosmos::Proto::Message_ExecuteContract& execute_contract_message(const Message* msg);
  static const ::TW::Cosmos::Proto::Message_WasmTerraExecuteContractGeneric& wasm_terra_execute_contract_generic(const Message* msg);
  static const ::TW::Cosmos::Proto::Message_WasmExecuteContractTransfer& wasm_execute_contract_transfer_message(const Message* msg);
  static const ::TW::Cosmos::Proto::Message_WasmExecuteContractSend& wasm_execute_contract_send_message(const Message* msg);
  static const ::TW::Cosmos::Proto::Message_WasmExecuteContractGeneric& wasm_execute_contract_generic(const Message* msg);
  static const ::TW::Cosmos::Proto::Message_SignDirect& sign_direct_message(const Message* msg);
  static const ::TW::Cosmos::Proto::Message_AuthGrant& auth_grant(const Message* msg);
  static const ::TW::Cosmos::Proto::Message_AuthRevoke& auth_revoke(const Message* msg);
  static const ::TW::Cosmos::Proto::Message_SetWithdrawAddress& set_withdraw_address_message(const Message* msg);
  static const ::TW::Cosmos::Proto::Message_MsgVote& msg_vote(const Message* msg);
  static const ::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingStake& msg_stride_liquid_staking_stake(const Message* msg);
  static const ::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingRedeem& msg_stride_liquid_staking_redeem(const Message* msg);
  static const ::TW::Cosmos::Proto::Message_THORChainDeposit& thorchain_deposit_message(const Message* msg);
};

const ::TW::Cosmos::Proto::Message_Send&
Message::_Internal::send_coins_message(const Message* msg) {
  return *msg->message_oneof_.send_coins_message_;
}
const ::TW::Cosmos::Proto::Message_Transfer&
Message::_Internal::transfer_tokens_message(const Message* msg) {
  return *msg->message_oneof_.transfer_tokens_message_;
}
const ::TW::Cosmos::Proto::Message_Delegate&
Message::_Internal::stake_message(const Message* msg) {
  return *msg->message_oneof_.stake_message_;
}
const ::TW::Cosmos::Proto::Message_Undelegate&
Message::_Internal::unstake_message(const Message* msg) {
  return *msg->message_oneof_.unstake_message_;
}
const ::TW::Cosmos::Proto::Message_BeginRedelegate&
Message::_Internal::restake_message(const Message* msg) {
  return *msg->message_oneof_.restake_message_;
}
const ::TW::Cosmos::Proto::Message_WithdrawDelegationReward&
Message::_Internal::withdraw_stake_reward_message(const Message* msg) {
  return *msg->message_oneof_.withdraw_stake_reward_message_;
}
const ::TW::Cosmos::Proto::Message_RawJSON&
Message::_Internal::raw_json_message(const Message* msg) {
  return *msg->message_oneof_.raw_json_message_;
}
const ::TW::Cosmos::Proto::Message_WasmTerraExecuteContractTransfer&
Message::_Internal::wasm_terra_execute_contract_transfer_message(const Message* msg) {
  return *msg->message_oneof_.wasm_terra_execute_contract_transfer_message_;
}
const ::TW::Cosmos::Proto::Message_WasmTerraExecuteContractSend&
Message::_Internal::wasm_terra_execute_contract_send_message(const Message* msg) {
  return *msg->message_oneof_.wasm_terra_execute_contract_send_message_;
}
const ::TW::Cosmos::Proto::Message_THORChainSend&
Message::_Internal::thorchain_send_message(const Message* msg) {
  return *msg->message_oneof_.thorchain_send_message_;
}
const ::TW::Cosmos::Proto::Message_ExecuteContract&
Message::_Internal::execute_contract_message(const Message* msg) {
  return *msg->message_oneof_.execute_contract_message_;
}
const ::TW::Cosmos::Proto::Message_WasmTerraExecuteContractGeneric&
Message::_Internal::wasm_terra_execute_contract_generic(const Message* msg) {
  return *msg->message_oneof_.wasm_terra_execute_contract_generic_;
}
const ::TW::Cosmos::Proto::Message_WasmExecuteContractTransfer&
Message::_Internal::wasm_execute_contract_transfer_message(const Message* msg) {
  return *msg->message_oneof_.wasm_execute_contract_transfer_message_;
}
const ::TW::Cosmos::Proto::Message_WasmExecuteContractSend&
Message::_Internal::wasm_execute_contract_send_message(const Message* msg) {
  return *msg->message_oneof_.wasm_execute_contract_send_message_;
}
const ::TW::Cosmos::Proto::Message_WasmExecuteContractGeneric&
Message::_Internal::wasm_execute_contract_generic(const Message* msg) {
  return *msg->message_oneof_.wasm_execute_contract_generic_;
}
const ::TW::Cosmos::Proto::Message_SignDirect&
Message::_Internal::sign_direct_message(const Message* msg) {
  return *msg->message_oneof_.sign_direct_message_;
}
const ::TW::Cosmos::Proto::Message_AuthGrant&
Message::_Internal::auth_grant(const Message* msg) {
  return *msg->message_oneof_.auth_grant_;
}
const ::TW::Cosmos::Proto::Message_AuthRevoke&
Message::_Internal::auth_revoke(const Message* msg) {
  return *msg->message_oneof_.auth_revoke_;
}
const ::TW::Cosmos::Proto::Message_SetWithdrawAddress&
Message::_Internal::set_withdraw_address_message(const Message* msg) {
  return *msg->message_oneof_.set_withdraw_address_message_;
}
const ::TW::Cosmos::Proto::Message_MsgVote&
Message::_Internal::msg_vote(const Message* msg) {
  return *msg->message_oneof_.msg_vote_;
}
const ::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingStake&
Message::_Internal::msg_stride_liquid_staking_stake(const Message* msg) {
  return *msg->message_oneof_.msg_stride_liquid_staking_stake_;
}
const ::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingRedeem&
Message::_Internal::msg_stride_liquid_staking_redeem(const Message* msg) {
  return *msg->message_oneof_.msg_stride_liquid_staking_redeem_;
}
const ::TW::Cosmos::Proto::Message_THORChainDeposit&
Message::_Internal::thorchain_deposit_message(const Message* msg) {
  return *msg->message_oneof_.thorchain_deposit_message_;
}
void Message::set_allocated_send_coins_message(::TW::Cosmos::Proto::Message_Send* send_coins_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_oneof();
  if (send_coins_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_Send>::GetOwningArena(send_coins_message);
    if (message_arena != submessage_arena) {
      send_coins_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, send_coins_message, submessage_arena);
    }
    set_has_send_coins_message();
    message_oneof_.send_coins_message_ = send_coins_message;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.send_coins_message)
}
void Message::set_allocated_transfer_tokens_message(::TW::Cosmos::Proto::Message_Transfer* transfer_tokens_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_oneof();
  if (transfer_tokens_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_Transfer>::GetOwningArena(transfer_tokens_message);
    if (message_arena != submessage_arena) {
      transfer_tokens_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transfer_tokens_message, submessage_arena);
    }
    set_has_transfer_tokens_message();
    message_oneof_.transfer_tokens_message_ = transfer_tokens_message;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.transfer_tokens_message)
}
void Message::set_allocated_stake_message(::TW::Cosmos::Proto::Message_Delegate* stake_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_oneof();
  if (stake_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_Delegate>::GetOwningArena(stake_message);
    if (message_arena != submessage_arena) {
      stake_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stake_message, submessage_arena);
    }
    set_has_stake_message();
    message_oneof_.stake_message_ = stake_message;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.stake_message)
}
void Message::set_allocated_unstake_message(::TW::Cosmos::Proto::Message_Undelegate* unstake_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_oneof();
  if (unstake_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_Undelegate>::GetOwningArena(unstake_message);
    if (message_arena != submessage_arena) {
      unstake_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, unstake_message, submessage_arena);
    }
    set_has_unstake_message();
    message_oneof_.unstake_message_ = unstake_message;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.unstake_message)
}
void Message::set_allocated_restake_message(::TW::Cosmos::Proto::Message_BeginRedelegate* restake_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_oneof();
  if (restake_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_BeginRedelegate>::GetOwningArena(restake_message);
    if (message_arena != submessage_arena) {
      restake_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, restake_message, submessage_arena);
    }
    set_has_restake_message();
    message_oneof_.restake_message_ = restake_message;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.restake_message)
}
void Message::set_allocated_withdraw_stake_reward_message(::TW::Cosmos::Proto::Message_WithdrawDelegationReward* withdraw_stake_reward_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_oneof();
  if (withdraw_stake_reward_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_WithdrawDelegationReward>::GetOwningArena(withdraw_stake_reward_message);
    if (message_arena != submessage_arena) {
      withdraw_stake_reward_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, withdraw_stake_reward_message, submessage_arena);
    }
    set_has_withdraw_stake_reward_message();
    message_oneof_.withdraw_stake_reward_message_ = withdraw_stake_reward_message;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.withdraw_stake_reward_message)
}
void Message::set_allocated_raw_json_message(::TW::Cosmos::Proto::Message_RawJSON* raw_json_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_oneof();
  if (raw_json_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_RawJSON>::GetOwningArena(raw_json_message);
    if (message_arena != submessage_arena) {
      raw_json_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, raw_json_message, submessage_arena);
    }
    set_has_raw_json_message();
    message_oneof_.raw_json_message_ = raw_json_message;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.raw_json_message)
}
void Message::set_allocated_wasm_terra_execute_contract_transfer_message(::TW::Cosmos::Proto::Message_WasmTerraExecuteContractTransfer* wasm_terra_execute_contract_transfer_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_oneof();
  if (wasm_terra_execute_contract_transfer_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_WasmTerraExecuteContractTransfer>::GetOwningArena(wasm_terra_execute_contract_transfer_message);
    if (message_arena != submessage_arena) {
      wasm_terra_execute_contract_transfer_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, wasm_terra_execute_contract_transfer_message, submessage_arena);
    }
    set_has_wasm_terra_execute_contract_transfer_message();
    message_oneof_.wasm_terra_execute_contract_transfer_message_ = wasm_terra_execute_contract_transfer_message;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.wasm_terra_execute_contract_transfer_message)
}
void Message::set_allocated_wasm_terra_execute_contract_send_message(::TW::Cosmos::Proto::Message_WasmTerraExecuteContractSend* wasm_terra_execute_contract_send_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_oneof();
  if (wasm_terra_execute_contract_send_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_WasmTerraExecuteContractSend>::GetOwningArena(wasm_terra_execute_contract_send_message);
    if (message_arena != submessage_arena) {
      wasm_terra_execute_contract_send_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, wasm_terra_execute_contract_send_message, submessage_arena);
    }
    set_has_wasm_terra_execute_contract_send_message();
    message_oneof_.wasm_terra_execute_contract_send_message_ = wasm_terra_execute_contract_send_message;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.wasm_terra_execute_contract_send_message)
}
void Message::set_allocated_thorchain_send_message(::TW::Cosmos::Proto::Message_THORChainSend* thorchain_send_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_oneof();
  if (thorchain_send_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_THORChainSend>::GetOwningArena(thorchain_send_message);
    if (message_arena != submessage_arena) {
      thorchain_send_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, thorchain_send_message, submessage_arena);
    }
    set_has_thorchain_send_message();
    message_oneof_.thorchain_send_message_ = thorchain_send_message;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.thorchain_send_message)
}
void Message::set_allocated_execute_contract_message(::TW::Cosmos::Proto::Message_ExecuteContract* execute_contract_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_oneof();
  if (execute_contract_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_ExecuteContract>::GetOwningArena(execute_contract_message);
    if (message_arena != submessage_arena) {
      execute_contract_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, execute_contract_message, submessage_arena);
    }
    set_has_execute_contract_message();
    message_oneof_.execute_contract_message_ = execute_contract_message;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.execute_contract_message)
}
void Message::set_allocated_wasm_terra_execute_contract_generic(::TW::Cosmos::Proto::Message_WasmTerraExecuteContractGeneric* wasm_terra_execute_contract_generic) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_oneof();
  if (wasm_terra_execute_contract_generic) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_WasmTerraExecuteContractGeneric>::GetOwningArena(wasm_terra_execute_contract_generic);
    if (message_arena != submessage_arena) {
      wasm_terra_execute_contract_generic = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, wasm_terra_execute_contract_generic, submessage_arena);
    }
    set_has_wasm_terra_execute_contract_generic();
    message_oneof_.wasm_terra_execute_contract_generic_ = wasm_terra_execute_contract_generic;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.wasm_terra_execute_contract_generic)
}
void Message::set_allocated_wasm_execute_contract_transfer_message(::TW::Cosmos::Proto::Message_WasmExecuteContractTransfer* wasm_execute_contract_transfer_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_oneof();
  if (wasm_execute_contract_transfer_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_WasmExecuteContractTransfer>::GetOwningArena(wasm_execute_contract_transfer_message);
    if (message_arena != submessage_arena) {
      wasm_execute_contract_transfer_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, wasm_execute_contract_transfer_message, submessage_arena);
    }
    set_has_wasm_execute_contract_transfer_message();
    message_oneof_.wasm_execute_contract_transfer_message_ = wasm_execute_contract_transfer_message;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.wasm_execute_contract_transfer_message)
}
void Message::set_allocated_wasm_execute_contract_send_message(::TW::Cosmos::Proto::Message_WasmExecuteContractSend* wasm_execute_contract_send_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_oneof();
  if (wasm_execute_contract_send_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_WasmExecuteContractSend>::GetOwningArena(wasm_execute_contract_send_message);
    if (message_arena != submessage_arena) {
      wasm_execute_contract_send_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, wasm_execute_contract_send_message, submessage_arena);
    }
    set_has_wasm_execute_contract_send_message();
    message_oneof_.wasm_execute_contract_send_message_ = wasm_execute_contract_send_message;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.wasm_execute_contract_send_message)
}
void Message::set_allocated_wasm_execute_contract_generic(::TW::Cosmos::Proto::Message_WasmExecuteContractGeneric* wasm_execute_contract_generic) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_oneof();
  if (wasm_execute_contract_generic) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_WasmExecuteContractGeneric>::GetOwningArena(wasm_execute_contract_generic);
    if (message_arena != submessage_arena) {
      wasm_execute_contract_generic = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, wasm_execute_contract_generic, submessage_arena);
    }
    set_has_wasm_execute_contract_generic();
    message_oneof_.wasm_execute_contract_generic_ = wasm_execute_contract_generic;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.wasm_execute_contract_generic)
}
void Message::set_allocated_sign_direct_message(::TW::Cosmos::Proto::Message_SignDirect* sign_direct_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_oneof();
  if (sign_direct_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_SignDirect>::GetOwningArena(sign_direct_message);
    if (message_arena != submessage_arena) {
      sign_direct_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sign_direct_message, submessage_arena);
    }
    set_has_sign_direct_message();
    message_oneof_.sign_direct_message_ = sign_direct_message;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.sign_direct_message)
}
void Message::set_allocated_auth_grant(::TW::Cosmos::Proto::Message_AuthGrant* auth_grant) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_oneof();
  if (auth_grant) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_AuthGrant>::GetOwningArena(auth_grant);
    if (message_arena != submessage_arena) {
      auth_grant = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, auth_grant, submessage_arena);
    }
    set_has_auth_grant();
    message_oneof_.auth_grant_ = auth_grant;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.auth_grant)
}
void Message::set_allocated_auth_revoke(::TW::Cosmos::Proto::Message_AuthRevoke* auth_revoke) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_oneof();
  if (auth_revoke) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_AuthRevoke>::GetOwningArena(auth_revoke);
    if (message_arena != submessage_arena) {
      auth_revoke = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, auth_revoke, submessage_arena);
    }
    set_has_auth_revoke();
    message_oneof_.auth_revoke_ = auth_revoke;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.auth_revoke)
}
void Message::set_allocated_set_withdraw_address_message(::TW::Cosmos::Proto::Message_SetWithdrawAddress* set_withdraw_address_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_oneof();
  if (set_withdraw_address_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_SetWithdrawAddress>::GetOwningArena(set_withdraw_address_message);
    if (message_arena != submessage_arena) {
      set_withdraw_address_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, set_withdraw_address_message, submessage_arena);
    }
    set_has_set_withdraw_address_message();
    message_oneof_.set_withdraw_address_message_ = set_withdraw_address_message;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.set_withdraw_address_message)
}
void Message::set_allocated_msg_vote(::TW::Cosmos::Proto::Message_MsgVote* msg_vote) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_oneof();
  if (msg_vote) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_MsgVote>::GetOwningArena(msg_vote);
    if (message_arena != submessage_arena) {
      msg_vote = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, msg_vote, submessage_arena);
    }
    set_has_msg_vote();
    message_oneof_.msg_vote_ = msg_vote;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.msg_vote)
}
void Message::set_allocated_msg_stride_liquid_staking_stake(::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingStake* msg_stride_liquid_staking_stake) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_oneof();
  if (msg_stride_liquid_staking_stake) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingStake>::GetOwningArena(msg_stride_liquid_staking_stake);
    if (message_arena != submessage_arena) {
      msg_stride_liquid_staking_stake = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, msg_stride_liquid_staking_stake, submessage_arena);
    }
    set_has_msg_stride_liquid_staking_stake();
    message_oneof_.msg_stride_liquid_staking_stake_ = msg_stride_liquid_staking_stake;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.msg_stride_liquid_staking_stake)
}
void Message::set_allocated_msg_stride_liquid_staking_redeem(::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingRedeem* msg_stride_liquid_staking_redeem) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_oneof();
  if (msg_stride_liquid_staking_redeem) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingRedeem>::GetOwningArena(msg_stride_liquid_staking_redeem);
    if (message_arena != submessage_arena) {
      msg_stride_liquid_staking_redeem = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, msg_stride_liquid_staking_redeem, submessage_arena);
    }
    set_has_msg_stride_liquid_staking_redeem();
    message_oneof_.msg_stride_liquid_staking_redeem_ = msg_stride_liquid_staking_redeem;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.msg_stride_liquid_staking_redeem)
}
void Message::set_allocated_thorchain_deposit_message(::TW::Cosmos::Proto::Message_THORChainDeposit* thorchain_deposit_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_oneof();
  if (thorchain_deposit_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TW::Cosmos::Proto::Message_THORChainDeposit>::GetOwningArena(thorchain_deposit_message);
    if (message_arena != submessage_arena) {
      thorchain_deposit_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, thorchain_deposit_message, submessage_arena);
    }
    set_has_thorchain_deposit_message();
    message_oneof_.thorchain_deposit_message_ = thorchain_deposit_message;
  }
  // @@protoc_insertion_point(field_set_allocated:TW.Cosmos.Proto.Message.thorchain_deposit_message)
}
Message::Message(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.Message)
}
Message::Message(const Message& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_message_oneof();
  switch (from.message_oneof_case()) {
    case kSendCoinsMessage: {
      _internal_mutable_send_coins_message()->::TW::Cosmos::Proto::Message_Send::MergeFrom(from._internal_send_coins_message());
      break;
    }
    case kTransferTokensMessage: {
      _internal_mutable_transfer_tokens_message()->::TW::Cosmos::Proto::Message_Transfer::MergeFrom(from._internal_transfer_tokens_message());
      break;
    }
    case kStakeMessage: {
      _internal_mutable_stake_message()->::TW::Cosmos::Proto::Message_Delegate::MergeFrom(from._internal_stake_message());
      break;
    }
    case kUnstakeMessage: {
      _internal_mutable_unstake_message()->::TW::Cosmos::Proto::Message_Undelegate::MergeFrom(from._internal_unstake_message());
      break;
    }
    case kRestakeMessage: {
      _internal_mutable_restake_message()->::TW::Cosmos::Proto::Message_BeginRedelegate::MergeFrom(from._internal_restake_message());
      break;
    }
    case kWithdrawStakeRewardMessage: {
      _internal_mutable_withdraw_stake_reward_message()->::TW::Cosmos::Proto::Message_WithdrawDelegationReward::MergeFrom(from._internal_withdraw_stake_reward_message());
      break;
    }
    case kRawJsonMessage: {
      _internal_mutable_raw_json_message()->::TW::Cosmos::Proto::Message_RawJSON::MergeFrom(from._internal_raw_json_message());
      break;
    }
    case kWasmTerraExecuteContractTransferMessage: {
      _internal_mutable_wasm_terra_execute_contract_transfer_message()->::TW::Cosmos::Proto::Message_WasmTerraExecuteContractTransfer::MergeFrom(from._internal_wasm_terra_execute_contract_transfer_message());
      break;
    }
    case kWasmTerraExecuteContractSendMessage: {
      _internal_mutable_wasm_terra_execute_contract_send_message()->::TW::Cosmos::Proto::Message_WasmTerraExecuteContractSend::MergeFrom(from._internal_wasm_terra_execute_contract_send_message());
      break;
    }
    case kThorchainSendMessage: {
      _internal_mutable_thorchain_send_message()->::TW::Cosmos::Proto::Message_THORChainSend::MergeFrom(from._internal_thorchain_send_message());
      break;
    }
    case kExecuteContractMessage: {
      _internal_mutable_execute_contract_message()->::TW::Cosmos::Proto::Message_ExecuteContract::MergeFrom(from._internal_execute_contract_message());
      break;
    }
    case kWasmTerraExecuteContractGeneric: {
      _internal_mutable_wasm_terra_execute_contract_generic()->::TW::Cosmos::Proto::Message_WasmTerraExecuteContractGeneric::MergeFrom(from._internal_wasm_terra_execute_contract_generic());
      break;
    }
    case kWasmExecuteContractTransferMessage: {
      _internal_mutable_wasm_execute_contract_transfer_message()->::TW::Cosmos::Proto::Message_WasmExecuteContractTransfer::MergeFrom(from._internal_wasm_execute_contract_transfer_message());
      break;
    }
    case kWasmExecuteContractSendMessage: {
      _internal_mutable_wasm_execute_contract_send_message()->::TW::Cosmos::Proto::Message_WasmExecuteContractSend::MergeFrom(from._internal_wasm_execute_contract_send_message());
      break;
    }
    case kWasmExecuteContractGeneric: {
      _internal_mutable_wasm_execute_contract_generic()->::TW::Cosmos::Proto::Message_WasmExecuteContractGeneric::MergeFrom(from._internal_wasm_execute_contract_generic());
      break;
    }
    case kSignDirectMessage: {
      _internal_mutable_sign_direct_message()->::TW::Cosmos::Proto::Message_SignDirect::MergeFrom(from._internal_sign_direct_message());
      break;
    }
    case kAuthGrant: {
      _internal_mutable_auth_grant()->::TW::Cosmos::Proto::Message_AuthGrant::MergeFrom(from._internal_auth_grant());
      break;
    }
    case kAuthRevoke: {
      _internal_mutable_auth_revoke()->::TW::Cosmos::Proto::Message_AuthRevoke::MergeFrom(from._internal_auth_revoke());
      break;
    }
    case kSetWithdrawAddressMessage: {
      _internal_mutable_set_withdraw_address_message()->::TW::Cosmos::Proto::Message_SetWithdrawAddress::MergeFrom(from._internal_set_withdraw_address_message());
      break;
    }
    case kMsgVote: {
      _internal_mutable_msg_vote()->::TW::Cosmos::Proto::Message_MsgVote::MergeFrom(from._internal_msg_vote());
      break;
    }
    case kMsgStrideLiquidStakingStake: {
      _internal_mutable_msg_stride_liquid_staking_stake()->::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingStake::MergeFrom(from._internal_msg_stride_liquid_staking_stake());
      break;
    }
    case kMsgStrideLiquidStakingRedeem: {
      _internal_mutable_msg_stride_liquid_staking_redeem()->::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingRedeem::MergeFrom(from._internal_msg_stride_liquid_staking_redeem());
      break;
    }
    case kThorchainDepositMessage: {
      _internal_mutable_thorchain_deposit_message()->::TW::Cosmos::Proto::Message_THORChainDeposit::MergeFrom(from._internal_thorchain_deposit_message());
      break;
    }
    case MESSAGE_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.Message)
}

inline void Message::SharedCtor() {
clear_has_message_oneof();
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.Message)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Message::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_message_oneof()) {
    clear_message_oneof();
  }
}

void Message::ArenaDtor(void* object) {
  Message* _this = reinterpret_cast< Message* >(object);
  (void)_this;
}
void Message::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message::clear_message_oneof() {
// @@protoc_insertion_point(one_of_clear_start:TW.Cosmos.Proto.Message)
  switch (message_oneof_case()) {
    case kSendCoinsMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_oneof_.send_coins_message_;
      }
      break;
    }
    case kTransferTokensMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_oneof_.transfer_tokens_message_;
      }
      break;
    }
    case kStakeMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_oneof_.stake_message_;
      }
      break;
    }
    case kUnstakeMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_oneof_.unstake_message_;
      }
      break;
    }
    case kRestakeMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_oneof_.restake_message_;
      }
      break;
    }
    case kWithdrawStakeRewardMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_oneof_.withdraw_stake_reward_message_;
      }
      break;
    }
    case kRawJsonMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_oneof_.raw_json_message_;
      }
      break;
    }
    case kWasmTerraExecuteContractTransferMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_oneof_.wasm_terra_execute_contract_transfer_message_;
      }
      break;
    }
    case kWasmTerraExecuteContractSendMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_oneof_.wasm_terra_execute_contract_send_message_;
      }
      break;
    }
    case kThorchainSendMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_oneof_.thorchain_send_message_;
      }
      break;
    }
    case kExecuteContractMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_oneof_.execute_contract_message_;
      }
      break;
    }
    case kWasmTerraExecuteContractGeneric: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_oneof_.wasm_terra_execute_contract_generic_;
      }
      break;
    }
    case kWasmExecuteContractTransferMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_oneof_.wasm_execute_contract_transfer_message_;
      }
      break;
    }
    case kWasmExecuteContractSendMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_oneof_.wasm_execute_contract_send_message_;
      }
      break;
    }
    case kWasmExecuteContractGeneric: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_oneof_.wasm_execute_contract_generic_;
      }
      break;
    }
    case kSignDirectMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_oneof_.sign_direct_message_;
      }
      break;
    }
    case kAuthGrant: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_oneof_.auth_grant_;
      }
      break;
    }
    case kAuthRevoke: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_oneof_.auth_revoke_;
      }
      break;
    }
    case kSetWithdrawAddressMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_oneof_.set_withdraw_address_message_;
      }
      break;
    }
    case kMsgVote: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_oneof_.msg_vote_;
      }
      break;
    }
    case kMsgStrideLiquidStakingStake: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_oneof_.msg_stride_liquid_staking_stake_;
      }
      break;
    }
    case kMsgStrideLiquidStakingRedeem: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_oneof_.msg_stride_liquid_staking_redeem_;
      }
      break;
    }
    case kThorchainDepositMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_oneof_.thorchain_deposit_message_;
      }
      break;
    }
    case MESSAGE_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_ONEOF_NOT_SET;
}


void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.Message)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message_oneof();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .TW.Cosmos.Proto.Message.Send send_coins_message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_send_coins_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.Transfer transfer_tokens_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transfer_tokens_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.Delegate stake_message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_stake_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.Undelegate unstake_message = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_unstake_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.BeginRedelegate restake_message = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_restake_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.WithdrawDelegationReward withdraw_stake_reward_message = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_withdraw_stake_reward_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.RawJSON raw_json_message = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_raw_json_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.WasmTerraExecuteContractTransfer wasm_terra_execute_contract_transfer_message = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_wasm_terra_execute_contract_transfer_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend wasm_terra_execute_contract_send_message = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_wasm_terra_execute_contract_send_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.THORChainSend thorchain_send_message = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_thorchain_send_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.ExecuteContract execute_contract_message = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_execute_contract_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.WasmTerraExecuteContractGeneric wasm_terra_execute_contract_generic = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_wasm_terra_execute_contract_generic(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.WasmExecuteContractTransfer wasm_execute_contract_transfer_message = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_wasm_execute_contract_transfer_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.WasmExecuteContractSend wasm_execute_contract_send_message = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_wasm_execute_contract_send_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.WasmExecuteContractGeneric wasm_execute_contract_generic = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_wasm_execute_contract_generic(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.SignDirect sign_direct_message = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_sign_direct_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.AuthGrant auth_grant = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth_grant(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.AuthRevoke auth_revoke = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth_revoke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.SetWithdrawAddress set_withdraw_address_message = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_set_withdraw_address_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.MsgVote msg_vote = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_msg_vote(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.MsgStrideLiquidStakingStake msg_stride_liquid_staking_stake = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_msg_stride_liquid_staking_stake(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.MsgStrideLiquidStakingRedeem msg_stride_liquid_staking_redeem = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_msg_stride_liquid_staking_redeem(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Message.THORChainDeposit thorchain_deposit_message = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_thorchain_deposit_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.Message)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .TW.Cosmos.Proto.Message.Send send_coins_message = 1;
  if (_internal_has_send_coins_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::send_coins_message(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.Transfer transfer_tokens_message = 2;
  if (_internal_has_transfer_tokens_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::transfer_tokens_message(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.Delegate stake_message = 3;
  if (_internal_has_stake_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::stake_message(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.Undelegate unstake_message = 4;
  if (_internal_has_unstake_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::unstake_message(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.BeginRedelegate restake_message = 5;
  if (_internal_has_restake_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::restake_message(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.WithdrawDelegationReward withdraw_stake_reward_message = 6;
  if (_internal_has_withdraw_stake_reward_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::withdraw_stake_reward_message(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.RawJSON raw_json_message = 7;
  if (_internal_has_raw_json_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::raw_json_message(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.WasmTerraExecuteContractTransfer wasm_terra_execute_contract_transfer_message = 8;
  if (_internal_has_wasm_terra_execute_contract_transfer_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::wasm_terra_execute_contract_transfer_message(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend wasm_terra_execute_contract_send_message = 9;
  if (_internal_has_wasm_terra_execute_contract_send_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::wasm_terra_execute_contract_send_message(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.THORChainSend thorchain_send_message = 10;
  if (_internal_has_thorchain_send_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::thorchain_send_message(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.ExecuteContract execute_contract_message = 11;
  if (_internal_has_execute_contract_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::execute_contract_message(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.WasmTerraExecuteContractGeneric wasm_terra_execute_contract_generic = 12;
  if (_internal_has_wasm_terra_execute_contract_generic()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::wasm_terra_execute_contract_generic(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.WasmExecuteContractTransfer wasm_execute_contract_transfer_message = 13;
  if (_internal_has_wasm_execute_contract_transfer_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::wasm_execute_contract_transfer_message(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.WasmExecuteContractSend wasm_execute_contract_send_message = 14;
  if (_internal_has_wasm_execute_contract_send_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::wasm_execute_contract_send_message(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.WasmExecuteContractGeneric wasm_execute_contract_generic = 15;
  if (_internal_has_wasm_execute_contract_generic()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        15, _Internal::wasm_execute_contract_generic(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.SignDirect sign_direct_message = 16;
  if (_internal_has_sign_direct_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        16, _Internal::sign_direct_message(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.AuthGrant auth_grant = 17;
  if (_internal_has_auth_grant()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        17, _Internal::auth_grant(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.AuthRevoke auth_revoke = 18;
  if (_internal_has_auth_revoke()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        18, _Internal::auth_revoke(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.SetWithdrawAddress set_withdraw_address_message = 19;
  if (_internal_has_set_withdraw_address_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        19, _Internal::set_withdraw_address_message(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.MsgVote msg_vote = 20;
  if (_internal_has_msg_vote()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        20, _Internal::msg_vote(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.MsgStrideLiquidStakingStake msg_stride_liquid_staking_stake = 21;
  if (_internal_has_msg_stride_liquid_staking_stake()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        21, _Internal::msg_stride_liquid_staking_stake(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.MsgStrideLiquidStakingRedeem msg_stride_liquid_staking_redeem = 22;
  if (_internal_has_msg_stride_liquid_staking_redeem()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        22, _Internal::msg_stride_liquid_staking_redeem(this), target, stream);
  }

  // .TW.Cosmos.Proto.Message.THORChainDeposit thorchain_deposit_message = 23;
  if (_internal_has_thorchain_deposit_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        23, _Internal::thorchain_deposit_message(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.Message)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (message_oneof_case()) {
    // .TW.Cosmos.Proto.Message.Send send_coins_message = 1;
    case kSendCoinsMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_oneof_.send_coins_message_);
      break;
    }
    // .TW.Cosmos.Proto.Message.Transfer transfer_tokens_message = 2;
    case kTransferTokensMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_oneof_.transfer_tokens_message_);
      break;
    }
    // .TW.Cosmos.Proto.Message.Delegate stake_message = 3;
    case kStakeMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_oneof_.stake_message_);
      break;
    }
    // .TW.Cosmos.Proto.Message.Undelegate unstake_message = 4;
    case kUnstakeMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_oneof_.unstake_message_);
      break;
    }
    // .TW.Cosmos.Proto.Message.BeginRedelegate restake_message = 5;
    case kRestakeMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_oneof_.restake_message_);
      break;
    }
    // .TW.Cosmos.Proto.Message.WithdrawDelegationReward withdraw_stake_reward_message = 6;
    case kWithdrawStakeRewardMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_oneof_.withdraw_stake_reward_message_);
      break;
    }
    // .TW.Cosmos.Proto.Message.RawJSON raw_json_message = 7;
    case kRawJsonMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_oneof_.raw_json_message_);
      break;
    }
    // .TW.Cosmos.Proto.Message.WasmTerraExecuteContractTransfer wasm_terra_execute_contract_transfer_message = 8;
    case kWasmTerraExecuteContractTransferMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_oneof_.wasm_terra_execute_contract_transfer_message_);
      break;
    }
    // .TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend wasm_terra_execute_contract_send_message = 9;
    case kWasmTerraExecuteContractSendMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_oneof_.wasm_terra_execute_contract_send_message_);
      break;
    }
    // .TW.Cosmos.Proto.Message.THORChainSend thorchain_send_message = 10;
    case kThorchainSendMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_oneof_.thorchain_send_message_);
      break;
    }
    // .TW.Cosmos.Proto.Message.ExecuteContract execute_contract_message = 11;
    case kExecuteContractMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_oneof_.execute_contract_message_);
      break;
    }
    // .TW.Cosmos.Proto.Message.WasmTerraExecuteContractGeneric wasm_terra_execute_contract_generic = 12;
    case kWasmTerraExecuteContractGeneric: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_oneof_.wasm_terra_execute_contract_generic_);
      break;
    }
    // .TW.Cosmos.Proto.Message.WasmExecuteContractTransfer wasm_execute_contract_transfer_message = 13;
    case kWasmExecuteContractTransferMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_oneof_.wasm_execute_contract_transfer_message_);
      break;
    }
    // .TW.Cosmos.Proto.Message.WasmExecuteContractSend wasm_execute_contract_send_message = 14;
    case kWasmExecuteContractSendMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_oneof_.wasm_execute_contract_send_message_);
      break;
    }
    // .TW.Cosmos.Proto.Message.WasmExecuteContractGeneric wasm_execute_contract_generic = 15;
    case kWasmExecuteContractGeneric: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_oneof_.wasm_execute_contract_generic_);
      break;
    }
    // .TW.Cosmos.Proto.Message.SignDirect sign_direct_message = 16;
    case kSignDirectMessage: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_oneof_.sign_direct_message_);
      break;
    }
    // .TW.Cosmos.Proto.Message.AuthGrant auth_grant = 17;
    case kAuthGrant: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_oneof_.auth_grant_);
      break;
    }
    // .TW.Cosmos.Proto.Message.AuthRevoke auth_revoke = 18;
    case kAuthRevoke: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_oneof_.auth_revoke_);
      break;
    }
    // .TW.Cosmos.Proto.Message.SetWithdrawAddress set_withdraw_address_message = 19;
    case kSetWithdrawAddressMessage: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_oneof_.set_withdraw_address_message_);
      break;
    }
    // .TW.Cosmos.Proto.Message.MsgVote msg_vote = 20;
    case kMsgVote: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_oneof_.msg_vote_);
      break;
    }
    // .TW.Cosmos.Proto.Message.MsgStrideLiquidStakingStake msg_stride_liquid_staking_stake = 21;
    case kMsgStrideLiquidStakingStake: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_oneof_.msg_stride_liquid_staking_stake_);
      break;
    }
    // .TW.Cosmos.Proto.Message.MsgStrideLiquidStakingRedeem msg_stride_liquid_staking_redeem = 22;
    case kMsgStrideLiquidStakingRedeem: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_oneof_.msg_stride_liquid_staking_redeem_);
      break;
    }
    // .TW.Cosmos.Proto.Message.THORChainDeposit thorchain_deposit_message = 23;
    case kThorchainDepositMessage: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_oneof_.thorchain_deposit_message_);
      break;
    }
    case MESSAGE_ONEOF_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Message::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message::GetClassData() const { return &_class_data_; }

void Message::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Message *>(to)->MergeFrom(
      static_cast<const Message &>(from));
}


void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.Message)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.message_oneof_case()) {
    case kSendCoinsMessage: {
      _internal_mutable_send_coins_message()->::TW::Cosmos::Proto::Message_Send::MergeFrom(from._internal_send_coins_message());
      break;
    }
    case kTransferTokensMessage: {
      _internal_mutable_transfer_tokens_message()->::TW::Cosmos::Proto::Message_Transfer::MergeFrom(from._internal_transfer_tokens_message());
      break;
    }
    case kStakeMessage: {
      _internal_mutable_stake_message()->::TW::Cosmos::Proto::Message_Delegate::MergeFrom(from._internal_stake_message());
      break;
    }
    case kUnstakeMessage: {
      _internal_mutable_unstake_message()->::TW::Cosmos::Proto::Message_Undelegate::MergeFrom(from._internal_unstake_message());
      break;
    }
    case kRestakeMessage: {
      _internal_mutable_restake_message()->::TW::Cosmos::Proto::Message_BeginRedelegate::MergeFrom(from._internal_restake_message());
      break;
    }
    case kWithdrawStakeRewardMessage: {
      _internal_mutable_withdraw_stake_reward_message()->::TW::Cosmos::Proto::Message_WithdrawDelegationReward::MergeFrom(from._internal_withdraw_stake_reward_message());
      break;
    }
    case kRawJsonMessage: {
      _internal_mutable_raw_json_message()->::TW::Cosmos::Proto::Message_RawJSON::MergeFrom(from._internal_raw_json_message());
      break;
    }
    case kWasmTerraExecuteContractTransferMessage: {
      _internal_mutable_wasm_terra_execute_contract_transfer_message()->::TW::Cosmos::Proto::Message_WasmTerraExecuteContractTransfer::MergeFrom(from._internal_wasm_terra_execute_contract_transfer_message());
      break;
    }
    case kWasmTerraExecuteContractSendMessage: {
      _internal_mutable_wasm_terra_execute_contract_send_message()->::TW::Cosmos::Proto::Message_WasmTerraExecuteContractSend::MergeFrom(from._internal_wasm_terra_execute_contract_send_message());
      break;
    }
    case kThorchainSendMessage: {
      _internal_mutable_thorchain_send_message()->::TW::Cosmos::Proto::Message_THORChainSend::MergeFrom(from._internal_thorchain_send_message());
      break;
    }
    case kExecuteContractMessage: {
      _internal_mutable_execute_contract_message()->::TW::Cosmos::Proto::Message_ExecuteContract::MergeFrom(from._internal_execute_contract_message());
      break;
    }
    case kWasmTerraExecuteContractGeneric: {
      _internal_mutable_wasm_terra_execute_contract_generic()->::TW::Cosmos::Proto::Message_WasmTerraExecuteContractGeneric::MergeFrom(from._internal_wasm_terra_execute_contract_generic());
      break;
    }
    case kWasmExecuteContractTransferMessage: {
      _internal_mutable_wasm_execute_contract_transfer_message()->::TW::Cosmos::Proto::Message_WasmExecuteContractTransfer::MergeFrom(from._internal_wasm_execute_contract_transfer_message());
      break;
    }
    case kWasmExecuteContractSendMessage: {
      _internal_mutable_wasm_execute_contract_send_message()->::TW::Cosmos::Proto::Message_WasmExecuteContractSend::MergeFrom(from._internal_wasm_execute_contract_send_message());
      break;
    }
    case kWasmExecuteContractGeneric: {
      _internal_mutable_wasm_execute_contract_generic()->::TW::Cosmos::Proto::Message_WasmExecuteContractGeneric::MergeFrom(from._internal_wasm_execute_contract_generic());
      break;
    }
    case kSignDirectMessage: {
      _internal_mutable_sign_direct_message()->::TW::Cosmos::Proto::Message_SignDirect::MergeFrom(from._internal_sign_direct_message());
      break;
    }
    case kAuthGrant: {
      _internal_mutable_auth_grant()->::TW::Cosmos::Proto::Message_AuthGrant::MergeFrom(from._internal_auth_grant());
      break;
    }
    case kAuthRevoke: {
      _internal_mutable_auth_revoke()->::TW::Cosmos::Proto::Message_AuthRevoke::MergeFrom(from._internal_auth_revoke());
      break;
    }
    case kSetWithdrawAddressMessage: {
      _internal_mutable_set_withdraw_address_message()->::TW::Cosmos::Proto::Message_SetWithdrawAddress::MergeFrom(from._internal_set_withdraw_address_message());
      break;
    }
    case kMsgVote: {
      _internal_mutable_msg_vote()->::TW::Cosmos::Proto::Message_MsgVote::MergeFrom(from._internal_msg_vote());
      break;
    }
    case kMsgStrideLiquidStakingStake: {
      _internal_mutable_msg_stride_liquid_staking_stake()->::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingStake::MergeFrom(from._internal_msg_stride_liquid_staking_stake());
      break;
    }
    case kMsgStrideLiquidStakingRedeem: {
      _internal_mutable_msg_stride_liquid_staking_redeem()->::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingRedeem::MergeFrom(from._internal_msg_stride_liquid_staking_redeem());
      break;
    }
    case kThorchainDepositMessage: {
      _internal_mutable_thorchain_deposit_message()->::TW::Cosmos::Proto::Message_THORChainDeposit::MergeFrom(from._internal_thorchain_deposit_message());
      break;
    }
    case MESSAGE_ONEOF_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  return true;
}

void Message::InternalSwap(Message* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(message_oneof_, other->message_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[30]);
}

// ===================================================================

class SigningInput::_Internal {
 public:
  static const ::TW::Cosmos::Proto::Fee& fee(const SigningInput* msg);
};

const ::TW::Cosmos::Proto::Fee&
SigningInput::_Internal::fee(const SigningInput* msg) {
  return *msg->fee_;
}
SigningInput::SigningInput(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  messages_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.SigningInput)
}
SigningInput::SigningInput(const SigningInput& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  chain_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    chain_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_chain_id().empty()) {
    chain_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_chain_id(), 
      GetArenaForAllocation());
  }
  memo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    memo_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_memo().empty()) {
    memo_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_memo(), 
      GetArenaForAllocation());
  }
  private_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    private_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_private_key().empty()) {
    private_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_private_key(), 
      GetArenaForAllocation());
  }
  public_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    public_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_public_key().empty()) {
    public_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_public_key(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_fee()) {
    fee_ = new ::TW::Cosmos::Proto::Fee(*from.fee_);
  } else {
    fee_ = nullptr;
  }
  ::memcpy(&account_number_, &from.account_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&sequence_) -
    reinterpret_cast<char*>(&account_number_)) + sizeof(sequence_));
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.SigningInput)
}

inline void SigningInput::SharedCtor() {
chain_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  chain_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
memo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  memo_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
private_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  private_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
public_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  public_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&fee_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&sequence_) -
    reinterpret_cast<char*>(&fee_)) + sizeof(sequence_));
}

SigningInput::~SigningInput() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.SigningInput)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SigningInput::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  chain_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  memo_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  private_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  public_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete fee_;
}

void SigningInput::ArenaDtor(void* object) {
  SigningInput* _this = reinterpret_cast< SigningInput* >(object);
  (void)_this;
}
void SigningInput::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SigningInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SigningInput::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.SigningInput)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  chain_id_.ClearToEmpty();
  memo_.ClearToEmpty();
  private_key_.ClearToEmpty();
  public_key_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && fee_ != nullptr) {
    delete fee_;
  }
  fee_ = nullptr;
  ::memset(&account_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequence_) -
      reinterpret_cast<char*>(&account_number_)) + sizeof(sequence_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SigningInput::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .TW.Cosmos.Proto.SigningMode signing_mode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_signing_mode(static_cast<::TW::Cosmos::Proto::SigningMode>(val));
        } else
          goto handle_unusual;
        continue;
      // uint64 account_number = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          account_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string chain_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_chain_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.SigningInput.chain_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.Fee fee = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_fee(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string memo = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_memo();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.SigningInput.memo"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 sequence = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          sequence_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes private_key = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_private_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .TW.Cosmos.Proto.Message messages = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .TW.Cosmos.Proto.BroadcastMode mode = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_mode(static_cast<::TW::Cosmos::Proto::BroadcastMode>(val));
        } else
          goto handle_unusual;
        continue;
      // bytes public_key = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_public_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SigningInput::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.SigningInput)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .TW.Cosmos.Proto.SigningMode signing_mode = 1;
  if (this->_internal_signing_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_signing_mode(), target);
  }

  // uint64 account_number = 2;
  if (this->_internal_account_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_account_number(), target);
  }

  // string chain_id = 3;
  if (!this->_internal_chain_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_chain_id().data(), static_cast<int>(this->_internal_chain_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.SigningInput.chain_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_chain_id(), target);
  }

  // .TW.Cosmos.Proto.Fee fee = 4;
  if (this->_internal_has_fee()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::fee(this), target, stream);
  }

  // string memo = 5;
  if (!this->_internal_memo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_memo().data(), static_cast<int>(this->_internal_memo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.SigningInput.memo");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_memo(), target);
  }

  // uint64 sequence = 6;
  if (this->_internal_sequence() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_sequence(), target);
  }

  // bytes private_key = 7;
  if (!this->_internal_private_key().empty()) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_private_key(), target);
  }

  // repeated .TW.Cosmos.Proto.Message messages = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_messages_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, this->_internal_messages(i), target, stream);
  }

  // .TW.Cosmos.Proto.BroadcastMode mode = 9;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_mode(), target);
  }

  // bytes public_key = 10;
  if (!this->_internal_public_key().empty()) {
    target = stream->WriteBytesMaybeAliased(
        10, this->_internal_public_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.SigningInput)
  return target;
}

size_t SigningInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.SigningInput)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TW.Cosmos.Proto.Message messages = 8;
  total_size += 1UL * this->_internal_messages_size();
  for (const auto& msg : this->messages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string chain_id = 3;
  if (!this->_internal_chain_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_chain_id());
  }

  // string memo = 5;
  if (!this->_internal_memo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_memo());
  }

  // bytes private_key = 7;
  if (!this->_internal_private_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_private_key());
  }

  // bytes public_key = 10;
  if (!this->_internal_public_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_public_key());
  }

  // .TW.Cosmos.Proto.Fee fee = 4;
  if (this->_internal_has_fee()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fee_);
  }

  // uint64 account_number = 2;
  if (this->_internal_account_number() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_account_number());
  }

  // .TW.Cosmos.Proto.SigningMode signing_mode = 1;
  if (this->_internal_signing_mode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_signing_mode());
  }

  // .TW.Cosmos.Proto.BroadcastMode mode = 9;
  if (this->_internal_mode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_mode());
  }

  // uint64 sequence = 6;
  if (this->_internal_sequence() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_sequence());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SigningInput::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SigningInput::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SigningInput::GetClassData() const { return &_class_data_; }

void SigningInput::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SigningInput *>(to)->MergeFrom(
      static_cast<const SigningInput &>(from));
}


void SigningInput::MergeFrom(const SigningInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.SigningInput)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
  if (!from._internal_chain_id().empty()) {
    _internal_set_chain_id(from._internal_chain_id());
  }
  if (!from._internal_memo().empty()) {
    _internal_set_memo(from._internal_memo());
  }
  if (!from._internal_private_key().empty()) {
    _internal_set_private_key(from._internal_private_key());
  }
  if (!from._internal_public_key().empty()) {
    _internal_set_public_key(from._internal_public_key());
  }
  if (from._internal_has_fee()) {
    _internal_mutable_fee()->::TW::Cosmos::Proto::Fee::MergeFrom(from._internal_fee());
  }
  if (from._internal_account_number() != 0) {
    _internal_set_account_number(from._internal_account_number());
  }
  if (from._internal_signing_mode() != 0) {
    _internal_set_signing_mode(from._internal_signing_mode());
  }
  if (from._internal_mode() != 0) {
    _internal_set_mode(from._internal_mode());
  }
  if (from._internal_sequence() != 0) {
    _internal_set_sequence(from._internal_sequence());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SigningInput::CopyFrom(const SigningInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.SigningInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SigningInput::IsInitialized() const {
  return true;
}

void SigningInput::InternalSwap(SigningInput* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  messages_.InternalSwap(&other->messages_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &chain_id_, lhs_arena,
      &other->chain_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &memo_, lhs_arena,
      &other->memo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &private_key_, lhs_arena,
      &other->private_key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &public_key_, lhs_arena,
      &other->public_key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SigningInput, sequence_)
      + sizeof(SigningInput::sequence_)
      - PROTOBUF_FIELD_OFFSET(SigningInput, fee_)>(
          reinterpret_cast<char*>(&fee_),
          reinterpret_cast<char*>(&other->fee_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SigningInput::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[31]);
}

// ===================================================================

class SigningOutput::_Internal {
 public:
};

SigningOutput::SigningOutput(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Cosmos.Proto.SigningOutput)
}
SigningOutput::SigningOutput(const SigningOutput& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    signature_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_signature().empty()) {
    signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_signature(), 
      GetArenaForAllocation());
  }
  json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    json_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_json().empty()) {
    json_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_json(), 
      GetArenaForAllocation());
  }
  serialized_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    serialized_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_serialized().empty()) {
    serialized_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_serialized(), 
      GetArenaForAllocation());
  }
  signature_json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    signature_json_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_signature_json().empty()) {
    signature_json_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_signature_json(), 
      GetArenaForAllocation());
  }
  error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    error_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    error_message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_error_message(), 
      GetArenaForAllocation());
  }
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:TW.Cosmos.Proto.SigningOutput)
}

inline void SigningOutput::SharedCtor() {
signature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  signature_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  json_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
serialized_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  serialized_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
signature_json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  signature_json_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  error_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
error_ = 0;
}

SigningOutput::~SigningOutput() {
  // @@protoc_insertion_point(destructor:TW.Cosmos.Proto.SigningOutput)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SigningOutput::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  signature_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  json_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  serialized_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  signature_json_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SigningOutput::ArenaDtor(void* object) {
  SigningOutput* _this = reinterpret_cast< SigningOutput* >(object);
  (void)_this;
}
void SigningOutput::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SigningOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SigningOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Cosmos.Proto.SigningOutput)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signature_.ClearToEmpty();
  json_.ClearToEmpty();
  serialized_.ClearToEmpty();
  signature_json_.ClearToEmpty();
  error_message_.ClearToEmpty();
  error_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SigningOutput::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes signature = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_signature();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string json = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_json();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.SigningOutput.json"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string serialized = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_serialized();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.SigningOutput.serialized"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string signature_json = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_signature_json();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.SigningOutput.signature_json"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error_message = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_error_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Cosmos.Proto.SigningOutput.error_message"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TW.Common.Proto.SigningError error = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_error(static_cast<::TW::Common::Proto::SigningError>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SigningOutput::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Cosmos.Proto.SigningOutput)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes signature = 1;
  if (!this->_internal_signature().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_signature(), target);
  }

  // string json = 2;
  if (!this->_internal_json().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_json().data(), static_cast<int>(this->_internal_json().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.SigningOutput.json");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_json(), target);
  }

  // string serialized = 3;
  if (!this->_internal_serialized().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_serialized().data(), static_cast<int>(this->_internal_serialized().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.SigningOutput.serialized");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_serialized(), target);
  }

  // string signature_json = 4;
  if (!this->_internal_signature_json().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_signature_json().data(), static_cast<int>(this->_internal_signature_json().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.SigningOutput.signature_json");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_signature_json(), target);
  }

  // string error_message = 5;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Cosmos.Proto.SigningOutput.error_message");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_error_message(), target);
  }

  // .TW.Common.Proto.SigningError error = 6;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Cosmos.Proto.SigningOutput)
  return target;
}

size_t SigningOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Cosmos.Proto.SigningOutput)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes signature = 1;
  if (!this->_internal_signature().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_signature());
  }

  // string json = 2;
  if (!this->_internal_json().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_json());
  }

  // string serialized = 3;
  if (!this->_internal_serialized().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_serialized());
  }

  // string signature_json = 4;
  if (!this->_internal_signature_json().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_signature_json());
  }

  // string error_message = 5;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // .TW.Common.Proto.SigningError error = 6;
  if (this->_internal_error() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SigningOutput::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SigningOutput::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SigningOutput::GetClassData() const { return &_class_data_; }

void SigningOutput::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SigningOutput *>(to)->MergeFrom(
      static_cast<const SigningOutput &>(from));
}


void SigningOutput::MergeFrom(const SigningOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Cosmos.Proto.SigningOutput)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_signature().empty()) {
    _internal_set_signature(from._internal_signature());
  }
  if (!from._internal_json().empty()) {
    _internal_set_json(from._internal_json());
  }
  if (!from._internal_serialized().empty()) {
    _internal_set_serialized(from._internal_serialized());
  }
  if (!from._internal_signature_json().empty()) {
    _internal_set_signature_json(from._internal_signature_json());
  }
  if (!from._internal_error_message().empty()) {
    _internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_error() != 0) {
    _internal_set_error(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SigningOutput::CopyFrom(const SigningOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Cosmos.Proto.SigningOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SigningOutput::IsInitialized() const {
  return true;
}

void SigningOutput::InternalSwap(SigningOutput* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &signature_, lhs_arena,
      &other->signature_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &json_, lhs_arena,
      &other->json_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &serialized_, lhs_arena,
      &other->serialized_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &signature_json_, lhs_arena,
      &other->signature_json_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &error_message_, lhs_arena,
      &other->error_message_, rhs_arena
  );
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SigningOutput::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Cosmos_2eproto_getter, &descriptor_table_Cosmos_2eproto_once,
      file_level_metadata_Cosmos_2eproto[32]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Proto
}  // namespace Cosmos
}  // namespace TW
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Amount* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Amount >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Amount >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Fee* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Fee >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Fee >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Height* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Height >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Height >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::THORChainAsset* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::THORChainAsset >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::THORChainAsset >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::THORChainCoin* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::THORChainCoin >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::THORChainCoin >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_Send* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_Send >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_Send >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_Transfer* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_Transfer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_Transfer >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_Delegate* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_Delegate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_Delegate >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_Undelegate* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_Undelegate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_Undelegate >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_BeginRedelegate* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_BeginRedelegate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_BeginRedelegate >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_SetWithdrawAddress* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_SetWithdrawAddress >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_SetWithdrawAddress >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_WithdrawDelegationReward* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_WithdrawDelegationReward >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_WithdrawDelegationReward >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_ExecuteContract* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_ExecuteContract >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_ExecuteContract >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_WasmTerraExecuteContractTransfer* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_WasmTerraExecuteContractTransfer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_WasmTerraExecuteContractTransfer >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_WasmTerraExecuteContractSend* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_WasmTerraExecuteContractSend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_WasmTerraExecuteContractSend >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_THORChainSend* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_THORChainSend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_THORChainSend >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_THORChainDeposit* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_THORChainDeposit >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_THORChainDeposit >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_WasmTerraExecuteContractGeneric* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_WasmTerraExecuteContractGeneric >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_WasmTerraExecuteContractGeneric >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_WasmExecuteContractTransfer* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_WasmExecuteContractTransfer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_WasmExecuteContractTransfer >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_WasmExecuteContractSend* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_WasmExecuteContractSend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_WasmExecuteContractSend >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_WasmExecuteContractGeneric* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_WasmExecuteContractGeneric >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_WasmExecuteContractGeneric >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_RawJSON* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_RawJSON >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_RawJSON >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_SignDirect* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_SignDirect >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_SignDirect >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_StakeAuthorization_Validators* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_StakeAuthorization_Validators >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_StakeAuthorization_Validators >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_StakeAuthorization* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_StakeAuthorization >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_StakeAuthorization >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_AuthGrant* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_AuthGrant >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_AuthGrant >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_AuthRevoke* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_AuthRevoke >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_AuthRevoke >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_MsgVote* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_MsgVote >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_MsgVote >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingStake* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingStake >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingStake >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingRedeem* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingRedeem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message_MsgStrideLiquidStakingRedeem >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::Message* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::Message >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::Message >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::SigningInput* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::SigningInput >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::SigningInput >(arena);
}
template<> PROTOBUF_NOINLINE ::TW::Cosmos::Proto::SigningOutput* Arena::CreateMaybeMessage< ::TW::Cosmos::Proto::SigningOutput >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Cosmos::Proto::SigningOutput >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
