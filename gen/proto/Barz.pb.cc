// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Barz.proto

#include "Barz.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace TW {
namespace Barz {
namespace Proto {
constexpr ContractAddressInput::ContractAddressInput(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : entry_point_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , factory_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , account_facet_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , verification_facet_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , facet_registry_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , default_fallback_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , bytecode_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , public_key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , salt_(0u){}
struct ContractAddressInputDefaultTypeInternal {
  constexpr ContractAddressInputDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ContractAddressInputDefaultTypeInternal() {}
  union {
    ContractAddressInput _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ContractAddressInputDefaultTypeInternal _ContractAddressInput_default_instance_;
}  // namespace Proto
}  // namespace Barz
}  // namespace TW
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Barz_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_Barz_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Barz_2eproto = nullptr;

const uint32_t TableStruct_Barz_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TW::Barz::Proto::ContractAddressInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TW::Barz::Proto::ContractAddressInput, entry_point_),
  PROTOBUF_FIELD_OFFSET(::TW::Barz::Proto::ContractAddressInput, factory_),
  PROTOBUF_FIELD_OFFSET(::TW::Barz::Proto::ContractAddressInput, account_facet_),
  PROTOBUF_FIELD_OFFSET(::TW::Barz::Proto::ContractAddressInput, verification_facet_),
  PROTOBUF_FIELD_OFFSET(::TW::Barz::Proto::ContractAddressInput, facet_registry_),
  PROTOBUF_FIELD_OFFSET(::TW::Barz::Proto::ContractAddressInput, default_fallback_),
  PROTOBUF_FIELD_OFFSET(::TW::Barz::Proto::ContractAddressInput, bytecode_),
  PROTOBUF_FIELD_OFFSET(::TW::Barz::Proto::ContractAddressInput, public_key_),
  PROTOBUF_FIELD_OFFSET(::TW::Barz::Proto::ContractAddressInput, salt_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::TW::Barz::Proto::ContractAddressInput)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TW::Barz::Proto::_ContractAddressInput_default_instance_),
};

const char descriptor_table_protodef_Barz_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nBarz.proto\022\rTW.Barz.Proto\"\325\001\n\024Contract"
  "AddressInput\022\023\n\013entry_point\030\001 \001(\t\022\017\n\007fac"
  "tory\030\002 \001(\t\022\025\n\raccount_facet\030\003 \001(\t\022\032\n\022ver"
  "ification_facet\030\004 \001(\t\022\026\n\016facet_registry\030"
  "\005 \001(\t\022\030\n\020default_fallback\030\006 \001(\t\022\020\n\010bytec"
  "ode\030\007 \001(\t\022\022\n\npublic_key\030\010 \001(\t\022\014\n\004salt\030\t "
  "\001(\rB\027\n\025wallet.core.jni.protob\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Barz_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Barz_2eproto = {
  false, false, 276, descriptor_table_protodef_Barz_2eproto, "Barz.proto", 
  &descriptor_table_Barz_2eproto_once, nullptr, 0, 1,
  schemas, file_default_instances, TableStruct_Barz_2eproto::offsets,
  file_level_metadata_Barz_2eproto, file_level_enum_descriptors_Barz_2eproto, file_level_service_descriptors_Barz_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_Barz_2eproto_getter() {
  return &descriptor_table_Barz_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_Barz_2eproto(&descriptor_table_Barz_2eproto);
namespace TW {
namespace Barz {
namespace Proto {

// ===================================================================

class ContractAddressInput::_Internal {
 public:
};

ContractAddressInput::ContractAddressInput(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TW.Barz.Proto.ContractAddressInput)
}
ContractAddressInput::ContractAddressInput(const ContractAddressInput& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  entry_point_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    entry_point_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_entry_point().empty()) {
    entry_point_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_entry_point(), 
      GetArenaForAllocation());
  }
  factory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    factory_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_factory().empty()) {
    factory_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_factory(), 
      GetArenaForAllocation());
  }
  account_facet_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    account_facet_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_account_facet().empty()) {
    account_facet_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_account_facet(), 
      GetArenaForAllocation());
  }
  verification_facet_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    verification_facet_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_verification_facet().empty()) {
    verification_facet_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_verification_facet(), 
      GetArenaForAllocation());
  }
  facet_registry_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    facet_registry_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_facet_registry().empty()) {
    facet_registry_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_facet_registry(), 
      GetArenaForAllocation());
  }
  default_fallback_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    default_fallback_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_default_fallback().empty()) {
    default_fallback_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_default_fallback(), 
      GetArenaForAllocation());
  }
  bytecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    bytecode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bytecode().empty()) {
    bytecode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_bytecode(), 
      GetArenaForAllocation());
  }
  public_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    public_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_public_key().empty()) {
    public_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_public_key(), 
      GetArenaForAllocation());
  }
  salt_ = from.salt_;
  // @@protoc_insertion_point(copy_constructor:TW.Barz.Proto.ContractAddressInput)
}

inline void ContractAddressInput::SharedCtor() {
entry_point_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  entry_point_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
factory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  factory_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
account_facet_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  account_facet_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
verification_facet_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  verification_facet_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
facet_registry_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  facet_registry_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
default_fallback_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  default_fallback_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
bytecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  bytecode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
public_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  public_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
salt_ = 0u;
}

ContractAddressInput::~ContractAddressInput() {
  // @@protoc_insertion_point(destructor:TW.Barz.Proto.ContractAddressInput)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ContractAddressInput::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  entry_point_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  factory_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  account_facet_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  verification_facet_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  facet_registry_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  default_fallback_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bytecode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  public_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ContractAddressInput::ArenaDtor(void* object) {
  ContractAddressInput* _this = reinterpret_cast< ContractAddressInput* >(object);
  (void)_this;
}
void ContractAddressInput::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ContractAddressInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ContractAddressInput::Clear() {
// @@protoc_insertion_point(message_clear_start:TW.Barz.Proto.ContractAddressInput)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entry_point_.ClearToEmpty();
  factory_.ClearToEmpty();
  account_facet_.ClearToEmpty();
  verification_facet_.ClearToEmpty();
  facet_registry_.ClearToEmpty();
  default_fallback_.ClearToEmpty();
  bytecode_.ClearToEmpty();
  public_key_.ClearToEmpty();
  salt_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ContractAddressInput::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string entry_point = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_entry_point();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Barz.Proto.ContractAddressInput.entry_point"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string factory = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_factory();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Barz.Proto.ContractAddressInput.factory"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string account_facet = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_account_facet();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Barz.Proto.ContractAddressInput.account_facet"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string verification_facet = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_verification_facet();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Barz.Proto.ContractAddressInput.verification_facet"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string facet_registry = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_facet_registry();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Barz.Proto.ContractAddressInput.facet_registry"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string default_fallback = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_default_fallback();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Barz.Proto.ContractAddressInput.default_fallback"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string bytecode = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_bytecode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Barz.Proto.ContractAddressInput.bytecode"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string public_key = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_public_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TW.Barz.Proto.ContractAddressInput.public_key"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 salt = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          salt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ContractAddressInput::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TW.Barz.Proto.ContractAddressInput)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string entry_point = 1;
  if (!this->_internal_entry_point().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_entry_point().data(), static_cast<int>(this->_internal_entry_point().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Barz.Proto.ContractAddressInput.entry_point");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_entry_point(), target);
  }

  // string factory = 2;
  if (!this->_internal_factory().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_factory().data(), static_cast<int>(this->_internal_factory().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Barz.Proto.ContractAddressInput.factory");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_factory(), target);
  }

  // string account_facet = 3;
  if (!this->_internal_account_facet().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_account_facet().data(), static_cast<int>(this->_internal_account_facet().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Barz.Proto.ContractAddressInput.account_facet");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_account_facet(), target);
  }

  // string verification_facet = 4;
  if (!this->_internal_verification_facet().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_verification_facet().data(), static_cast<int>(this->_internal_verification_facet().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Barz.Proto.ContractAddressInput.verification_facet");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_verification_facet(), target);
  }

  // string facet_registry = 5;
  if (!this->_internal_facet_registry().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_facet_registry().data(), static_cast<int>(this->_internal_facet_registry().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Barz.Proto.ContractAddressInput.facet_registry");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_facet_registry(), target);
  }

  // string default_fallback = 6;
  if (!this->_internal_default_fallback().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_default_fallback().data(), static_cast<int>(this->_internal_default_fallback().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Barz.Proto.ContractAddressInput.default_fallback");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_default_fallback(), target);
  }

  // string bytecode = 7;
  if (!this->_internal_bytecode().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bytecode().data(), static_cast<int>(this->_internal_bytecode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Barz.Proto.ContractAddressInput.bytecode");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_bytecode(), target);
  }

  // string public_key = 8;
  if (!this->_internal_public_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_public_key().data(), static_cast<int>(this->_internal_public_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TW.Barz.Proto.ContractAddressInput.public_key");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_public_key(), target);
  }

  // uint32 salt = 9;
  if (this->_internal_salt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_salt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TW.Barz.Proto.ContractAddressInput)
  return target;
}

size_t ContractAddressInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TW.Barz.Proto.ContractAddressInput)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string entry_point = 1;
  if (!this->_internal_entry_point().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_entry_point());
  }

  // string factory = 2;
  if (!this->_internal_factory().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_factory());
  }

  // string account_facet = 3;
  if (!this->_internal_account_facet().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_account_facet());
  }

  // string verification_facet = 4;
  if (!this->_internal_verification_facet().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_verification_facet());
  }

  // string facet_registry = 5;
  if (!this->_internal_facet_registry().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_facet_registry());
  }

  // string default_fallback = 6;
  if (!this->_internal_default_fallback().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_default_fallback());
  }

  // string bytecode = 7;
  if (!this->_internal_bytecode().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bytecode());
  }

  // string public_key = 8;
  if (!this->_internal_public_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_public_key());
  }

  // uint32 salt = 9;
  if (this->_internal_salt() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_salt());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ContractAddressInput::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ContractAddressInput::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ContractAddressInput::GetClassData() const { return &_class_data_; }

void ContractAddressInput::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ContractAddressInput *>(to)->MergeFrom(
      static_cast<const ContractAddressInput &>(from));
}


void ContractAddressInput::MergeFrom(const ContractAddressInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TW.Barz.Proto.ContractAddressInput)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_entry_point().empty()) {
    _internal_set_entry_point(from._internal_entry_point());
  }
  if (!from._internal_factory().empty()) {
    _internal_set_factory(from._internal_factory());
  }
  if (!from._internal_account_facet().empty()) {
    _internal_set_account_facet(from._internal_account_facet());
  }
  if (!from._internal_verification_facet().empty()) {
    _internal_set_verification_facet(from._internal_verification_facet());
  }
  if (!from._internal_facet_registry().empty()) {
    _internal_set_facet_registry(from._internal_facet_registry());
  }
  if (!from._internal_default_fallback().empty()) {
    _internal_set_default_fallback(from._internal_default_fallback());
  }
  if (!from._internal_bytecode().empty()) {
    _internal_set_bytecode(from._internal_bytecode());
  }
  if (!from._internal_public_key().empty()) {
    _internal_set_public_key(from._internal_public_key());
  }
  if (from._internal_salt() != 0) {
    _internal_set_salt(from._internal_salt());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ContractAddressInput::CopyFrom(const ContractAddressInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TW.Barz.Proto.ContractAddressInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContractAddressInput::IsInitialized() const {
  return true;
}

void ContractAddressInput::InternalSwap(ContractAddressInput* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &entry_point_, lhs_arena,
      &other->entry_point_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &factory_, lhs_arena,
      &other->factory_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &account_facet_, lhs_arena,
      &other->account_facet_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &verification_facet_, lhs_arena,
      &other->verification_facet_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &facet_registry_, lhs_arena,
      &other->facet_registry_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &default_fallback_, lhs_arena,
      &other->default_fallback_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &bytecode_, lhs_arena,
      &other->bytecode_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &public_key_, lhs_arena,
      &other->public_key_, rhs_arena
  );
  swap(salt_, other->salt_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ContractAddressInput::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Barz_2eproto_getter, &descriptor_table_Barz_2eproto_once,
      file_level_metadata_Barz_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Proto
}  // namespace Barz
}  // namespace TW
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::TW::Barz::Proto::ContractAddressInput* Arena::CreateMaybeMessage< ::TW::Barz::Proto::ContractAddressInput >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TW::Barz::Proto::ContractAddressInput >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
